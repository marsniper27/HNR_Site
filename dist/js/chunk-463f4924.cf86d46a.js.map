{"version":3,"sources":["webpack:///./node_modules/@ethersproject/constants/lib.esm/hashes.js","webpack:///./node_modules/@ethersproject/random/lib.esm/random.js","webpack:///./node_modules/aes-js/index.js","webpack:///./node_modules/core-js/modules/es.object.define-property.js","webpack:///./node_modules/@ethersproject/constants/lib.esm/strings.js","webpack:///./src/views/Home.vue?eca8","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/address.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/array.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/boolean.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/null.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/number.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/string.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/tuple.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/fragments.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/abi-coder.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/interface.js","webpack:///./node_modules/@ethersproject/abstract-provider/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/abstract-provider/lib.esm/index.js","webpack:///./node_modules/@ethersproject/abstract-signer/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/abstract-signer/lib.esm/index.js","webpack:///./node_modules/@ethersproject/contracts/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/contracts/lib.esm/index.js","webpack:///./node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/message.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/typed-data.js","webpack:///./node_modules/@ethersproject/basex/lib.esm/index.js","webpack:///./node_modules/@ethersproject/sha2/lib.esm/types.js","webpack:///./node_modules/@ethersproject/sha2/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/sha2/lib.esm/sha2.js","webpack:///./node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/wordlist.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/lang-en.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/wordlists.js","webpack:///./node_modules/@ethersproject/hdnode/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/hdnode/lib.esm/index.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/utils.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/keystore.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/inspect.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/index.js","webpack:///./node_modules/@ethersproject/wallet/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/wallet/lib.esm/index.js","webpack:///./node_modules/@ethersproject/networks/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/networks/lib.esm/index.js","webpack:///./node_modules/@ethersproject/strings/lib.esm/idna.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/namehash.js","webpack:///./node_modules/@ethersproject/base64/lib.esm/base64.js","webpack:///./node_modules/@ethersproject/web/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/web/lib.esm/geturl.js","webpack:///./node_modules/@ethersproject/web/lib.esm/index.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/formatter.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/base-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/ws.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/websocket-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/alchemy-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/cloudflare-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/etherscan-provider.js","webpack:///./node_modules/@ethersproject/random/lib.esm/shuffle.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/fallback-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/ipc-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/infura-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/json-rpc-batch-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/nodesmith-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/pocket-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/web3-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/index.js","webpack:///./node_modules/@ethersproject/solidity/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/solidity/lib.esm/index.js","webpack:///./node_modules/@ethersproject/strings/lib.esm/bytes32.js","webpack:///./node_modules/@ethersproject/units/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/units/lib.esm/index.js","webpack:///./node_modules/ethers/lib.esm/_version.js","webpack:///./node_modules/ethers/lib.esm/ethers.js","webpack:///./node_modules/ethers/lib.esm/index.js","webpack:///./src/components/functions.js","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?2de8","webpack:///./src/views/Home.vue","webpack:///./node_modules/bech32/index.js","webpack:///./node_modules/@ethersproject/constants/lib.esm/addresses.js","webpack:///./node_modules/@ethersproject/random/lib.esm/_version.js"],"names":["HashZero","logger","anyGlobal","window","Error","error","global","crypto","msCrypto","randomBytes","length","throwArgumentError","result","Uint8Array","getRandomValues","warn","buffer","throwError","errors","UNSUPPORTED_OPERATION","operation","root","checkInt","value","parseInt","checkInts","arrayish","i","coerceArray","arg","copy","ArrayBuffer","isView","name","slice","Array","prototype","call","isArray","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","set","convertUtf8","toBytes","text","encodeURI","c","charCodeAt","push","substr","fromBytes","bytes","String","fromCharCode","join","convertHex","Hex","v","numberOfRounds","16","24","32","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","key","this","Object","defineProperty","_prepare","rounds","_Ke","_Kd","index","roundKeyCount","KC","tk","tt","rconpointer","t","r","encrypt","plaintext","a","decrypt","ciphertext","ModeOfOperationECB","description","_aes","block","ModeOfOperationCBC","iv","_lastCipherblock","j","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","pkcs7pad","data","padder","pkcs7strip","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utils","hex","utf8","padding","pkcs7","pad","strip","_arrayTest","module","exports","$","DESCRIPTORS","objectDefinePropertyModile","target","stat","forced","sham","f","EtherSymbol","render","_vm","_h","$createElement","_c","_self","attrs","staticClass","_v","_s","account","starAdded","_e","on","$event","Functions","CustomToken","connected","matics","disconnect","_m","staticStyle","Balance","claimDate","cashOut","directives","rawName","expression","domProps","composing","nodeName","createNode","messages","staticRenderFns","_defineProperty","obj","enumerable","configurable","writable","checkResultErrors","checkErrors","path","object","childPath","Coder","type","localName","dynamic","message","wordSize","_data","_dataLength","_padding","writer","_writeData","paddingOffset","from","BUFFER_OVERRUN","offset","_getValue","coerceFunc","allowLoose","_offset","match","toNumber","_coerceFunc","coerce","loose","alignedLength","Math","ceil","_peekBytes","readBytes","super","_throwError","writeValue","reader","readValue","toHexString","coder","undefined","defaultValue","encode","decode","pack","coders","values","arrayValues","unique","map","INVALID_ARGUMENT","argument","staticWriter","dynamicWriter","updateFuncs","forEach","dynamicOffset","updateFunc","writeUpdatableValue","baseOffset","func","appendWriter","unpack","baseReader","subReader","offsetReader","code","baseType","uniqueNames","reduce","accum","get","freeze","defaultChild","count","checkArgumentCount","isZero","writeBytes","size","substring","signed","maxUintValue","mask","bounds","gt","lt","add","mul","toTwos","fromTwos","types","_constructorGuard","ModifiersBytes","calldata","memory","storage","ModifiersNest","checkModifier","indexOf","parseParamType","param","allowIndexed","originalParam","newNode","parent","node","state","allowType","indexed","replace","allowParams","verifyType","components","child","allowName","allowArray","sibling","readArray","populate","params","FormatTypes","sighash","minimal","full","json","paramTypeArray","RegExp","constructorGuard","arrayLength","arrayChildren","fromObject","_isParamType","format","comp","JSON","parse","stringify","fromString","isParamType","ParamTypify","parseParams","allowIndex","splitNesting","_isFragment","isFragment","EventFragment","ErrorFragment","trim","split","anonymous","inputs","input","isEventFragment","verifyIdentifier","regexParen","modifier","parseGas","gas","comps","parseModifiers","constant","payable","stateMutability","console","log","verifyState","isConstructorFragment","parens","outputs","output","toString","isFunctionFragment","returns","checkForbidden","fragment","sig","isErrorFragment","regexIdentifier","depth","paramTypeBytes","paramTypeNumber","checkNew","_getCoder","component","_getWordSize","_getWriter","_getReader","defaultAbiCoder","_isIndexed","BuiltinErrors","signature","reason","wrapAccessError","property","wrap","fragments","abi","filter","bucket","deploy","functions","events","address","eventFragment","nameOrSignatureOrSighash","getSighash","matching","keys","nameOrSignatureOrTopic","topichash","toLowerCase","getEventTopic","constructor","getFunction","getError","_","getEvent","_abiCoder","_encodeParams","_decodeParams","functionFragment","errorArgs","errorName","errorSignature","selector","builtin","CALL_EXCEPTION","method","UNEXPECTED_ARGUMENT","topics","encodeTopic","pop","dataTypes","dataValues","topicHash","expected","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","hash","tx","args","topic","decodeEventLog","hexData","errorFragment","_isInterface","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","_isForkEvent","checkAbstract","gasPrice","getBlock","getGasPrice","catch","maxFeePerGas","maxPriorityFeePerGas","baseFeePerGas","eventName","listener","off","_isProvider","allowedTransactionKeys","forwardErrors","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","blockTag","_checkProvider","provider","getBalance","getAddress","getTransactionCount","transaction","checkTransaction","estimateGas","populateTransaction","signedTx","signTransaction","sendTransaction","network","getNetwork","chainId","getFeeData","resolveName","all","to","hasEip1559","feeData","nonce","gasLimit","UNPREDICTABLE_GAS_LIMIT","getChainId","results","_isSigner","_fail","domain","accessList","customData","resolver","nameOrPromise","resolveAddresses","paramType","makeError","contract","overrides","signer","override","check","resolved","resolvedAddress","interface","encodeFunctionData","ro","intrinsic","roValue","leftovers","l","buildPopulate","buildEstimate","signerOrProvider","addContractWait","wait","bind","confirmations","receipt","logs","event","parsed","parseLog","eventSignature","removeListener","blockHash","getTransaction","transactionHash","getTransactionReceipt","buildCall","collapseSimple","deployTransaction","_deployed","decodeFunctionResult","buildSend","txRequest","buildDefault","getEventTag","tag","_listeners","once","item","listenerCount","argsCopy","setTimeout","ErrorRunningEvent","contractInterface","prepareEvent","decodeError","addressOrName","Contract","isSigner","isProvider","uniqueFilters","filters","encodeFilterTopics","uniqueSignatures","callStatic","signatures","isInterface","_deployedPromise","getCode","contractAddress","deployed","isIndexed","runningEvent","_runningEvents","_normalizeRunningEvent","emit","_wrappedEmits","_checkRunningEvents","addListener","wrappedEmit","_wrapEvent","getEmit","fromBlockOrBlockhash","toBlock","_getRunningEvent","fromBlock","getLogs","_addEventListener","run","listeners","removeAllListeners","bytecode","bytecodeHex","encodeDeploy","unsignedTx","getDeployTransaction","getContract","compilerOutput","MISSING_ARGUMENT","evm","getInterface","Zero","NegativeOne","throwFault","fault","NUMERIC_FAULT","zeros","getMultiplier","decimals","formatFixed","multiplier","negative","fraction","mod","whole","div","parseFixed","wholeValue","fractionValue","wei","width","_multiplier","_hex","_value","_isFixedNumber","other","_checkFormat","b","fromValue","sub","hasFraction","isNegative","subUnsafe","ONE","toFormat","addUnsafe","factor","bump","BUMP","mulUnsafe","floor","divUnsafe","parseFloat","fixedFormat","numeric","decimal","messagePrefix","hashMessage","fill","One","MaxUint256","hexPadRight","padOffset","hexTrue","hexFalse","domainFieldTypes","version","verifyingContract","salt","domainFieldNames","checkString","domainChecks","getBaseEncoder","boundsUpper","boundsLower","encodeType","fields","links","parents","subtypes","field","encoder","primaryTypes","n","checkCircular","found","subtype","primaryType","st","sort","_types","_encoderCache","_getEncoder","subEncoder","getEncoder","encodedType","unshift","encodeData","hashStruct","callback","_visit","domainFields","EIP712Domain","hashDomain","ensCache","visit","domainValues","domainTypes","typesWithDomain","alphabet","charAt","_alphabetMap","source","digits","carry","base","string","k","_leader","q","TypeError","byte","reverse","Base58","SupportedAlgorithm","ripemd160","update","digest","sha256","sha512","computeHmac","algorithm","hmac","pbkdf2","password","iterations","keylen","hashAlgorithm","hLen","DK","block1","T","U","destPos","len","exportWordlist","locale","mnemonic","words","wordlist","word","getWord","getWordIndex","lang","_ethers","wordlists","loadWords","langEn","register","en","MasterSecret","HardenedBit","getUpperMask","bits","getLowerMask","bytes32","base58check","getWordlist","defaultPath","privateKey","publicKey","parentFingerprint","chainCode","mnemonicOrPath","signingKey","compressedPublicKey","I","IL","IR","ki","Ki","ek","_addPoint","srcMnemonic","phrase","fingerprint","shift","_derive","seed","seedArray","entropyToMnemonic","mnemonicToEntropy","_fromSeed","mnemonicToSeed","extendedKey","NFKD","checkNormalize","entropy","normalize","bit","entropyBits","checksumBits","checksumMask","checksum","indices","remainingBits","isValidMnemonic","getAccountPath","looseArrayify","hexString","zpad","getPassword","NFKC","searchPath","currentChild","matchingChild","uuidV4","hasMnemonic","_isKeystoreAccount","_decrypt","cipher","aesCtr","_getAccount","computedMAC","mnemonicKey","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","fromMnemonic","derivePath","pbkdf2Sync","passwordBytes","dkLen","prfFunc","_computeKdfKey","pbkdf2Func","scryptFunc","progressCallback","kdf","N","p","prf","decryptSync","syncScrypt","scrypt","options","client","random","uuidRandom","uuid","derivedKey","macPrefix","mac","id","Crypto","cipherparams","kdfparams","dklen","now","Date","timestamp","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","_isCrowdsaleAccount","ethaddr","encseed","encryptedSeed","aesCbc","seedHex","seedHexBytes","isCrowdsaleWallet","isKeystoreWallet","getJsonWalletAddress","decryptJsonWallet","decryptJsonWalletSync","isAccount","isSigningKey","curve","_mnemonic","_signingKey","signDigest","populated","resolveNames","extraEntropy","verifyMessage","verifyTypedData","isRenetworkable","ethDefaultProvider","providers","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","AlchemyProvider","alchemy","PocketProvider","skip","CloudflareProvider","FallbackProvider","quorum","renetwork","etcDefaultProvider","url","JsonRpcProvider","homestead","ensAddress","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","kintsugi","classic","classicMorden","classicTestnet","classicKotti","xdai","matic","maticmum","optimism","arbitrum","bnb","bnbt","standard","defaultProvider","bytes2","createTable","lo","pair","createRangeTable","hi","h","matchMap","ranges","range","d","Table_A_1_ranges","Table_B_1_flags","Table_B_2_ranges","s","Table_B_2_lut_abs","Table_B_2_lut_rel","Table_B_2_complex","Table_C_ranges","flatten","_nameprepTableA1","codepoint","_nameprepTableB2","codes","complex","_nameprepTableC","nameprep","codesTableB2","Zeros","Partition","isValidName","namehash","current","partition","label","textData","atob","btoa","getUrl","href","request","headers","body","skipFetchSetup","mode","cache","credentials","redirect","referrer","response","fetch","arrayBuffer","statusCode","status","statusMessage","statusText","staller","duration","bodyify","_fetchData","connection","processFunc","attemptLimit","throttleLimit","assertArgument","throttleCallback","throttleSlotInterval","allow304","timeout","allowGzip","user","allowInsecureAuthentication","authorization","reData","dataMatch","SERVER_ERROR","requestBody","requestMethod","flatHeaders","header","runningTimeout","timer","promise","TIMEOUT","cancel","clearTimeout","runningFetch","attempt","location","tryAgain","stall","retryAfter","pow","serverError","throttleRetry","race","fetchJson","processJsonFunc","updated","hasContentType","poll","ceiling","interval","retryLimit","oncePoll","onceBlock","formats","getDefaultFormats","bigNumber","number","strictData","allowNull","blockNumber","transactionIndex","uint256","creates","raw","transactionRequest","receiptLog","arrayOf","logIndex","gasUsed","logsBloom","cumulativeGasUsed","effectiveGasPrice","parentHash","difficulty","miner","extraData","transactions","blockWithTransactions","transactionResponse","filterLog","removed","boolean","allowFalsish","strict","author","_difficulty","_block","networkId","byzantium","checkKey","checkValue","nullValue","replaceValue","array","isCommunityResourcable","isCommunityResource","throttleMessage","showThrottleMessage","checkTopic","serializeTopics","sorted","deserializeTopics","isForkEvent","getTime","PollableEvents","coinInfos","symbol","p2pkh","p2sh","prefix","ilk","bytes32ify","base58Encode","matchers","_parseString","_parseBytes","formatter","parameters","coinType","hexBytes","coinInfo","toWords","callAddress","_fetchBytes","_getAddress","linkage","avatar","getText","content","owner","_resolvedAddress","addr","tokenId","tokenOwner","balance","metadataUrl","metadata","image","ipfs","swarm","keyBytes","defaultFormatter","nextPollId","_events","_emitted","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","_maxInternalBlockNumber","_lastBlockNumber","_pollingInterval","_fastQueryDate","_network","UNKNOWN_ERROR","NETWORK_ERROR","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","pollId","runners","_getInternalBlockNumber","pollingInterval","abs","previousBlockNumber","eventBlockNumber","runner","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","getBlockNumber","_waitForTransaction","replaceable","cancelFuncs","alreadyDone","minedHandler","lastBlockNumber","startBlock","scannedBlock","replaceHandler","mined","getBlockWithTransactions","ti","waitForTransaction","eq","TRANSACTION_REPLACED","cancelled","replacement","_wrapTransaction","unref","_getBlockTag","position","expectedHash","returnedHash","confirms","signedTransaction","hexTx","_getTransactionRequest","blockHashOrBlockTag","includeTransactions","blockWithTxs","_getBlock","_getFilter","_getResolver","getResolver","reverseName","resolverAddress","nameOrAddress","getAvatar","NOT_IMPLEMENTED","pollable","_startEvent","stopped","eventTag","_stopEvent","errorGas","checkError","responseText","getResult","payload","getLowerCase","addressOrIndex","UncheckedJsonRpcSigner","_address","_index","send","accounts","fromAddress","estimate","sender","hexlifyTransaction","sendUncheckedTransaction","getPayload","networkOrReady","_nextId","_eventLoopCache","_cache","_uncachedDetectNetwork","getSigner","connectUnchecked","jsonrpc","action","prepareRequest","_startPending","_pendingFilter","self","pendingFilter","filterId","hashes","seq","allowExtra","allowed","WS","WebSocket","NextId","_wsReady","_websocket","onopen","_requests","onmessage","messageEvent","_subs","subscription","fauxPoll","_detectNetwork","rid","subIdPromise","_subIds","subId","_subscribe","emitReceipt","readyState","CONNECTING","onerror","close","_super","create","apiKey","defaultApiKey","host","arguments","getTransactionPostData","maxFeePerGs","storageKeys","getJsonResult","checkLogTag","getBaseUrl","query","baseUrl","apikey","post","getPostUrl","getPostData","procFunc","payloadStr","txhash","postData","topic0","blocks","ethusd","endBlock","startblock","endblock","timeStamp","shuffled","tmp","checkNetworks","median","maxDelta","middle","serialize","isBigNumber","nextRid","getPromise","ForwardErrors","ForwardProperties","exposeDebugConfig","config","weight","start","normalizedTally","configs","tally","getProcessFunc","_highestBlockNumber","waitForSync","getRunner","currentBlockNumber","getEtherPrice","getStorageAt","providerConfigs","configOrProvider","stallTimeout","priority","total","first","t0","inflightWeight","backend","waiting","errorCode","props","IpcProvider","defaultProjectId","projectId","projectSecret","apiKeyObj","_pendingBatch","inflightRequest","_pendingBatchAggregator","batch","inflight","defaultApplicationIds","applicationId","loadBalancer","applicationSecretKey","buildWeb3LegacyFetcher","sendFunc","fetcher","buildEip1193Fetcher","jsonRpcFetchFunc","subprovider","isMetaMask","sendAsync","getDefaultProvider","NodesmithProvider","Web3Provider","regexBytes","regexNumber","regexArray","_pack","byteLength","tight","keccak256","formatBytes32String","parseBytes32String","names","commify","suffix","formatted","formatUnits","unitName","parseUnits","formatEther","parseEther","ether","HNRContractAbi","HNRContractAddress","setChain","ethereum","chainSet","$router","go","fasle","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","tokenAddress","tokenSymbol","tokenDecimals","wasAdded","cashoutAll","web3","HNRContractInstance","eth","methods","createNodeWithTokens","getMetamask","open","balanceOf","ethers","lpContractInstance","getAccounts","ALPHABET","ALPHABET_MAP","z","x","polymodStep","pre","prefixChk","chk","LIMIT","__decode","str","lowered","uppered","toUpperCase","lastIndexOf","wordChars","decodeUnsafe","res","convert","inBits","outBits","maxV","toWordsUnsafe","fromWordsUnsafe","fromWords","AddressZero"],"mappings":"gHAAA,kCAAO,MAAMA,EAAW,sE,qCCAxB,sFAIA,MAAMC,EAAS,IAAI,OAAO,QAG1B,IAAIC,EAAY,KAChB,IAEI,GADAA,EAAYC,OACK,MAAbD,EACA,MAAM,IAAIE,MAAM,YAGxB,MAAOC,GACH,IAEI,GADAH,EAAYI,EACK,MAAbJ,EACA,MAAM,IAAIE,MAAM,YAGxB,MAAOC,GACHH,EAAY,IAGpB,IAAIK,EAASL,EAAUK,QAAUL,EAAUM,SAWpC,SAASC,EAAYC,IACpBA,GAAU,GAAKA,EAAS,MAASA,EAAS,GAAMA,GAAUA,IAC1DT,EAAOU,mBAAmB,iBAAkB,SAAUD,GAE1D,MAAME,EAAS,IAAIC,WAAWH,GAE9B,OADAH,EAAOO,gBAAgBF,GAChB,eAASA,GAhBfL,GAAWA,EAAOO,kBACnBb,EAAOc,KAAK,gDACZR,EAAS,CACLO,gBAAiB,SAAUE,GACvB,OAAOf,EAAOgB,WAAW,oCAAqC,OAAOC,OAAOC,sBAAuB,CAC/FC,UAAW,gC,yDC7B3B,SAAUC,GAEN,SAASC,EAASC,GACd,OAAQC,SAASD,KAAWA,EAGhC,SAASE,EAAUC,GACf,IAAKJ,EAASI,EAAShB,QAAW,OAAO,EAEzC,IAAK,IAAIiB,EAAI,EAAGA,EAAID,EAAShB,OAAQiB,IACjC,IAAKL,EAASI,EAASC,KAAOD,EAASC,GAAK,GAAKD,EAASC,GAAK,IAC3D,OAAO,EAIf,OAAO,EAGX,SAASC,EAAYC,EAAKC,GAGtB,GAAID,EAAIb,QAAUe,YAAYC,OAAOH,IAAqB,eAAbA,EAAII,KAU7C,OARIH,IAEID,EADAA,EAAIK,MACEL,EAAIK,QAEJC,MAAMC,UAAUF,MAAMG,KAAKR,IAIlCA,EAIX,GAAIM,MAAMG,QAAQT,GAAM,CACpB,IAAKJ,EAAUI,GACX,MAAM,IAAIzB,MAAM,iCAAmCyB,GAGvD,OAAO,IAAIhB,WAAWgB,GAI1B,GAAIP,EAASO,EAAInB,SAAWe,EAAUI,GAClC,OAAO,IAAIhB,WAAWgB,GAG1B,MAAM,IAAIzB,MAAM,iCAGpB,SAASmC,EAAY7B,GACjB,OAAO,IAAIG,WAAWH,GAG1B,SAAS8B,EAAUC,EAAaC,EAAaC,EAAaC,EAAaC,GAChD,MAAfD,GAAoC,MAAbC,IAEnBJ,EADAA,EAAYP,MACEO,EAAYP,MAAMU,EAAaC,GAE/BV,MAAMC,UAAUF,MAAMG,KAAKI,EAAaG,EAAaC,IAG3EH,EAAYI,IAAIL,EAAaE,GAKjC,IAAII,EAAc,WACd,SAASC,EAAQC,GACb,IAAIrC,EAAS,GAAIe,EAAI,EACrBsB,EAAOC,UAAUD,GACjB,MAAOtB,EAAIsB,EAAKvC,OAAQ,CACpB,IAAIyC,EAAIF,EAAKG,WAAWzB,KAGd,KAANwB,GACAvC,EAAOyC,KAAK7B,SAASyB,EAAKK,OAAO3B,EAAG,GAAI,KACxCA,GAAK,GAILf,EAAOyC,KAAKF,GAIpB,OAAOvB,EAAYhB,GAGvB,SAAS2C,EAAUC,GACf,IAAI5C,EAAS,GAAIe,EAAI,EAErB,MAAOA,EAAI6B,EAAM9C,OAAQ,CACrB,IAAIyC,EAAIK,EAAM7B,GAEVwB,EAAI,KACJvC,EAAOyC,KAAKI,OAAOC,aAAaP,IAChCxB,KACOwB,EAAI,KAAOA,EAAI,KACtBvC,EAAOyC,KAAKI,OAAOC,cAAmB,GAAJP,IAAa,EAAqB,GAAfK,EAAM7B,EAAI,KAC/DA,GAAK,IAELf,EAAOyC,KAAKI,OAAOC,cAAmB,GAAJP,IAAa,IAAuB,GAAfK,EAAM7B,EAAI,KAAc,EAAqB,GAAf6B,EAAM7B,EAAI,KAC/FA,GAAK,GAIb,OAAOf,EAAO+C,KAAK,IAGvB,MAAO,CACHX,QAASA,EACTO,UAAWA,GA5CD,GAgDdK,EAAa,WACb,SAASZ,EAAQC,GAEb,IADA,IAAIrC,EAAS,GACJe,EAAI,EAAGA,EAAIsB,EAAKvC,OAAQiB,GAAK,EAClCf,EAAOyC,KAAK7B,SAASyB,EAAKK,OAAO3B,EAAG,GAAI,KAG5C,OAAOf,EAIX,IAAIiD,EAAM,mBAEV,SAASN,EAAUC,GAEX,IADA,IAAI5C,EAAS,GACJe,EAAI,EAAGA,EAAI6B,EAAM9C,OAAQiB,IAAK,CACnC,IAAImC,EAAIN,EAAM7B,GACdf,EAAOyC,KAAKQ,GAAS,IAAJC,IAAa,GAAKD,EAAQ,GAAJC,IAE3C,OAAOlD,EAAO+C,KAAK,IAG3B,MAAO,CACHX,QAASA,EACTO,UAAWA,GAxBF,GA8BbQ,EAAiB,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAGtCC,EAAO,CAAC,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KAGte1B,GAEpB,IADA,IAAI5C,EAAS,GACJe,EAAI,EAAGA,EAAI6B,EAAM9C,OAAQiB,GAAK,EACnCf,EAAOyC,KACFG,EAAM7B,IAAU,GAChB6B,EAAM7B,EAAI,IAAM,GAChB6B,EAAM7B,EAAI,IAAO,EACjB6B,EAAM7B,EAAI,IAGnB,OAAOf,EAGX,IAAIuE,EAAM,SAASC,GACf,KAAMC,gBAAgBF,GAClB,MAAM/E,MAAM,uCAGhBkF,OAAOC,eAAeF,KAAM,MAAO,CAC/B9D,MAAOK,EAAYwD,GAAK,KAG5BC,KAAKG,YAITL,EAAI/C,UAAUoD,SAAW,WAErB,IAAIC,EAAS1B,EAAesB,KAAKD,IAAI1E,QACrC,GAAc,MAAV+E,EACA,MAAM,IAAIrF,MAAM,iDAIpBiF,KAAKK,IAAM,GAGXL,KAAKM,IAAM,GAEX,IAAK,IAAIhE,EAAI,EAAGA,GAAK8D,EAAQ9D,IACzB0D,KAAKK,IAAIrC,KAAK,CAAC,EAAG,EAAG,EAAG,IACxBgC,KAAKM,IAAItC,KAAK,CAAC,EAAG,EAAG,EAAG,IAG5B,IAOIuC,EAPAC,EAA+B,GAAdJ,EAAS,GAC1BK,EAAKT,KAAKD,IAAI1E,OAAS,EAGvBqF,EAAKb,EAAeG,KAAKD,KAI7B,IAASzD,EAAI,EAAGA,EAAImE,EAAInE,IACpBiE,EAAQjE,GAAK,EACb0D,KAAKK,IAAIE,GAAOjE,EAAI,GAAKoE,EAAGpE,GAC5B0D,KAAKM,IAAIF,EAASG,GAAOjE,EAAI,GAAKoE,EAAGpE,GAIzC,IACYqE,EADRC,EAAc,EACdC,EAAIJ,EACR,MAAOI,EAAIL,EAAe,CAUtB,GATAG,EAAKD,EAAGD,EAAK,GACbC,EAAG,IAAQ3B,EAAG4B,GAAM,GAAM,MAAS,GACxB5B,EAAG4B,GAAO,EAAK,MAAS,GACxB5B,EAAe,IAAZ4B,IAAsB,EACzB5B,EAAG4B,GAAM,GAAM,KACf7B,EAAK8B,IAAgB,GAChCA,GAAe,EAGL,GAANH,EACA,IAASnE,EAAI,EAAGA,EAAImE,EAAInE,IACpBoE,EAAGpE,IAAMoE,EAAGpE,EAAI,OAIjB,CACH,IAASA,EAAI,EAAGA,EAAKmE,EAAK,EAAInE,IAC1BoE,EAAGpE,IAAMoE,EAAGpE,EAAI,GAEpBqE,EAAKD,EAAID,EAAK,EAAK,GAEnBC,EAAGD,EAAK,IAAO1B,EAAe,IAAZ4B,GACH5B,EAAG4B,GAAO,EAAK,MAAU,EACzB5B,EAAG4B,GAAM,GAAM,MAAS,GACxB5B,EAAG4B,GAAM,GAAM,MAAS,GAEvC,IAASrE,EAAKmE,EAAK,EAAK,EAAGnE,EAAImE,EAAInE,IAC/BoE,EAAGpE,IAAMoE,EAAGpE,EAAI,GAKpBA,EAAI,EACR,MAAOA,EAAImE,GAAMI,EAAIL,EACjBM,EAAID,GAAK,EACT/C,EAAI+C,EAAI,EACRb,KAAKK,IAAIS,GAAGhD,GAAK4C,EAAGpE,GACpB0D,KAAKM,IAAIF,EAASU,GAAGhD,GAAK4C,EAAGpE,KAC7BuE,IAKR,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAQU,IACxB,IAAK,IAAIhD,EAAI,EAAGA,EAAI,EAAGA,IACnB6C,EAAKX,KAAKM,IAAIQ,GAAGhD,GACjBkC,KAAKM,IAAIQ,GAAGhD,GAAM2B,EAAIkB,GAAM,GAAM,KAChBjB,EAAIiB,GAAM,GAAM,KAChBhB,EAAIgB,GAAO,EAAK,KAChBf,EAAgB,IAAZe,IAKlCb,EAAI/C,UAAUgE,QAAU,SAASC,GAC7B,GAAwB,IAApBA,EAAU3F,OACV,MAAM,IAAIN,MAAM,6CAQpB,IALA,IAAIqF,EAASJ,KAAKK,IAAIhF,OAAS,EAC3B4F,EAAI,CAAC,EAAG,EAAG,EAAG,GAGdJ,EAAIhB,EAAemB,GACd1E,EAAI,EAAGA,EAAI,EAAGA,IACnBuE,EAAEvE,IAAM0D,KAAKK,IAAI,GAAG/D,GAIxB,IAAK,IAAIwE,EAAI,EAAGA,EAAIV,EAAQU,IAAK,CAC7B,IAASxE,EAAI,EAAGA,EAAI,EAAGA,IACnB2E,EAAE3E,GAAM2C,EAAI4B,EAAGvE,IAAe,GAAM,KAC5B4C,EAAI2B,GAAGvE,EAAI,GAAK,IAAM,GAAM,KAC5B6C,EAAI0B,GAAGvE,EAAI,GAAK,IAAO,EAAK,KAC5B8C,EAA4B,IAAxByB,GAAGvE,EAAI,GAAK,IAChB0D,KAAKK,IAAIS,GAAGxE,GAExBuE,EAAII,EAAEpE,QAIV,IAA8B8D,EAA1BpF,EAAS2B,EAAY,IACzB,IAASZ,EAAI,EAAGA,EAAI,EAAGA,IACnBqE,EAAKX,KAAKK,IAAID,GAAQ9D,GACtBf,EAAO,EAAIe,GAA2D,KAAjDyC,EAAG8B,EAAGvE,IAAe,GAAM,KAASqE,GAAM,IAC/DpF,EAAO,EAAIe,EAAI,GAAuD,KAAjDyC,EAAG8B,GAAGvE,EAAI,GAAK,IAAM,GAAM,KAASqE,GAAM,IAC/DpF,EAAO,EAAIe,EAAI,GAAuD,KAAjDyC,EAAG8B,GAAGvE,EAAI,GAAK,IAAO,EAAK,KAASqE,GAAO,GAChEpF,EAAO,EAAIe,EAAI,GAAuD,KAAjDyC,EAA2B,IAAxB8B,GAAGvE,EAAI,GAAK,IAAqBqE,GAG7D,OAAOpF,GAGXuE,EAAI/C,UAAUmE,QAAU,SAASC,GAC7B,GAAyB,IAArBA,EAAW9F,OACX,MAAM,IAAIN,MAAM,8CAQpB,IALA,IAAIqF,EAASJ,KAAKM,IAAIjF,OAAS,EAC3B4F,EAAI,CAAC,EAAG,EAAG,EAAG,GAGdJ,EAAIhB,EAAesB,GACd7E,EAAI,EAAGA,EAAI,EAAGA,IACnBuE,EAAEvE,IAAM0D,KAAKM,IAAI,GAAGhE,GAIxB,IAAK,IAAIwE,EAAI,EAAGA,EAAIV,EAAQU,IAAK,CAC7B,IAASxE,EAAI,EAAGA,EAAI,EAAGA,IACnB2E,EAAE3E,GAAM+C,EAAIwB,EAAGvE,IAAgB,GAAM,KAC7BgD,EAAIuB,GAAGvE,EAAI,GAAK,IAAM,GAAM,KAC5BiD,EAAIsB,GAAGvE,EAAI,GAAK,IAAO,EAAK,KAC5BkD,EAA4B,IAAxBqB,GAAGvE,EAAI,GAAK,IAChB0D,KAAKM,IAAIQ,GAAGxE,GAExBuE,EAAII,EAAEpE,QAIV,IAA8B8D,EAA1BpF,EAAS2B,EAAY,IACzB,IAASZ,EAAI,EAAGA,EAAI,EAAGA,IACnBqE,EAAKX,KAAKM,IAAIF,GAAQ9D,GACtBf,EAAO,EAAIe,GAA4D,KAAlD0C,EAAI6B,EAAGvE,IAAe,GAAM,KAASqE,GAAM,IAChEpF,EAAO,EAAIe,EAAI,GAAwD,KAAlD0C,EAAI6B,GAAGvE,EAAI,GAAK,IAAM,GAAM,KAASqE,GAAM,IAChEpF,EAAO,EAAIe,EAAI,GAAwD,KAAlD0C,EAAI6B,GAAGvE,EAAI,GAAK,IAAO,EAAK,KAASqE,GAAO,GACjEpF,EAAO,EAAIe,EAAI,GAAwD,KAAlD0C,EAA4B,IAAxB6B,GAAGvE,EAAI,GAAK,IAAqBqE,GAG9D,OAAOpF,GAOX,IAAI6F,EAAqB,SAASrB,GAC9B,KAAMC,gBAAgBoB,GAClB,MAAMrG,MAAM,uCAGhBiF,KAAKqB,YAAc,wBACnBrB,KAAKpD,KAAO,MAEZoD,KAAKsB,KAAO,IAAIxB,EAAIC,IAGxBqB,EAAmBrE,UAAUgE,QAAU,SAASC,GAG5C,GAFAA,EAAYzE,EAAYyE,GAEnBA,EAAU3F,OAAS,KAAQ,EAC5B,MAAM,IAAIN,MAAM,yDAMpB,IAHA,IAAIoG,EAAajE,EAAY8D,EAAU3F,QACnCkG,EAAQrE,EAAY,IAEfZ,EAAI,EAAGA,EAAI0E,EAAU3F,OAAQiB,GAAK,GACvCa,EAAU6D,EAAWO,EAAO,EAAGjF,EAAGA,EAAI,IACtCiF,EAAQvB,KAAKsB,KAAKP,QAAQQ,GAC1BpE,EAAUoE,EAAOJ,EAAY7E,GAGjC,OAAO6E,GAGXC,EAAmBrE,UAAUmE,QAAU,SAASC,GAG5C,GAFAA,EAAa5E,EAAY4E,GAEpBA,EAAW9F,OAAS,KAAQ,EAC7B,MAAM,IAAIN,MAAM,0DAMpB,IAHA,IAAIiG,EAAY9D,EAAYiE,EAAW9F,QACnCkG,EAAQrE,EAAY,IAEfZ,EAAI,EAAGA,EAAI6E,EAAW9F,OAAQiB,GAAK,GACxCa,EAAUgE,EAAYI,EAAO,EAAGjF,EAAGA,EAAI,IACvCiF,EAAQvB,KAAKsB,KAAKJ,QAAQK,GAC1BpE,EAAUoE,EAAOP,EAAW1E,GAGhC,OAAO0E,GAOX,IAAIQ,EAAqB,SAASzB,EAAK0B,GACnC,KAAMzB,gBAAgBwB,GAClB,MAAMzG,MAAM,uCAMhB,GAHAiF,KAAKqB,YAAc,wBACnBrB,KAAKpD,KAAO,MAEP6E,GAGE,GAAiB,IAAbA,EAAGpG,OACV,MAAM,IAAIN,MAAM,4DAHhB0G,EAAKvE,EAAY,IAMrB8C,KAAK0B,iBAAmBnF,EAAYkF,GAAI,GAExCzB,KAAKsB,KAAO,IAAIxB,EAAIC,IAGxByB,EAAmBzE,UAAUgE,QAAU,SAASC,GAG5C,GAFAA,EAAYzE,EAAYyE,GAEnBA,EAAU3F,OAAS,KAAQ,EAC5B,MAAM,IAAIN,MAAM,yDAMpB,IAHA,IAAIoG,EAAajE,EAAY8D,EAAU3F,QACnCkG,EAAQrE,EAAY,IAEfZ,EAAI,EAAGA,EAAI0E,EAAU3F,OAAQiB,GAAK,GAAI,CAC3Ca,EAAU6D,EAAWO,EAAO,EAAGjF,EAAGA,EAAI,IAEtC,IAAK,IAAIqF,EAAI,EAAGA,EAAI,GAAIA,IACpBJ,EAAMI,IAAM3B,KAAK0B,iBAAiBC,GAGtC3B,KAAK0B,iBAAmB1B,KAAKsB,KAAKP,QAAQQ,GAC1CpE,EAAU6C,KAAK0B,iBAAkBP,EAAY7E,GAGjD,OAAO6E,GAGXK,EAAmBzE,UAAUmE,QAAU,SAASC,GAG5C,GAFAA,EAAa5E,EAAY4E,GAEpBA,EAAW9F,OAAS,KAAQ,EAC7B,MAAM,IAAIN,MAAM,0DAMpB,IAHA,IAAIiG,EAAY9D,EAAYiE,EAAW9F,QACnCkG,EAAQrE,EAAY,IAEfZ,EAAI,EAAGA,EAAI6E,EAAW9F,OAAQiB,GAAK,GAAI,CAC5Ca,EAAUgE,EAAYI,EAAO,EAAGjF,EAAGA,EAAI,IACvCiF,EAAQvB,KAAKsB,KAAKJ,QAAQK,GAE1B,IAAK,IAAII,EAAI,EAAGA,EAAI,GAAIA,IACpBX,EAAU1E,EAAIqF,GAAKJ,EAAMI,GAAK3B,KAAK0B,iBAAiBC,GAGxDxE,EAAUgE,EAAYnB,KAAK0B,iBAAkB,EAAGpF,EAAGA,EAAI,IAG3D,OAAO0E,GAOX,IAAIY,EAAqB,SAAS7B,EAAK0B,EAAII,GACvC,KAAM7B,gBAAgB4B,GAClB,MAAM7G,MAAM,uCAMhB,GAHAiF,KAAKqB,YAAc,kBACnBrB,KAAKpD,KAAO,MAEP6E,GAGE,GAAiB,IAAbA,EAAGpG,OACV,MAAM,IAAIN,MAAM,2DAHhB0G,EAAKvE,EAAY,IAMhB2E,IAAeA,EAAc,GAElC7B,KAAK6B,YAAcA,EAEnB7B,KAAK8B,eAAiBvF,EAAYkF,GAAI,GAEtCzB,KAAKsB,KAAO,IAAIxB,EAAIC,IAGxB6B,EAAmB7E,UAAUgE,QAAU,SAASC,GAC5C,GAAKA,EAAU3F,OAAS2E,KAAK6B,aAAgB,EACzC,MAAM,IAAI9G,MAAM,sDAMpB,IAHA,IAEIgH,EAFAC,EAAYzF,EAAYyE,GAAW,GAG9B1E,EAAI,EAAGA,EAAI0F,EAAU3G,OAAQiB,GAAK0D,KAAK6B,YAAa,CACzDE,EAAa/B,KAAKsB,KAAKP,QAAQf,KAAK8B,gBACpC,IAAK,IAAIH,EAAI,EAAGA,EAAI3B,KAAK6B,YAAaF,IAClCK,EAAU1F,EAAIqF,IAAMI,EAAWJ,GAInCxE,EAAU6C,KAAK8B,eAAgB9B,KAAK8B,eAAgB,EAAG9B,KAAK6B,aAC5D1E,EAAU6E,EAAWhC,KAAK8B,eAAgB,GAAK9B,KAAK6B,YAAavF,EAAGA,EAAI0D,KAAK6B,aAGjF,OAAOG,GAGXJ,EAAmB7E,UAAUmE,QAAU,SAASC,GAC5C,GAAKA,EAAW9F,OAAS2E,KAAK6B,aAAgB,EAC1C,MAAM,IAAI9G,MAAM,uDAMpB,IAHA,IAEIgH,EAFAf,EAAYzE,EAAY4E,GAAY,GAG/B7E,EAAI,EAAGA,EAAI0E,EAAU3F,OAAQiB,GAAK0D,KAAK6B,YAAa,CACzDE,EAAa/B,KAAKsB,KAAKP,QAAQf,KAAK8B,gBAEpC,IAAK,IAAIH,EAAI,EAAGA,EAAI3B,KAAK6B,YAAaF,IAClCX,EAAU1E,EAAIqF,IAAMI,EAAWJ,GAInCxE,EAAU6C,KAAK8B,eAAgB9B,KAAK8B,eAAgB,EAAG9B,KAAK6B,aAC5D1E,EAAUgE,EAAYnB,KAAK8B,eAAgB,GAAK9B,KAAK6B,YAAavF,EAAGA,EAAI0D,KAAK6B,aAGlF,OAAOb,GAMX,IAAIiB,EAAqB,SAASlC,EAAK0B,GACnC,KAAMzB,gBAAgBiC,GAClB,MAAMlH,MAAM,uCAMhB,GAHAiF,KAAKqB,YAAc,kBACnBrB,KAAKpD,KAAO,MAEP6E,GAGE,GAAiB,IAAbA,EAAGpG,OACV,MAAM,IAAIN,MAAM,4DAHhB0G,EAAKvE,EAAY,IAMrB8C,KAAKkC,eAAiB3F,EAAYkF,GAAI,GACtCzB,KAAKmC,oBAAsB,GAE3BnC,KAAKsB,KAAO,IAAIxB,EAAIC,IAGxBkC,EAAmBlF,UAAUgE,QAAU,SAASC,GAG5C,IAFA,IAAIgB,EAAYzF,EAAYyE,GAAW,GAE9B1E,EAAI,EAAGA,EAAI0F,EAAU3G,OAAQiB,IACD,KAA7B0D,KAAKmC,sBACLnC,KAAKkC,eAAiBlC,KAAKsB,KAAKP,QAAQf,KAAKkC,gBAC7ClC,KAAKmC,oBAAsB,GAE/BH,EAAU1F,IAAM0D,KAAKkC,eAAelC,KAAKmC,uBAG7C,OAAOH,GAIXC,EAAmBlF,UAAUmE,QAAUe,EAAmBlF,UAAUgE,QAMpE,IAAIqB,EAAU,SAASC,GACnB,KAAMrC,gBAAgBoC,GAClB,MAAMrH,MAAM,2CAIK,IAAjBsH,GAAuBA,IAAgBA,EAAe,GAE7B,kBAAnB,GACNrC,KAAKsC,SAAWpF,EAAY,IAC5B8C,KAAKuC,SAASF,IAGdrC,KAAKwC,SAASH,IAItBD,EAAQrF,UAAUwF,SAAW,SAASrG,GAClC,GAAsB,kBAAZ,GAAwBC,SAASD,IAAUA,EACjD,MAAM,IAAInB,MAAM,8CAGpB,IAAK,IAAIwF,EAAQ,GAAIA,GAAS,IAAKA,EAC/BP,KAAKsC,SAAS/B,GAASrE,EAAQ,IAC/BA,IAAiB,GAIzBkG,EAAQrF,UAAUyF,SAAW,SAASrE,GAGlC,GAFAA,EAAQ5B,EAAY4B,GAAO,GAEP,IAAhBA,EAAM9C,OACN,MAAM,IAAIN,MAAM,iDAGpBiF,KAAKsC,SAAWnE,GAGpBiE,EAAQrF,UAAU0F,UAAY,WAC1B,IAAK,IAAInG,EAAI,GAAIA,GAAK,EAAGA,IAAK,CAC1B,GAAyB,MAArB0D,KAAKsC,SAAShG,GAEX,CACH0D,KAAKsC,SAAShG,KACd,MAHA0D,KAAKsC,SAAShG,GAAK,IAY/B,IAAIoG,EAAqB,SAAS3C,EAAK4C,GACnC,KAAM3C,gBAAgB0C,GAClB,MAAM3H,MAAM,uCAGhBiF,KAAKqB,YAAc,UACnBrB,KAAKpD,KAAO,MAEN+F,aAAmBP,IACrBO,EAAU,IAAIP,EAAQO,IAG1B3C,KAAKsC,SAAWK,EAEhB3C,KAAK4C,kBAAoB,KACzB5C,KAAK6C,uBAAyB,GAE9B7C,KAAKsB,KAAO,IAAIxB,EAAIC,IA0BxB,SAAS+C,EAASC,GACdA,EAAOxG,EAAYwG,GAAM,GACzB,IAAIC,EAAS,GAAMD,EAAK1H,OAAS,GAC7BE,EAAS2B,EAAY6F,EAAK1H,OAAS2H,GACvC7F,EAAU4F,EAAMxH,GAChB,IAAK,IAAIe,EAAIyG,EAAK1H,OAAQiB,EAAIf,EAAOF,OAAQiB,IACzCf,EAAOe,GAAK0G,EAEhB,OAAOzH,EAGX,SAAS0H,EAAWF,GAEhB,GADAA,EAAOxG,EAAYwG,GAAM,GACrBA,EAAK1H,OAAS,GAAM,MAAM,IAAIN,MAAM,yBAExC,IAAIiI,EAASD,EAAKA,EAAK1H,OAAS,GAChC,GAAI2H,EAAS,GAAM,MAAM,IAAIjI,MAAM,oCAGnC,IADA,IAAIM,EAAS0H,EAAK1H,OAAS2H,EAClB1G,EAAI,EAAGA,EAAI0G,EAAQ1G,IACxB,GAAIyG,EAAK1H,EAASiB,KAAO0G,EACrB,MAAM,IAAIjI,MAAM,+BAIxB,IAAIQ,EAAS2B,EAAY7B,GAEzB,OADA8B,EAAU4F,EAAMxH,EAAQ,EAAG,EAAGF,GACvBE,EAlDXmH,EAAmB3F,UAAUgE,QAAU,SAASC,GAG5C,IAFA,IAAIgB,EAAYzF,EAAYyE,GAAW,GAE9B1E,EAAI,EAAGA,EAAI0F,EAAU3G,OAAQiB,IACE,KAAhC0D,KAAK6C,yBACL7C,KAAK4C,kBAAoB5C,KAAKsB,KAAKP,QAAQf,KAAKsC,SAASA,UACzDtC,KAAK6C,uBAAyB,EAC9B7C,KAAKsC,SAASG,aAElBT,EAAU1F,IAAM0D,KAAK4C,kBAAkB5C,KAAK6C,0BAGhD,OAAOb,GAIXU,EAAmB3F,UAAUmE,QAAUwB,EAAmB3F,UAAUgE,QA0CpE,IAAImC,EAAQ,CACRpD,IAAKA,EACLsC,QAASA,EAETe,gBAAiB,CACbC,IAAKhC,EACLiC,IAAK7B,EACL8B,IAAK1B,EACL2B,IAAKtB,EACLuB,IAAKd,GAGTe,MAAO,CACHC,IAAKnF,EACLoF,KAAMjG,GAGVkG,QAAS,CACLC,MAAO,CACHC,IAAKhB,EACLiB,MAAOd,IAIfe,WAAY,CACRzH,YAAaA,EACbW,YAAaA,EACbC,UAAWA,IAOf8G,EAAOC,QAAUhB,GAvwBzB,I,uBCFA,IAAIiB,EAAI,EAAQ,QACZC,EAAc,EAAQ,QACtBC,EAA6B,EAAQ,QAIzCF,EAAE,CAAEG,OAAQ,SAAUC,MAAM,EAAMC,QAASJ,EAAaK,MAAOL,GAAe,CAC5ElE,eAAgBmE,EAA2BK,K,wkBCNtC,MAAMC,EAAc,K,y0NCD3B,IAAIC,EAAS,WAAa,IAAIC,EAAI7E,KAAS8E,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,OAAO,CAACE,MAAM,CAAC,GAAK,SAAS,CAACF,EAAG,MAAM,CAACG,YAAY,WAAW,CAACH,EAAG,KAAK,CAACG,YAAY,WAAW,CAACN,EAAIO,GAAG,uBAAuBJ,EAAG,OAAO,CAACG,YAAY,SAASD,MAAM,CAAC,GAAK,YAAY,CAACL,EAAIO,GAAGP,EAAIQ,GAAGR,EAAIS,YAAcT,EAAIU,UAAuOV,EAAIW,KAAhOR,EAAG,SAAS,CAACG,YAAY,UAAUM,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOb,EAAIc,UAAUC,iBAAiB,CAACf,EAAIO,GAAG,eAAeJ,EAAG,MAAM,CAACE,MAAM,CAAC,MAAQ,OAAO,IAAM,yDAAoEL,EAAIgB,UAA8MhB,EAAIW,KAAvMR,EAAG,MAAM,CAACG,YAAY,WAAW,CAACH,EAAG,SAAS,CAACG,YAAY,gBAAgBM,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOb,EAAIiB,YAAY,CAACd,EAAG,IAAI,CAACG,YAAY,yBAAyBN,EAAIO,GAAG,eAAyBP,EAAa,UAAEG,EAAG,MAAM,CAACG,YAAY,cAAc,CAACH,EAAG,SAAS,CAACG,YAAY,gBAAgBM,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOb,EAAIkB,gBAAgB,CAACf,EAAG,IAAI,CAACG,YAAY,yBAAyBN,EAAIO,GAAG,kBAAkBP,EAAIW,OAAOR,EAAG,KAAK,CAACG,YAAY,kBAAkB,CAACN,EAAIO,GAAG,0CAA0CP,EAAImB,GAAG,GAAGhB,EAAG,MAAM,CAACG,YAAY,SAAS,CAACH,EAAG,MAAM,CAACG,YAAY,aAAa,CAACH,EAAG,MAAM,CAACG,YAAY,OAAOc,YAAY,CAAC,YAAY,QAAQ,CAACjB,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,MAAM,CAACG,YAAY,SAAS,CAACH,EAAG,KAAK,CAACH,EAAIO,GAAG,wBAAwBP,EAAIQ,GAAGR,EAAIqB,gBAAgBlB,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,MAAM,CAACG,YAAY,SAAS,CAACH,EAAG,KAAK,CAACH,EAAIO,GAAG,eAAeP,EAAIQ,GAAGR,EAAIsB,kBAAkBnB,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,SAAS,CAACS,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOb,EAAIuB,aAAa,CAACvB,EAAIO,GAAG,0BAA0BJ,EAAG,MAAM,CAACG,YAAY,SAAS,CAACH,EAAG,MAAM,CAACG,YAAY,aAAa,CAACH,EAAG,MAAM,CAACG,YAAY,OAAOc,YAAY,CAAC,YAAY,QAAQ,CAACpB,EAAImB,GAAG,GAAGhB,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACN,EAAImB,GAAG,GAAGhB,EAAG,MAAM,CAACG,YAAY,oBAAoB,CAACH,EAAG,QAAQ,CAACqB,WAAW,CAAC,CAACzJ,KAAK,QAAQ0J,QAAQ,UAAUpK,MAAO2I,EAAY,SAAE0B,WAAW,aAAarB,MAAM,CAAC,YAAc,iBAAiBsB,SAAS,CAAC,MAAS3B,EAAY,UAAGY,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOpB,OAAOmC,YAAqB5B,EAAI6B,SAAShB,EAAOpB,OAAOpI,eAAc8I,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,SAAS,CAACS,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOb,EAAI8B,gBAAgB,CAAC9B,EAAIO,GAAG,iCAAkCP,EAAY,SAAEG,EAAG,MAAM,CAACG,YAAY,YAAY,CAACH,EAAG,KAAK,CAACH,EAAIO,GAAGP,EAAIQ,GAAGR,EAAI+B,eAAe/B,EAAIW,QAC7zEqB,EAAkB,CAAC,WAAa,IAAIhC,EAAI7E,KAAS8E,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,IAAI,CAACG,YAAY,qBAAqB,CAACN,EAAIO,GAAG,kBAAkBJ,EAAG,IAAI,CAACE,MAAM,CAAC,KAAO,4BAA4B,OAAS,SAAS,CAACL,EAAIO,GAAG,0BAA0B,WAAa,IAAIP,EAAI7E,KAAS8E,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,MAAM,CAACG,YAAY,SAAS,CAACH,EAAG,KAAK,CAACH,EAAIO,GAAG,4BAA4B,WAAa,IAAIP,EAAI7E,KAAS8E,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACG,YAAY,SAAS,CAACH,EAAG,KAAK,CAACH,EAAIO,GAAG,qB,sBCDrkB,SAAS0B,EAAgBC,EAAKhH,EAAK7D,GAYhD,OAXI6D,KAAOgH,EACT9G,OAAOC,eAAe6G,EAAKhH,EAAK,CAC9B7D,MAAOA,EACP8K,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZH,EAAIhH,GAAO7D,EAGN6K,E,0GCZF,MAAM,EAAU,YCMjB,EAAS,IAAI,OAAO,GACnB,SAASI,EAAkB5L,GAE9B,MAAMM,EAAS,GACTuL,EAAc,SAAUC,EAAMC,GAChC,GAAKxK,MAAMG,QAAQqK,GAGnB,IAAK,IAAIvH,KAAOuH,EAAQ,CACpB,MAAMC,EAAYF,EAAKxK,QACvB0K,EAAUvJ,KAAK+B,GACf,IACIqH,EAAYG,EAAWD,EAAOvH,IAElC,MAAO/E,GACHa,EAAOmC,KAAK,CAAEqJ,KAAME,EAAWvM,MAAOA,OAKlD,OADAoM,EAAY,GAAI7L,GACTM,EAEJ,MAAM2L,EACT,YAAY5K,EAAM6K,EAAMC,EAAWC,GAE/B3H,KAAKpD,KAAOA,EACZoD,KAAKyH,KAAOA,EACZzH,KAAK0H,UAAYA,EACjB1H,KAAK2H,QAAUA,EAEnB,YAAYC,EAAS1L,GACjB,EAAOZ,mBAAmBsM,EAAS5H,KAAK0H,UAAWxL,IAGpD,MAAM,EACT,YAAY2L,GACR,eAAe7H,KAAM,WAAY6H,GAAY,IAC7C7H,KAAK8H,MAAQ,GACb9H,KAAK+H,YAAc,EACnB/H,KAAKgI,SAAW,IAAIxM,WAAWqM,GAEnC,WACI,OAAO,eAAU7H,KAAK8H,OAE1B,aAAe,OAAO9H,KAAK+H,YAC3B,WAAWhF,GAGP,OAFA/C,KAAK8H,MAAM9J,KAAK+E,GAChB/C,KAAK+H,aAAehF,EAAK1H,OAClB0H,EAAK1H,OAEhB,aAAa4M,GACT,OAAOjI,KAAKkI,WAAW,eAAOD,EAAOH,QAGzC,WAAW5L,GACP,IAAIiC,EAAQ,eAASjC,GACrB,MAAMiM,EAAgBhK,EAAM9C,OAAS2E,KAAK6H,SAI1C,OAHIM,IACAhK,EAAQ,eAAO,CAACA,EAAO6B,KAAKgI,SAASnL,MAAMsL,MAExCnI,KAAKkI,WAAW/J,GAE3B,UAAUjC,GACN,IAAIiC,EAAQ,eAAS,OAAUiK,KAAKlM,IAUpC,OATIiC,EAAM9C,OAAS2E,KAAK6H,UACpB,EAAOjM,WAAW,sBAAuB,OAAOC,OAAOwM,eAAgB,CACnEhN,OAAQ2E,KAAK6H,SACbS,OAAQnK,EAAM9C,SAGlB8C,EAAM9C,OAAS2E,KAAK6H,WACpB1J,EAAQ,eAAO,CAAC6B,KAAKgI,SAASnL,MAAMsB,EAAM9C,OAAS2E,KAAK6H,UAAW1J,KAEhEA,EAGX,WAAWjC,GACP,OAAO8D,KAAKkI,WAAWlI,KAAKuI,UAAUrM,IAE1C,sBACI,MAAMoM,EAAStI,KAAK8H,MAAMzM,OAG1B,OAFA2E,KAAK8H,MAAM9J,KAAKgC,KAAKgI,UACrBhI,KAAK+H,aAAe/H,KAAK6H,SACjB3L,IACJ8D,KAAK8H,MAAMQ,GAAUtI,KAAKuI,UAAUrM,KAIzC,MAAM,EACT,YAAY6G,EAAM8E,EAAUW,EAAYC,GACpC,eAAezI,KAAM,QAAS,eAAS+C,IACvC,eAAe/C,KAAM,WAAY6H,GAAY,IAC7C,eAAe7H,KAAM,cAAewI,GACpC,eAAexI,KAAM,aAAcyI,GACnCzI,KAAK0I,QAAU,EAEnB,WAAa,OAAO,eAAQ1I,KAAK8H,OACjC,eAAiB,OAAO9H,KAAK0I,QAE7B,cAAc9L,EAAMV,GAChB,IAAIyM,EAAQ/L,EAAK+L,MAAM,mBAIvB,OAHIA,GAASxM,SAASwM,EAAM,KAAO,KAC/BzM,EAAQA,EAAM0M,YAEX1M,EAEX,OAAOU,EAAMV,GACT,OAAI8D,KAAK6I,YACE7I,KAAK6I,YAAYjM,EAAMV,GAE3B,EAAO4M,OAAOlM,EAAMV,GAE/B,WAAWoM,EAAQjN,EAAQ0N,GACvB,IAAIC,EAAgBC,KAAKC,KAAK7N,EAAS2E,KAAK6H,UAAY7H,KAAK6H,SAY7D,OAXI7H,KAAK0I,QAAUM,EAAgBhJ,KAAK8H,MAAMzM,SACtC2E,KAAKyI,YAAcM,GAAS/I,KAAK0I,QAAUrN,GAAU2E,KAAK8H,MAAMzM,OAChE2N,EAAgB3N,EAGhB,EAAOO,WAAW,qBAAsB,OAAOC,OAAOwM,eAAgB,CAClEhN,OAAQ2E,KAAK8H,MAAMzM,OACnBiN,OAAQtI,KAAK0I,QAAUM,KAI5BhJ,KAAK8H,MAAMjL,MAAMmD,KAAK0I,QAAS1I,KAAK0I,QAAUM,GAEzD,UAAUV,GACN,OAAO,IAAI,EAAOtI,KAAK8H,MAAMjL,MAAMmD,KAAK0I,QAAUJ,GAAStI,KAAK6H,SAAU7H,KAAK6I,YAAa7I,KAAKyI,YAErG,UAAUpN,EAAQ0N,GACd,IAAI5K,EAAQ6B,KAAKmJ,WAAW,EAAG9N,IAAU0N,GAGzC,OAFA/I,KAAK0I,SAAWvK,EAAM9C,OAEf8C,EAAMtB,MAAM,EAAGxB,GAE1B,YACI,OAAO,OAAU+M,KAAKpI,KAAKoJ,UAAUpJ,KAAK6H,Y,wCC3I3C,MAAM,UAAqBL,EAC9B,YAAYE,GACR2B,MAAM,UAAW,UAAW3B,GAAW,GAE3C,eACI,MAAO,6CAEX,OAAOO,EAAQ/L,GACX,IACIA,EAAQ,eAAWA,GAEvB,MAAOlB,GACHgF,KAAKsJ,YAAYtO,EAAM4M,QAAS1L,GAEpC,OAAO+L,EAAOsB,WAAWrN,GAE7B,OAAOsN,GACH,OAAO,eAAW,eAAWA,EAAOC,YAAYC,cAAe,MClBhE,MAAM,UAAuBlC,EAChC,YAAYmC,GACRN,MAAMM,EAAM/M,KAAM+M,EAAMlC,UAAMmC,EAAWD,EAAMhC,SAC/C3H,KAAK2J,MAAQA,EAEjB,eACI,OAAO3J,KAAK2J,MAAME,eAEtB,OAAO5B,EAAQ/L,GACX,OAAO8D,KAAK2J,MAAMG,OAAO7B,EAAQ/L,GAErC,OAAOsN,GACH,OAAOxJ,KAAK2J,MAAMI,OAAOP,ICZjC,MAAM,EAAS,IAAI,OAAO,GAGnB,SAASQ,EAAK/B,EAAQgC,EAAQC,GACjC,IAAIC,EAAc,KAClB,GAAIrN,MAAMG,QAAQiN,GACdC,EAAcD,OAEb,GAAIA,GAA8B,kBAAb,EAAuB,CAC7C,IAAIE,EAAS,GACbD,EAAcF,EAAOI,IAAKV,IACtB,MAAM/M,EAAO+M,EAAMjC,UAgBnB,OAfK9K,GACD,EAAOhB,WAAW,wDAAyD,OAAOC,OAAOyO,iBAAkB,CACvGC,SAAU,SACVZ,MAAOA,EACPzN,MAAOgO,IAGXE,EAAOxN,IACP,EAAOhB,WAAW,0DAA2D,OAAOC,OAAOyO,iBAAkB,CACzGC,SAAU,SACVZ,MAAOA,EACPzN,MAAOgO,IAGfE,EAAOxN,IAAQ,EACRsN,EAAOtN,UAIlB,EAAOtB,mBAAmB,sBAAuB,QAAS4O,GAE1DD,EAAO5O,SAAW8O,EAAY9O,QAC9B,EAAOC,mBAAmB,8BAA+B,QAAS4O,GAEtE,IAAIM,EAAe,IAAI,EAAOvC,EAAOJ,UACjC4C,EAAgB,IAAI,EAAOxC,EAAOJ,UAClC6C,EAAc,GAClBT,EAAOU,QAAQ,CAAChB,EAAOpJ,KACnB,IAAIrE,EAAQiO,EAAY5J,GACxB,GAAIoJ,EAAMhC,QAAS,CAEf,IAAIiD,EAAgBH,EAAcpP,OAElCsO,EAAMG,OAAOW,EAAevO,GAE5B,IAAI2O,EAAaL,EAAaM,sBAC9BJ,EAAY1M,KAAM+M,IACdF,EAAWE,EAAaH,UAI5BjB,EAAMG,OAAOU,EAActO,KAInCwO,EAAYC,QAASK,IAAWA,EAAKR,EAAanP,UAClD,IAAIA,EAAS4M,EAAOgD,aAAaT,GAEjC,OADAnP,GAAU4M,EAAOgD,aAAaR,GACvBpP,EAEJ,SAAS6P,EAAO1B,EAAQS,GAC3B,IAAIC,EAAS,GAETiB,EAAa3B,EAAO4B,UAAU,GAClCnB,EAAOU,QAAShB,IACZ,IAAIzN,EAAQ,KACZ,GAAIyN,EAAMhC,QAAS,CACf,IAAIW,EAASkB,EAAOC,YAChB4B,EAAeF,EAAWC,UAAU9C,EAAOM,YAC/C,IACI1M,EAAQyN,EAAMI,OAAOsB,GAEzB,MAAOrQ,GAEH,GAAIA,EAAMsQ,OAAS,OAAOzP,OAAOwM,eAC7B,MAAMrN,EAEVkB,EAAQlB,EACRkB,EAAMqP,SAAW5B,EAAM/M,KACvBV,EAAMU,KAAO+M,EAAMjC,UACnBxL,EAAMuL,KAAOkC,EAAMlC,WAIvB,IACIvL,EAAQyN,EAAMI,OAAOP,GAEzB,MAAOxO,GAEH,GAAIA,EAAMsQ,OAAS,OAAOzP,OAAOwM,eAC7B,MAAMrN,EAEVkB,EAAQlB,EACRkB,EAAMqP,SAAW5B,EAAM/M,KACvBV,EAAMU,KAAO+M,EAAMjC,UACnBxL,EAAMuL,KAAOkC,EAAMlC,UAGdmC,GAAT1N,GACAgO,EAAOlM,KAAK9B,KAIpB,MAAMsP,EAAcvB,EAAOwB,OAAO,CAACC,EAAO/B,KACtC,MAAM/M,EAAO+M,EAAMjC,UAOnB,OANI9K,IACK8O,EAAM9O,KACP8O,EAAM9O,GAAQ,GAElB8O,EAAM9O,MAEH8O,GACR,IAEHzB,EAAOU,QAAQ,CAAChB,EAAOpJ,KACnB,IAAI3D,EAAO+M,EAAMjC,UACjB,IAAK9K,GAA8B,IAAtB4O,EAAY5O,GACrB,OAKJ,GAHa,WAATA,IACAA,EAAO,WAES,MAAhBsN,EAAOtN,GACP,OAEJ,MAAMV,EAAQgO,EAAO3J,GACjBrE,aAAiBnB,MACjBkF,OAAOC,eAAegK,EAAQtN,EAAM,CAChCoK,YAAY,EACZ2E,IAAK,KAAQ,MAAMzP,KAIvBgO,EAAOtN,GAAQV,IAGvB,IAAK,IAAII,EAAI,EAAGA,EAAI4N,EAAO7O,OAAQiB,IAAK,CACpC,MAAMJ,EAAQgO,EAAO5N,GACjBJ,aAAiBnB,OACjBkF,OAAOC,eAAegK,EAAQ5N,EAAG,CAC7B0K,YAAY,EACZ2E,IAAK,KAAQ,MAAMzP,KAI/B,OAAO+D,OAAO2L,OAAO1B,GAElB,MAAM,UAAmB1C,EAC5B,YAAYmC,EAAOtO,EAAQqM,GACvB,MAAMD,EAAQkC,EAAMlC,KAAO,KAAOpM,GAAU,EAAIA,EAAS,IAAM,IACzDsM,GAAuB,IAAZtM,GAAiBsO,EAAMhC,QACxC0B,MAAM,QAAS5B,EAAMC,EAAWC,GAChC3H,KAAK2J,MAAQA,EACb3J,KAAK3E,OAASA,EAElB,eAEI,MAAMwQ,EAAe7L,KAAK2J,MAAME,eAC1BtO,EAAS,GACf,IAAK,IAAIe,EAAI,EAAGA,EAAI0D,KAAK3E,OAAQiB,IAC7Bf,EAAOyC,KAAK6N,GAEhB,OAAOtQ,EAEX,OAAO0M,EAAQ/L,GACNY,MAAMG,QAAQf,IACf8D,KAAKsJ,YAAY,uBAAwBpN,GAE7C,IAAI4P,EAAQ9L,KAAK3E,QACF,IAAXyQ,IACAA,EAAQ5P,EAAMb,OACd4M,EAAOsB,WAAWrN,EAAMb,SAE5B,EAAO0Q,mBAAmB7P,EAAMb,OAAQyQ,EAAO,eAAiB9L,KAAK0H,UAAa,IAAM1H,KAAK0H,UAAa,KAC1G,IAAIuC,EAAS,GACb,IAAK,IAAI3N,EAAI,EAAGA,EAAIJ,EAAMb,OAAQiB,IAC9B2N,EAAOjM,KAAKgC,KAAK2J,OAErB,OAAOK,EAAK/B,EAAQgC,EAAQ/N,GAEhC,OAAOsN,GACH,IAAIsC,EAAQ9L,KAAK3E,QACF,IAAXyQ,IACAA,EAAQtC,EAAOC,YAAYb,WAMf,GAARkD,EAAatC,EAAO1B,MAAMzM,QAC1B,EAAOO,WAAW,2BAA4B,OAAOC,OAAOwM,eAAgB,CACxEhN,OAAQmO,EAAO1B,MAAMzM,OACrByQ,MAAOA,KAInB,IAAI7B,EAAS,GACb,IAAK,IAAI3N,EAAI,EAAGA,EAAIwP,EAAOxP,IACvB2N,EAAOjM,KAAK,IAAI,EAAegC,KAAK2J,QAExC,OAAOH,EAAOV,OAAO9I,KAAKpD,KAAMsO,EAAO1B,EAAQS,KC3MhD,MAAM,UAAqBzC,EAC9B,YAAYE,GACR2B,MAAM,OAAQ,OAAQ3B,GAAW,GAErC,eACI,OAAO,EAEX,OAAOO,EAAQ/L,GACX,OAAO+L,EAAOsB,WAAWrN,EAAQ,EAAI,GAEzC,OAAOsN,GACH,OAAOA,EAAOV,OAAO9I,KAAKyH,MAAO+B,EAAOC,YAAYuC,WCVrD,MAAM,UAA0BxE,EACnC,YAAYC,EAAMC,GACd2B,MAAM5B,EAAMA,EAAMC,GAAW,GAEjC,eACI,MAAO,KAEX,OAAOO,EAAQ/L,GACXA,EAAQ,eAASA,GACjB,IAAIb,EAAS4M,EAAOsB,WAAWrN,EAAMb,QAErC,OADAA,GAAU4M,EAAOgE,WAAW/P,GACrBb,EAEX,OAAOmO,GACH,OAAOA,EAAOJ,UAAUI,EAAOC,YAAYb,YAAY,IAGxD,MAAM,UAAmB,EAC5B,YAAYlB,GACR2B,MAAM,QAAS3B,GAEnB,OAAO8B,GACH,OAAOA,EAAOV,OAAO9I,KAAKpD,KAAM,eAAQyM,MAAMU,OAAOP,MCrBtD,MAAM,UAAwBhC,EACjC,YAAY0E,EAAMxE,GACd,IAAI9K,EAAO,QAAUwB,OAAO8N,GAC5B7C,MAAMzM,EAAMA,EAAM8K,GAAW,GAC7B1H,KAAKkM,KAAOA,EAEhB,eACI,MAAO,qEAAuEC,UAAU,EAAG,EAAgB,EAAZnM,KAAKkM,MAExG,OAAOjE,EAAQ/L,GACX,IAAI6G,EAAO,eAAS7G,GAIpB,OAHI6G,EAAK1H,SAAW2E,KAAKkM,MACrBlM,KAAKsJ,YAAY,wBAAyBpN,GAEvC+L,EAAOgE,WAAWlJ,GAE7B,OAAOyG,GACH,OAAOA,EAAOV,OAAO9I,KAAKpD,KAAM,eAAQ4M,EAAOJ,UAAUpJ,KAAKkM,SCnB/D,MAAM,UAAkB1E,EAC3B,YAAYE,GACR2B,MAAM,OAAQ,GAAI3B,GAAW,GAEjC,eACI,OAAO,KAEX,OAAOO,EAAQ/L,GAIX,OAHa,MAATA,GACA8D,KAAKsJ,YAAY,WAAYpN,GAE1B+L,EAAOgE,WAAW,IAE7B,OAAOzC,GAEH,OADAA,EAAOJ,UAAU,GACVI,EAAOV,OAAO9I,KAAKpD,KAAM,O,gBCbjC,MAAM,UAAoB4K,EAC7B,YAAY0E,EAAME,EAAQ1E,GACtB,MAAM9K,GAASwP,EAAS,MAAQ,QAAkB,EAAPF,EAC3C7C,MAAMzM,EAAMA,EAAM8K,GAAW,GAC7B1H,KAAKkM,KAAOA,EACZlM,KAAKoM,OAASA,EAElB,eACI,OAAO,EAEX,OAAOnE,EAAQ/L,GACX,IAAIuC,EAAI,OAAU2J,KAAKlM,GAEnBmQ,EAAe,OAAWC,KAAuB,EAAlBrE,EAAOJ,UAC1C,GAAI7H,KAAKoM,OAAQ,CACb,IAAIG,EAASF,EAAaC,KAAiB,EAAZtM,KAAKkM,KAAW,IAC3CzN,EAAE+N,GAAGD,IAAW9N,EAAEgO,GAAGF,EAAOG,IAAI,QAAKC,IAAI,WACzC3M,KAAKsJ,YAAY,sBAAuBpN,QAGvCuC,EAAEgO,GAAG,SAAShO,EAAE+N,GAAGH,EAAaC,KAAiB,EAAZtM,KAAKkM,SAC/ClM,KAAKsJ,YAAY,sBAAuBpN,GAM5C,OAJAuC,EAAIA,EAAEmO,OAAmB,EAAZ5M,KAAKkM,MAAUI,KAAiB,EAAZtM,KAAKkM,MAClClM,KAAKoM,SACL3N,EAAIA,EAAEoO,SAAqB,EAAZ7M,KAAKkM,MAAUU,OAAO,EAAI3E,EAAOJ,WAE7CI,EAAOsB,WAAW9K,GAE7B,OAAO+K,GACH,IAAItN,EAAQsN,EAAOC,YAAY6C,KAAiB,EAAZtM,KAAKkM,MAIzC,OAHIlM,KAAKoM,SACLlQ,EAAQA,EAAM2Q,SAAqB,EAAZ7M,KAAKkM,OAEzB1C,EAAOV,OAAO9I,KAAKpD,KAAMV,I,gBCnCjC,MAAM,UAAoB,EAC7B,YAAYwL,GACR2B,MAAM,SAAU3B,GAEpB,eACI,MAAO,GAEX,OAAOO,EAAQ/L,GACX,OAAOmN,MAAMS,OAAO7B,EAAQ,eAAY/L,IAE5C,OAAOsN,GACH,OAAO,eAAaH,MAAMU,OAAOP,KCXlC,MAAM,UAAmBhC,EAC5B,YAAYyC,EAAQvC,GAChB,IAAIC,GAAU,EACd,MAAMmF,EAAQ,GACd7C,EAAOU,QAAShB,IACRA,EAAMhC,UACNA,GAAU,GAEdmF,EAAM9O,KAAK2L,EAAMlC,QAErB,MAAMA,EAAQ,SAAWqF,EAAMxO,KAAK,KAAO,IAC3C+K,MAAM,QAAS5B,EAAMC,EAAWC,GAChC3H,KAAKiK,OAASA,EAElB,eACI,MAAMC,EAAS,GACflK,KAAKiK,OAAOU,QAAShB,IACjBO,EAAOlM,KAAK2L,EAAME,kBAGtB,MAAM2B,EAAcxL,KAAKiK,OAAOwB,OAAO,CAACC,EAAO/B,KAC3C,MAAM/M,EAAO+M,EAAMjC,UAOnB,OANI9K,IACK8O,EAAM9O,KACP8O,EAAM9O,GAAQ,GAElB8O,EAAM9O,MAEH8O,GACR,IAeH,OAbA1L,KAAKiK,OAAOU,QAAQ,CAAChB,EAAOpJ,KACxB,IAAI3D,EAAO+M,EAAMjC,UACZ9K,GAA8B,IAAtB4O,EAAY5O,KAGZ,WAATA,IACAA,EAAO,WAES,MAAhBsN,EAAOtN,KAGXsN,EAAOtN,GAAQsN,EAAO3J,OAEnBN,OAAO2L,OAAO1B,GAEzB,OAAOjC,EAAQ/L,GACX,OAAO8N,EAAK/B,EAAQjI,KAAKiK,OAAQ/N,GAErC,OAAOsN,GACH,OAAOA,EAAOV,OAAO9I,KAAKpD,KAAMsO,EAAO1B,EAAQxJ,KAAKiK,UChD5D,MAAM,EAAS,IAAI,OAAO,GAEpB8C,EAAoB,GAC1B,IAAIC,EAAiB,CAAEC,UAAU,EAAMC,QAAQ,EAAMC,SAAS,GAC1DC,EAAgB,CAAEH,UAAU,EAAMC,QAAQ,GAC9C,SAASG,EAAc5F,EAAM7K,GACzB,GAAa,UAAT6K,GAA6B,WAATA,GACpB,GAAIuF,EAAepQ,GACf,OAAO,OAGV,GAAa,YAAT6K,GACL,GAAa,YAAT7K,EACA,OAAO,OAGV,IAAI6K,EAAK6F,QAAQ,MAAQ,GAAc,UAAT7F,IAC3B2F,EAAcxQ,GACd,OAAO,EAMf,OAHIoQ,EAAepQ,IAAkB,YAATA,IACxB,EAAOtB,mBAAmB,mBAAoB,OAAQsB,IAEnD,EAGX,SAAS2Q,EAAeC,EAAOC,GAC3B,IAAIC,EAAgBF,EACpB,SAAS5R,EAAWU,GAChB,EAAOhB,mBAAmB,oCAAoCgB,EAAK,QAASkR,GAGhF,SAASG,EAAQC,GACb,IAAIC,EAAO,CAAEpG,KAAM,GAAI7K,KAAM,GAAIgR,OAAQA,EAAQE,MAAO,CAAEC,WAAW,IAIrE,OAHIN,IACAI,EAAKG,SAAU,GAEZH,EANXL,EAAQA,EAAMS,QAAQ,MAAO,KAQ7B,IAAIL,EAAS,CAAEnG,KAAM,GAAI7K,KAAM,GAAIkR,MAAO,CAAEC,WAAW,IACnDF,EAAOD,EACX,IAAK,IAAItR,EAAI,EAAGA,EAAIkR,EAAMnS,OAAQiB,IAAK,CACnC,IAAIwB,EAAI0P,EAAMlR,GACd,OAAQwB,GACJ,IAAK,IACG+P,EAAKC,MAAMC,WAA2B,KAAdF,EAAKpG,KAC7BoG,EAAKpG,KAAO,QAENoG,EAAKC,MAAMI,aACjBtS,EAAWU,GAEfuR,EAAKC,MAAMC,WAAY,EACvBF,EAAKpG,KAAO0G,GAAWN,EAAKpG,MAC5BoG,EAAKO,WAAa,CAACT,EAAQE,IAC3BA,EAAOA,EAAKO,WAAW,GACvB,MACJ,IAAK,WACMP,EAAKC,MACM,YAAdD,EAAKjR,OACA6Q,GACD7R,EAAWU,GAEfuR,EAAKG,SAAU,EACfH,EAAKjR,KAAO,IAEZyQ,EAAcQ,EAAKpG,KAAMoG,EAAKjR,QAC9BiR,EAAKjR,KAAO,IAEhBiR,EAAKpG,KAAO0G,GAAWN,EAAKpG,MAC5B,IAAI4G,EAAQR,EACZA,EAAOA,EAAKD,OACPC,GACDjS,EAAWU,UAER+R,EAAMT,OACbC,EAAKC,MAAMI,aAAc,EACzBL,EAAKC,MAAMQ,WAAY,EACvBT,EAAKC,MAAMS,YAAa,EACxB,MACJ,IAAK,WACMV,EAAKC,MACM,YAAdD,EAAKjR,OACA6Q,GACD7R,EAAWU,GAEfuR,EAAKG,SAAU,EACfH,EAAKjR,KAAO,IAEZyQ,EAAcQ,EAAKpG,KAAMoG,EAAKjR,QAC9BiR,EAAKjR,KAAO,IAEhBiR,EAAKpG,KAAO0G,GAAWN,EAAKpG,MAC5B,IAAI+G,EAAUb,EAAQE,EAAKD,QAE3BC,EAAKD,OAAOQ,WAAWpQ,KAAKwQ,UACrBX,EAAKD,OACZC,EAAOW,EACP,MAEJ,IAAK,IAEGX,EAAKC,MAAMC,WACO,KAAdF,EAAKpG,OACLoG,EAAKpG,KAAO0G,GAAWN,EAAKpG,aACrBoG,EAAKC,MAAMC,UAClBF,EAAKC,MAAMQ,WAAY,EACvBT,EAAKC,MAAMI,aAAc,GAI7BL,EAAKC,MAAMQ,WACO,KAAdT,EAAKjR,OACa,YAAdiR,EAAKjR,MACA6Q,GACD7R,EAAWU,GAEXuR,EAAKG,SACLpS,EAAWU,GAEfuR,EAAKG,SAAU,EACfH,EAAKjR,KAAO,IAEPyQ,EAAcQ,EAAKpG,KAAMoG,EAAKjR,MACnCiR,EAAKjR,KAAO,GAGZiR,EAAKC,MAAMQ,WAAY,GAInC,MACJ,IAAK,IACIT,EAAKC,MAAMS,YACZ3S,EAAWU,GAEfuR,EAAKpG,MAAQ3J,EACb+P,EAAKC,MAAMS,YAAa,EACxBV,EAAKC,MAAMQ,WAAY,EACvBT,EAAKC,MAAMW,WAAY,EACvB,MACJ,IAAK,IACIZ,EAAKC,MAAMW,WACZ7S,EAAWU,GAEfuR,EAAKpG,MAAQ3J,EACb+P,EAAKC,MAAMW,WAAY,EACvBZ,EAAKC,MAAMS,YAAa,EACxBV,EAAKC,MAAMQ,WAAY,EACvB,MACJ,QACQT,EAAKC,MAAMC,WACXF,EAAKpG,MAAQ3J,EACb+P,EAAKC,MAAMI,aAAc,EACzBL,EAAKC,MAAMS,YAAa,GAEnBV,EAAKC,MAAMQ,WAChBT,EAAKjR,MAAQkB,SACN+P,EAAKC,MAAMS,YAEbV,EAAKC,MAAMW,UAChBZ,EAAKpG,MAAQ3J,EAGblC,EAAWU,IAsB3B,OAlBIuR,EAAKD,QACL,EAAOtS,mBAAmB,iBAAkB,QAASkS,UAElDI,EAAOE,MACI,YAAdD,EAAKjR,MACA6Q,GACD7R,EAAW8R,EAAcrS,OAAS,GAElCwS,EAAKG,SACLpS,EAAW8R,EAAcrS,OAAS,GAEtCwS,EAAKG,SAAU,EACfH,EAAKjR,KAAO,IAEPyQ,EAAcQ,EAAKpG,KAAMoG,EAAKjR,QACnCiR,EAAKjR,KAAO,IAEhBgR,EAAOnG,KAAO0G,GAAWP,EAAOnG,MACzBmG,EAEX,SAASc,EAASpH,EAAQqH,GACtB,IAAK,IAAI5O,KAAO4O,EACZ,eAAerH,EAAQvH,EAAK4O,EAAO5O,IAGpC,MAAM6O,EAAc3O,OAAO2L,OAAO,CAErCiD,QAAS,UAETC,QAAS,UAETC,KAAM,OAENC,KAAM,SAEJC,EAAiB,IAAIC,OAAO,sBAC3B,MAAM,EACT,YAAYC,EAAkBR,GACtBQ,IAAqBpC,GACrB,EAAOnR,WAAW,iBAAkB,OAAOC,OAAOC,sBAAuB,CACrEC,UAAW,oBAGnB2S,EAAS1O,KAAM2O,GACf,IAAIhG,EAAQ3I,KAAKyH,KAAKkB,MAAMsG,GAExBP,EAAS1O,KADT2I,EACe,CACXyG,YAAajT,SAASwM,EAAM,IAAM,MAClC0G,cAAe,EAAUC,WAAW,CAChC7H,KAAMkB,EAAM,GACZyF,WAAYpO,KAAKoO,aAErB7C,SAAU,SAIC,CACX6D,YAAa,KACbC,cAAe,KACf9D,SAA+B,MAAnBvL,KAAKoO,WAAsB,QAAUpO,KAAKyH,OAG9DzH,KAAKuP,cAAe,EACpBtP,OAAO2L,OAAO5L,MAMlB,OAAOwP,GAOH,GANKA,IACDA,EAASZ,EAAYC,SAEpBD,EAAYY,IACb,EAAOlU,mBAAmB,sBAAuB,SAAUkU,GAE3DA,IAAWZ,EAAYI,KAAM,CAC7B,IAAIzT,EAAS,CACTkM,KAA0B,UAAlBzH,KAAKuL,SAAwB,QAAUvL,KAAKyH,KACpD7K,KAAOoD,KAAKpD,WAAQgN,GAQxB,MAN8B,mBAAlB5J,KAAY,UACpBzE,EAAOyS,QAAUhO,KAAKgO,SAEtBhO,KAAKoO,aACL7S,EAAO6S,WAAapO,KAAKoO,WAAW/D,IAAKoF,GAASC,KAAKC,MAAMF,EAAKD,OAAOA,MAEtEE,KAAKE,UAAUrU,GAE1B,IAAIA,EAAS,GAyBb,MAvBsB,UAAlByE,KAAKuL,UACLhQ,GAAUyE,KAAKqP,cAAcG,OAAOA,GACpCjU,GAAU,KAAOyE,KAAKoP,YAAc,EAAI,GAAKhR,OAAO4B,KAAKoP,cAAgB,KAGnD,UAAlBpP,KAAKuL,UACDiE,IAAWZ,EAAYC,UACvBtT,GAAUyE,KAAKyH,MAEnBlM,GAAU,IAAMyE,KAAKoO,WAAW/D,IAAKoF,GAASA,EAAKD,OAAOA,IAASlR,KAAMkR,IAAWZ,EAAYG,KAAQ,KAAO,KAAO,KAGtHxT,GAAUyE,KAAKyH,KAGnB+H,IAAWZ,EAAYC,WACF,IAAjB7O,KAAKgO,UACLzS,GAAU,YAEViU,IAAWZ,EAAYG,MAAQ/O,KAAKpD,OACpCrB,GAAU,IAAMyE,KAAKpD,OAGtBrB,EAEX,YAAYW,EAAOuR,GACf,MAAuB,kBAAZ,EACA,EAAUoC,WAAW3T,EAAOuR,GAEhC,EAAU6B,WAAWpT,GAEhC,kBAAkBA,GACd,OAAI,EAAU4T,YAAY5T,GACfA,EAEJ,IAAI,EAAU6Q,EAAmB,CACpCnQ,KAAOV,EAAMU,MAAQ,KACrB6K,KAAM0G,GAAWjS,EAAMuL,MACvBuG,QAA4B,MAAjB9R,EAAM8R,QAAmB,OAAS9R,EAAM8R,QACnDI,WAAalS,EAAMkS,WAAalS,EAAMkS,WAAW/D,IAAI,EAAUiF,YAAc,OAGrF,kBAAkBpT,EAAOuR,GACrB,SAASsC,EAAYlC,GACjB,OAAO,EAAUyB,WAAW,CACxB1S,KAAMiR,EAAKjR,KACX6K,KAAMoG,EAAKpG,KACXuG,QAASH,EAAKG,QACdI,WAAYP,EAAKO,aAGzB,OAAO2B,EAAYxC,EAAerR,IAASuR,IAE/C,mBAAmBvR,GACf,QAAmB,MAATA,IAAiBA,EAAMqT,eAIzC,SAASS,EAAY9T,EAAO+T,GACxB,OAAOC,GAAahU,GAAOmO,IAAKmD,GAAU,EAAUqC,WAAWrC,EAAOyC,IAEnE,MAAM,EACT,YAAYd,EAAkBR,GACtBQ,IAAqBpC,GACrB,EAAOnR,WAAW,2BAA4B,OAAOC,OAAOC,sBAAuB,CAC/EC,UAAW,mBAGnB2S,EAAS1O,KAAM2O,GACf3O,KAAKmQ,aAAc,EACnBlQ,OAAO2L,OAAO5L,MAElB,YAAY9D,GACR,OAAI,EAASkU,WAAWlU,GACbA,EAEY,kBAAZ,EACA,EAAS2T,WAAW3T,GAExB,EAASoT,WAAWpT,GAE/B,kBAAkBA,GACd,GAAI,EAASkU,WAAWlU,GACpB,OAAOA,EAEX,OAAQA,EAAMuL,MACV,IAAK,WACD,OAAO,GAAiB6H,WAAWpT,GACvC,IAAK,QACD,OAAOmU,EAAcf,WAAWpT,GACpC,IAAK,cACD,OAAO,GAAoBoT,WAAWpT,GAC1C,IAAK,QACD,OAAOoU,GAAchB,WAAWpT,GACpC,IAAK,WACL,IAAK,UAED,OAAO,KAEf,OAAO,EAAOZ,mBAAmB,0BAA2B,QAASY,GAEzE,kBAAkBA,GAKd,OAHAA,EAAQA,EAAM+R,QAAQ,MAAO,KAC7B/R,EAAQA,EAAM+R,QAAQ,MAAO,MAAMA,QAAQ,MAAO,MAAMA,QAAQ,OAAQ,KACxE/R,EAAQA,EAAMqU,OACc,UAAxBrU,EAAMsU,MAAM,KAAK,GACVH,EAAcR,WAAW3T,EAAMiQ,UAAU,GAAGoE,QAEtB,aAAxBrU,EAAMsU,MAAM,KAAK,GACf,GAAiBX,WAAW3T,EAAMiQ,UAAU,GAAGoE,QAElB,gBAA/BrU,EAAMsU,MAAM,KAAK,GAAGD,OAClB,GAAoBV,WAAW3T,EAAMqU,QAEf,UAAxBrU,EAAMsU,MAAM,KAAK,GACfF,GAAcT,WAAW3T,EAAMiQ,UAAU,GAAGoE,QAEhD,EAAOjV,mBAAmB,uBAAwB,QAASY,GAEtE,kBAAkBA,GACd,SAAUA,IAASA,EAAMiU,cAG1B,MAAME,UAAsB,EAC/B,OAAOb,GAOH,GANKA,IACDA,EAASZ,EAAYC,SAEpBD,EAAYY,IACb,EAAOlU,mBAAmB,sBAAuB,SAAUkU,GAE3DA,IAAWZ,EAAYI,KACvB,OAAOU,KAAKE,UAAU,CAClBnI,KAAM,QACNgJ,UAAWzQ,KAAKyQ,UAChB7T,KAAMoD,KAAKpD,KACX8T,OAAQ1Q,KAAK0Q,OAAOrG,IAAKsG,GAAUjB,KAAKC,MAAMgB,EAAMnB,OAAOA,OAGnE,IAAIjU,EAAS,GAUb,OATIiU,IAAWZ,EAAYC,UACvBtT,GAAU,UAEdA,GAAUyE,KAAKpD,KAAO,IAAMoD,KAAK0Q,OAAOrG,IAAKsG,GAAUA,EAAMnB,OAAOA,IAASlR,KAAMkR,IAAWZ,EAAYG,KAAQ,KAAO,KAAO,KAC5HS,IAAWZ,EAAYC,SACnB7O,KAAKyQ,YACLlV,GAAU,cAGXA,EAAOgV,OAElB,YAAYrU,GACR,MAAuB,kBAAZ,EACAmU,EAAcR,WAAW3T,GAE7BmU,EAAcf,WAAWpT,GAEpC,kBAAkBA,GACd,GAAImU,EAAcO,gBAAgB1U,GAC9B,OAAOA,EAEQ,UAAfA,EAAMuL,MACN,EAAOnM,mBAAmB,uBAAwB,QAASY,GAE/D,MAAMyS,EAAS,CACX/R,KAAMiU,GAAiB3U,EAAMU,MAC7B6T,UAAWvU,EAAMuU,UACjBC,OAASxU,EAAMwU,OAASxU,EAAMwU,OAAOrG,IAAI,EAAUiF,YAAc,GACjE7H,KAAM,SAEV,OAAO,IAAI4I,EAActD,EAAmB4B,GAEhD,kBAAkBzS,GACd,IAAIyM,EAAQzM,EAAMyM,MAAMmI,IACnBnI,GACD,EAAOrN,mBAAmB,uBAAwB,QAASY,GAE/D,IAAIuU,GAAY,EAYhB,OAXA9H,EAAM,GAAG6H,MAAM,KAAK7F,QAASoG,IACzB,OAAQA,EAASR,QACb,IAAK,YACDE,GAAY,EACZ,MACJ,IAAK,GACD,MACJ,QACI,EAAO/U,KAAK,qBAAuBqV,MAGxCV,EAAcf,WAAW,CAC5B1S,KAAM+L,EAAM,GAAG4H,OACfE,UAAWA,EACXC,OAAQV,EAAYrH,EAAM,IAAI,GAC9BlB,KAAM,UAGd,uBAAuBvL,GACnB,OAAQA,GAASA,EAAMiU,aAA8B,UAAfjU,EAAMuL,MAGpD,SAASuJ,GAAS9U,EAAOyS,GACrBA,EAAOsC,IAAM,KACb,IAAIC,EAAQhV,EAAMsU,MAAM,KACxB,OAAqB,IAAjBU,EAAM7V,QACF6V,EAAM7V,OAAS,GACf,EAAOC,mBAAmB,uCAAwC,QAASY,GAE1EgV,EAAM,GAAGvI,MAAM,aAChB,EAAOrN,mBAAmB,2CAA4C,QAASY,GAEnFyS,EAAOsC,IAAM,OAAU7I,KAAK8I,EAAM,IAC3BA,EAAM,IAEVhV,EAEX,SAASiV,GAAejV,EAAOyS,GAC3BA,EAAOyC,UAAW,EAClBzC,EAAO0C,SAAU,EACjB1C,EAAO2C,gBAAkB,aACzBpV,EAAMsU,MAAM,KAAK7F,QAASoG,IACtB,OAAQA,EAASR,QACb,IAAK,WACD5B,EAAOyC,UAAW,EAClB,MACJ,IAAK,UACDzC,EAAO0C,SAAU,EACjB1C,EAAO2C,gBAAkB,UACzB,MACJ,IAAK,aACD3C,EAAO0C,SAAU,EACjB1C,EAAO2C,gBAAkB,aACzB,MACJ,IAAK,OACD3C,EAAOyC,UAAW,EAClBzC,EAAO2C,gBAAkB,OACzB,MACJ,IAAK,OACD3C,EAAOyC,UAAW,EAClBzC,EAAO2C,gBAAkB,OACzB,MACJ,IAAK,WACL,IAAK,SACL,IAAK,GACD,MACJ,QACIC,QAAQC,IAAI,qBAAuBT,MAInD,SAASU,GAAYvV,GACjB,IAAIX,EAAS,CACT6V,UAAU,EACVC,SAAS,EACTC,gBAAiB,WA4CrB,OA1C6B,MAAzBpV,EAAMoV,iBACN/V,EAAO+V,gBAAkBpV,EAAMoV,gBAE/B/V,EAAO6V,SAAuC,SAA3B7V,EAAO+V,iBAAyD,SAA3B/V,EAAO+V,gBACzC,MAAlBpV,EAAMkV,YACClV,EAAMkV,WAAc7V,EAAO6V,UAC9B,EAAO9V,mBAAmB,iDAAmDC,EAAO+V,gBAAiB,QAASpV,GAItHX,EAAO8V,QAAsC,YAA3B9V,EAAO+V,gBACJ,MAAjBpV,EAAMmV,WACCnV,EAAMmV,UAAa9V,EAAO8V,SAC7B,EAAO/V,mBAAmB,gDAAkDC,EAAO+V,gBAAiB,QAASpV,IAI/F,MAAjBA,EAAMmV,SACX9V,EAAO8V,UAAYnV,EAAMmV,QAEH,MAAlBnV,EAAMkV,UAAqB7V,EAAO8V,SAA0B,gBAAfnV,EAAMuL,MACnD,EAAOnM,mBAAmB,sCAAuC,QAASY,GAE9EX,EAAO6V,WAAalV,EAAMkV,SACtB7V,EAAO6V,SACP7V,EAAO+V,gBAAkB,OAGzB/V,EAAO+V,gBAAmB/V,EAAO8V,QAAU,UAAY,aAEvD9V,EAAO8V,SAAW9V,EAAO6V,UACzB,EAAO9V,mBAAmB,wCAAyC,QAASY,IAGzD,MAAlBA,EAAMkV,UACX7V,EAAO6V,WAAalV,EAAMkV,SAC1B7V,EAAO8V,SAAW9V,EAAO6V,SACzB7V,EAAO+V,gBAAmB/V,EAAO6V,SAAW,OAAS,WAEjC,gBAAflV,EAAMuL,MACX,EAAOnM,mBAAmB,sCAAuC,QAASY,GAEvEX,EAEJ,MAAM,WAA4B,EACrC,OAAOiU,GAOH,GANKA,IACDA,EAASZ,EAAYC,SAEpBD,EAAYY,IACb,EAAOlU,mBAAmB,sBAAuB,SAAUkU,GAE3DA,IAAWZ,EAAYI,KACvB,OAAOU,KAAKE,UAAU,CAClBnI,KAAM,cACN6J,gBAA4C,eAAzBtR,KAAKsR,gBAAoCtR,KAAKsR,qBAAkB1H,EACnFyH,QAASrR,KAAKqR,QACdJ,IAAMjR,KAAKiR,IAAMjR,KAAKiR,IAAIrI,gBAAagB,EACvC8G,OAAQ1Q,KAAK0Q,OAAOrG,IAAKsG,GAAUjB,KAAKC,MAAMgB,EAAMnB,OAAOA,OAG/DA,IAAWZ,EAAYC,SACvB,EAAOjT,WAAW,0CAA2C,OAAOC,OAAOC,sBAAuB,CAC9FC,UAAW,oBAGnB,IAAIR,EAAS,eAAiByE,KAAK0Q,OAAOrG,IAAKsG,GAAUA,EAAMnB,OAAOA,IAASlR,KAAMkR,IAAWZ,EAAYG,KAAQ,KAAO,KAAO,KAIlI,OAHI/O,KAAKsR,iBAA4C,eAAzBtR,KAAKsR,kBAC7B/V,GAAUyE,KAAKsR,gBAAkB,KAE9B/V,EAAOgV,OAElB,YAAYrU,GACR,MAAuB,kBAAZ,EACA,GAAoB2T,WAAW3T,GAEnC,GAAoBoT,WAAWpT,GAE1C,kBAAkBA,GACd,GAAI,GAAoBwV,sBAAsBxV,GAC1C,OAAOA,EAEQ,gBAAfA,EAAMuL,MACN,EAAOnM,mBAAmB,6BAA8B,QAASY,GAErE,IAAI4R,EAAQ2D,GAAYvV,GACpB4R,EAAMsD,UACN,EAAO9V,mBAAmB,iCAAkC,QAASY,GAEzE,MAAMyS,EAAS,CACX/R,KAAM,KACN6K,KAAMvL,EAAMuL,KACZiJ,OAASxU,EAAMwU,OAASxU,EAAMwU,OAAOrG,IAAI,EAAUiF,YAAc,GACjE+B,QAASvD,EAAMuD,QACfC,gBAAiBxD,EAAMwD,gBACvBL,IAAM/U,EAAM+U,IAAM,OAAU7I,KAAKlM,EAAM+U,KAAO,MAElD,OAAO,IAAI,GAAoBlE,EAAmB4B,GAEtD,kBAAkBzS,GACd,IAAIyS,EAAS,CAAElH,KAAM,eACrBvL,EAAQ8U,GAAS9U,EAAOyS,GACxB,IAAIgD,EAASzV,EAAMyM,MAAMmI,IAMzB,OALKa,GAA+B,gBAArBA,EAAO,GAAGpB,QACrB,EAAOjV,mBAAmB,6BAA8B,QAASY,GAErEyS,EAAO+B,OAASV,EAAY2B,EAAO,GAAGpB,QAAQ,GAC9CY,GAAeQ,EAAO,GAAGpB,OAAQ5B,GAC1B,GAAoBW,WAAWX,GAE1C,6BAA6BzS,GACzB,OAAQA,GAASA,EAAMiU,aAA8B,gBAAfjU,EAAMuL,MAG7C,MAAM,WAAyB,GAClC,OAAO+H,GAOH,GANKA,IACDA,EAASZ,EAAYC,SAEpBD,EAAYY,IACb,EAAOlU,mBAAmB,sBAAuB,SAAUkU,GAE3DA,IAAWZ,EAAYI,KACvB,OAAOU,KAAKE,UAAU,CAClBnI,KAAM,WACN7K,KAAMoD,KAAKpD,KACXwU,SAAUpR,KAAKoR,SACfE,gBAA4C,eAAzBtR,KAAKsR,gBAAoCtR,KAAKsR,qBAAkB1H,EACnFyH,QAASrR,KAAKqR,QACdJ,IAAMjR,KAAKiR,IAAMjR,KAAKiR,IAAIrI,gBAAagB,EACvC8G,OAAQ1Q,KAAK0Q,OAAOrG,IAAKsG,GAAUjB,KAAKC,MAAMgB,EAAMnB,OAAOA,KAC3DoC,QAAS5R,KAAK4R,QAAQvH,IAAKwH,GAAWnC,KAAKC,MAAMkC,EAAOrC,OAAOA,OAGvE,IAAIjU,EAAS,GAqBb,OApBIiU,IAAWZ,EAAYC,UACvBtT,GAAU,aAEdA,GAAUyE,KAAKpD,KAAO,IAAMoD,KAAK0Q,OAAOrG,IAAKsG,GAAUA,EAAMnB,OAAOA,IAASlR,KAAMkR,IAAWZ,EAAYG,KAAQ,KAAO,KAAO,KAC5HS,IAAWZ,EAAYC,UACnB7O,KAAKsR,gBACwB,eAAzBtR,KAAKsR,kBACL/V,GAAWyE,KAAKsR,gBAAkB,KAGjCtR,KAAKoR,WACV7V,GAAU,SAEVyE,KAAK4R,SAAW5R,KAAK4R,QAAQvW,SAC7BE,GAAU,YAAcyE,KAAK4R,QAAQvH,IAAKwH,GAAWA,EAAOrC,OAAOA,IAASlR,KAAK,MAAQ,MAE7E,MAAZ0B,KAAKiR,MACL1V,GAAU,IAAMyE,KAAKiR,IAAIa,WAAa,MAGvCvW,EAAOgV,OAElB,YAAYrU,GACR,MAAuB,kBAAZ,EACA,GAAiB2T,WAAW3T,GAEhC,GAAiBoT,WAAWpT,GAEvC,kBAAkBA,GACd,GAAI,GAAiB6V,mBAAmB7V,GACpC,OAAOA,EAEQ,aAAfA,EAAMuL,MACN,EAAOnM,mBAAmB,0BAA2B,QAASY,GAElE,IAAI4R,EAAQ2D,GAAYvV,GACxB,MAAMyS,EAAS,CACXlH,KAAMvL,EAAMuL,KACZ7K,KAAMiU,GAAiB3U,EAAMU,MAC7BwU,SAAUtD,EAAMsD,SAChBV,OAASxU,EAAMwU,OAASxU,EAAMwU,OAAOrG,IAAI,EAAUiF,YAAc,GACjEsC,QAAU1V,EAAM0V,QAAU1V,EAAM0V,QAAQvH,IAAI,EAAUiF,YAAc,GACpE+B,QAASvD,EAAMuD,QACfC,gBAAiBxD,EAAMwD,gBACvBL,IAAM/U,EAAM+U,IAAM,OAAU7I,KAAKlM,EAAM+U,KAAO,MAElD,OAAO,IAAI,GAAiBlE,EAAmB4B,GAEnD,kBAAkBzS,GACd,IAAIyS,EAAS,CAAElH,KAAM,YACrBvL,EAAQ8U,GAAS9U,EAAOyS,GACxB,IAAIuC,EAAQhV,EAAMsU,MAAM,aACpBU,EAAM7V,OAAS,GACf,EAAOC,mBAAmB,0BAA2B,QAASY,GAElE,IAAIyV,EAAST,EAAM,GAAGvI,MAAMmI,IAW5B,GAVKa,GACD,EAAOrW,mBAAmB,6BAA8B,QAASY,GAErEyS,EAAO/R,KAAO+U,EAAO,GAAGpB,OACpB5B,EAAO/R,MACPiU,GAAiBlC,EAAO/R,MAE5B+R,EAAO+B,OAASV,EAAY2B,EAAO,IAAI,GACvCR,GAAeQ,EAAO,GAAGpB,OAAQ5B,GAE7BuC,EAAM7V,OAAS,EAAG,CAClB,IAAI2W,EAAUd,EAAM,GAAGvI,MAAMmI,IACJ,IAArBkB,EAAQ,GAAGzB,QAAqC,IAArByB,EAAQ,GAAGzB,QACtC,EAAOjV,mBAAmB,oBAAqB,QAASY,GAE5DyS,EAAOiD,QAAU5B,EAAYgC,EAAQ,IAAI,QAGzCrD,EAAOiD,QAAU,GAErB,OAAO,GAAiBtC,WAAWX,GAEvC,0BAA0BzS,GACtB,OAAQA,GAASA,EAAMiU,aAA8B,aAAfjU,EAAMuL,MAKpD,SAASwK,GAAeC,GACpB,MAAMC,EAAMD,EAAS1C,SAIrB,MAHY,kBAAR2C,GAAmC,mBAARA,GAC3B,EAAO7W,mBAAmB,+BAA+B6W,UAAa,WAAYD,GAE/EA,EAEJ,MAAM5B,WAAsB,EAC/B,OAAOd,GAOH,GANKA,IACDA,EAASZ,EAAYC,SAEpBD,EAAYY,IACb,EAAOlU,mBAAmB,sBAAuB,SAAUkU,GAE3DA,IAAWZ,EAAYI,KACvB,OAAOU,KAAKE,UAAU,CAClBnI,KAAM,QACN7K,KAAMoD,KAAKpD,KACX8T,OAAQ1Q,KAAK0Q,OAAOrG,IAAKsG,GAAUjB,KAAKC,MAAMgB,EAAMnB,OAAOA,OAGnE,IAAIjU,EAAS,GAKb,OAJIiU,IAAWZ,EAAYC,UACvBtT,GAAU,UAEdA,GAAUyE,KAAKpD,KAAO,IAAMoD,KAAK0Q,OAAOrG,IAAKsG,GAAUA,EAAMnB,OAAOA,IAASlR,KAAMkR,IAAWZ,EAAYG,KAAQ,KAAO,KAAO,KACzHxT,EAAOgV,OAElB,YAAYrU,GACR,MAAuB,kBAAZ,EACAoU,GAAcT,WAAW3T,GAE7BoU,GAAchB,WAAWpT,GAEpC,kBAAkBA,GACd,GAAIoU,GAAc8B,gBAAgBlW,GAC9B,OAAOA,EAEQ,UAAfA,EAAMuL,MACN,EAAOnM,mBAAmB,uBAAwB,QAASY,GAE/D,MAAMyS,EAAS,CACXlH,KAAMvL,EAAMuL,KACZ7K,KAAMiU,GAAiB3U,EAAMU,MAC7B8T,OAASxU,EAAMwU,OAASxU,EAAMwU,OAAOrG,IAAI,EAAUiF,YAAc,IAErE,OAAO2C,GAAe,IAAI3B,GAAcvD,EAAmB4B,IAE/D,kBAAkBzS,GACd,IAAIyS,EAAS,CAAElH,KAAM,SACjBkK,EAASzV,EAAMyM,MAAMmI,IASzB,OARKa,GACD,EAAOrW,mBAAmB,0BAA2B,QAASY,GAElEyS,EAAO/R,KAAO+U,EAAO,GAAGpB,OACpB5B,EAAO/R,MACPiU,GAAiBlC,EAAO/R,MAE5B+R,EAAO+B,OAASV,EAAY2B,EAAO,IAAI,GAChCM,GAAe3B,GAAchB,WAAWX,IAEnD,uBAAuBzS,GACnB,OAAQA,GAASA,EAAMiU,aAA8B,UAAfjU,EAAMuL,MAGpD,SAAS0G,GAAW1G,GAShB,OAPIA,EAAKkB,MAAM,mBACXlB,EAAO,UAAYA,EAAK0E,UAAU,GAE7B1E,EAAKkB,MAAM,oBAChBlB,EAAO,SAAWA,EAAK0E,UAAU,IAG9B1E,EAGX,MAAM4K,GAAkB,IAAInD,OAAO,8BACnC,SAAS2B,GAAiB3U,GAItB,OAHKA,GAAUA,EAAMyM,MAAM0J,KACvB,EAAO/W,mBAAmB,uBAAuBY,KAAU,QAASA,GAEjEA,EAEX,MAAM4U,GAAa,IAAI5B,OAAO,gCAC9B,SAASgB,GAAahU,GAClBA,EAAQA,EAAMqU,OACd,IAAIhV,EAAS,GACTmQ,EAAQ,GACR4G,EAAQ,EACZ,IAAK,IAAIhK,EAAS,EAAGA,EAASpM,EAAMb,OAAQiN,IAAU,CAClD,IAAIxK,EAAI5B,EAAMoM,GACJ,MAANxK,GAAuB,IAAVwU,GACb/W,EAAOyC,KAAK0N,GACZA,EAAQ,KAGRA,GAAS5N,EACC,MAANA,EACAwU,IAEW,MAANxU,IACLwU,KACe,IAAXA,GACA,EAAOhX,mBAAmB,yBAA0B,QAASY,KAQ7E,OAHIwP,GACAnQ,EAAOyC,KAAK0N,GAETnQ,EC90BX,MAAM,GAAS,IAAI,OAAO,GAYpBgX,GAAiB,IAAIrD,OAAO,mBAC5BsD,GAAkB,IAAItD,OAAO,qBAC5B,MAAM,GACT,YAAY1G,GACR,GAAOiK,oBAAqB,IAC5B,eAAezS,KAAM,aAAcwI,GAAc,MAErD,UAAUgF,GACN,OAAQA,EAAMjC,UACV,IAAK,UACD,OAAO,IAAI,EAAaiC,EAAM5Q,MAClC,IAAK,OACD,OAAO,IAAI,EAAa4Q,EAAM5Q,MAClC,IAAK,SACD,OAAO,IAAI,EAAY4Q,EAAM5Q,MACjC,IAAK,QACD,OAAO,IAAI,EAAW4Q,EAAM5Q,MAChC,IAAK,QACD,OAAO,IAAI,EAAWoD,KAAK0S,UAAUlF,EAAM6B,eAAgB7B,EAAM4B,YAAa5B,EAAM5Q,MACxF,IAAK,QACD,OAAO,IAAI,GAAY4Q,EAAMY,YAAc,IAAI/D,IAAKsI,GACzC3S,KAAK0S,UAAUC,IACtBnF,EAAM5Q,MACd,IAAK,GACD,OAAO,IAAI,EAAU4Q,EAAM5Q,MAGnC,IAAI+L,EAAQ6E,EAAM/F,KAAKkB,MAAM6J,IAC7B,GAAI7J,EAAO,CACP,IAAIuD,EAAO/P,SAASwM,EAAM,IAAM,OAIhC,OAHa,IAATuD,GAAcA,EAAO,KAAQA,EAAO,IAAO,IAC3C,GAAO5Q,mBAAmB,WAAaqN,EAAM,GAAK,cAAe,QAAS6E,GAEvE,IAAI,EAAYtB,EAAO,EAAiB,QAAbvD,EAAM,GAAe6E,EAAM5Q,MAIjE,GADA+L,EAAQ6E,EAAM/F,KAAKkB,MAAM4J,IACrB5J,EAAO,CACP,IAAIuD,EAAO/P,SAASwM,EAAM,IAI1B,OAHa,IAATuD,GAAcA,EAAO,KACrB,GAAO5Q,mBAAmB,uBAAwB,QAASkS,GAExD,IAAI,EAAgBtB,EAAMsB,EAAM5Q,MAE3C,OAAO,GAAOtB,mBAAmB,eAAgB,OAAQkS,EAAM/F,MAEnE,eAAiB,OAAO,GACxB,WAAW1E,EAAM0F,GACb,OAAO,IAAI,EAAO1F,EAAM/C,KAAK4S,eAAgB5S,KAAKwI,WAAYC,GAElE,aACI,OAAO,IAAI,EAAOzI,KAAK4S,gBAE3B,gBAAgB9F,GACZ,MAAM7C,EAAS6C,EAAMzC,IAAK5C,GAASzH,KAAK0S,UAAU,EAAUtK,KAAKX,KAC3DkC,EAAQ,IAAI,EAAWM,EAAQ,KACrC,OAAON,EAAME,eAEjB,OAAOiD,EAAO5C,GACN4C,EAAMzR,SAAW6O,EAAO7O,QACxB,GAAOO,WAAW,+BAAgC,OAAOC,OAAOyO,iBAAkB,CAC9EwB,MAAO,CAAEgB,MAAOA,EAAMzR,OAAQ6O,OAAQA,EAAO7O,QAC7Ca,MAAO,CAAE4Q,MAAOA,EAAO5C,OAAQA,KAGvC,MAAMD,EAAS6C,EAAMzC,IAAK5C,GAASzH,KAAK0S,UAAU,EAAUtK,KAAKX,KAC3DkC,EAAQ,IAAK,EAAWM,EAAQ,KAChChC,EAASjI,KAAK6S,aAEpB,OADAlJ,EAAMG,OAAO7B,EAAQiC,GACdjC,EAAOlF,KAElB,OAAO+J,EAAO/J,EAAMgG,GAChB,MAAMkB,EAAS6C,EAAMzC,IAAK5C,GAASzH,KAAK0S,UAAU,EAAUtK,KAAKX,KAC3DkC,EAAQ,IAAI,EAAWM,EAAQ,KACrC,OAAON,EAAMI,OAAO/J,KAAK8S,WAAW,eAAS/P,GAAOgG,KAGrD,MAAMgK,GAAkB,IAAI,GCnF7B,GAAS,IAAI,OAAO,GAEnB,MAAM,WAAuB,QAE7B,MAAM,WAA+B,QAErC,MAAM,WAAyB,QAE/B,MAAM,WAAgB,OACzB,iBAAiB7W,GACb,SAAUA,IAASA,EAAM8W,aAGjC,MAAMC,GAAgB,CAClB,aAAc,CAAEC,UAAW,gBAAiBtW,KAAM,QAAS8T,OAAQ,CAAC,UAAWyC,QAAQ,GACvF,aAAc,CAAED,UAAW,iBAAkBtW,KAAM,QAAS8T,OAAQ,CAAC,aAEzE,SAAS0C,GAAgBC,EAAUrY,GAC/B,MAAMsY,EAAO,IAAIvY,MAAM,0DAA0DsY,GAEjF,OADAC,EAAKtY,MAAQA,EACNsY,EAeJ,MAAM,GACT,YAAYC,GACR,GAAOd,oBAAqB,IAC5B,IAAIe,EAAM,GAENA,EADuB,kBAAhB,EACD9D,KAAKC,MAAM4D,GAGXA,EAEV,eAAevT,KAAM,YAAawT,EAAInJ,IAAK6H,GAChC,EAAS9J,KAAK8J,IACtBuB,OAAQvB,GAA0B,MAAZA,IACzB,eAAelS,KAAM,YAAa,0BAAsB,cAAtB,IAClC,eAAeA,KAAM,YAAa,IAClC,eAAeA,KAAM,SAAU,IAC/B,eAAeA,KAAM,SAAU,IAC/B,eAAeA,KAAM,UAAW,IAEhCA,KAAKuT,UAAU5I,QAASuH,IACpB,IAAIwB,EAAS,KACb,OAAQxB,EAASzK,MACb,IAAK,cACD,OAAIzH,KAAK2T,YACL,GAAOjY,KAAK,2CAIhB,eAAesE,KAAM,SAAUkS,GAEnC,IAAK,WAGDwB,EAAS1T,KAAK4T,UACd,MACJ,IAAK,QAEDF,EAAS1T,KAAK6T,OACd,MACJ,IAAK,QACDH,EAAS1T,KAAKnE,OACd,MACJ,QACI,OAER,IAAIqX,EAAYhB,EAAS1C,SACrBkE,EAAOR,GACP,GAAOxX,KAAK,0BAA4BwX,GAG5CQ,EAAOR,GAAahB,IAGnBlS,KAAK2T,QACN,eAAe3T,KAAM,SAAU,GAAoBoI,KAAK,CACpDiJ,SAAS,EACT5J,KAAM,iBAGd,eAAezH,KAAM,gBAAgB,GAEzC,OAAOwP,GACEA,IACDA,EAASZ,EAAYG,MAErBS,IAAWZ,EAAYC,SACvB,GAAOvT,mBAAmB,gDAAiD,SAAUkU,GAEzF,MAAMgE,EAAMxT,KAAKuT,UAAUlJ,IAAK6H,GAAaA,EAAS1C,OAAOA,IAE7D,OAAIA,IAAWZ,EAAYI,KAChBU,KAAKE,UAAU4D,EAAInJ,IAAK1I,GAAM+N,KAAKC,MAAMhO,KAE7C6R,EAGX,qBACI,OAAOT,GAEX,kBAAkBe,GACd,OAAO,eAAWA,GAEtB,kBAAkB5B,GACd,OAAO,eAAa,eAAGA,EAAS1C,UAAW,EAAG,GAElD,qBAAqBuE,GACjB,OAAO,eAAGA,EAAcvE,UAG5B,YAAYwE,GACR,GAAI,eAAYA,GAA2B,CACvC,IAAK,MAAMpX,KAAQoD,KAAK4T,UACpB,GAAII,IAA6BhU,KAAKiU,WAAWrX,GAC7C,OAAOoD,KAAK4T,UAAUhX,GAG9B,GAAOtB,mBAAmB,uBAAwB,UAAW0Y,GAGjE,IAA+C,IAA3CA,EAAyB1G,QAAQ,KAAa,CAC9C,MAAM1Q,EAAOoX,EAAyBzD,OAChC2D,EAAWjU,OAAOkU,KAAKnU,KAAK4T,WAAWH,OAAQ/O,GAAOA,EAAE8L,MAAM,KAAiB,KAAO5T,GAO5F,OANwB,IAApBsX,EAAS7Y,OACT,GAAOC,mBAAmB,uBAAwB,OAAQsB,GAErDsX,EAAS7Y,OAAS,GACvB,GAAOC,mBAAmB,8BAA+B,OAAQsB,GAE9DoD,KAAK4T,UAAUM,EAAS,IAGnC,MAAM3Y,EAASyE,KAAK4T,UAAU,GAAiB/D,WAAWmE,GAA0BxE,UAIpF,OAHKjU,GACD,GAAOD,mBAAmB,uBAAwB,YAAa0Y,GAE5DzY,EAGX,SAAS6Y,GACL,GAAI,eAAYA,GAAyB,CACrC,MAAMC,EAAYD,EAAuBE,cACzC,IAAK,MAAM1X,KAAQoD,KAAK6T,OACpB,GAAIQ,IAAcrU,KAAKuU,cAAc3X,GACjC,OAAOoD,KAAK6T,OAAOjX,GAG3B,GAAOtB,mBAAmB,oBAAqB,YAAa+Y,GAGhE,IAA6C,IAAzCD,EAAuB9G,QAAQ,KAAa,CAC5C,MAAM1Q,EAAOwX,EAAuB7D,OAC9B2D,EAAWjU,OAAOkU,KAAKnU,KAAK6T,QAAQJ,OAAQ/O,GAAOA,EAAE8L,MAAM,KAAiB,KAAO5T,GAOzF,OANwB,IAApBsX,EAAS7Y,OACT,GAAOC,mBAAmB,oBAAqB,OAAQsB,GAElDsX,EAAS7Y,OAAS,GACvB,GAAOC,mBAAmB,2BAA4B,OAAQsB,GAE3DoD,KAAK6T,OAAOK,EAAS,IAGhC,MAAM3Y,EAASyE,KAAK6T,OAAOxD,EAAcR,WAAWuE,GAAwB5E,UAI5E,OAHKjU,GACD,GAAOD,mBAAmB,oBAAqB,YAAa8Y,GAEzD7Y,EAGX,SAASyY,GACL,GAAI,eAAYA,GAA2B,CACvC,MAAMC,EAAa,eAAUjU,KAAKwU,YAAa,cAC/C,IAAK,MAAM5X,KAAQoD,KAAKnE,OAAQ,CAC5B,MAAMb,EAAQgF,KAAKnE,OAAOe,GAC1B,GAAIoX,IAA6BC,EAAWjZ,GACxC,OAAOgF,KAAKnE,OAAOe,GAG3B,GAAOtB,mBAAmB,oBAAqB,UAAW0Y,GAG9D,IAA+C,IAA3CA,EAAyB1G,QAAQ,KAAa,CAC9C,MAAM1Q,EAAOoX,EAAyBzD,OAChC2D,EAAWjU,OAAOkU,KAAKnU,KAAKnE,QAAQ4X,OAAQ/O,GAAOA,EAAE8L,MAAM,KAAiB,KAAO5T,GAOzF,OANwB,IAApBsX,EAAS7Y,OACT,GAAOC,mBAAmB,oBAAqB,OAAQsB,GAElDsX,EAAS7Y,OAAS,GACvB,GAAOC,mBAAmB,2BAA4B,OAAQsB,GAE3DoD,KAAKnE,OAAOqY,EAAS,IAGhC,MAAM3Y,EAASyE,KAAKnE,OAAO,GAAiBgU,WAAWmE,GAA0BxE,UAIjF,OAHKjU,GACD,GAAOD,mBAAmB,oBAAqB,YAAa0Y,GAEzDzY,EAGX,WAAW2W,GACP,GAA0B,kBAAf,EACP,IACIA,EAAWlS,KAAKyU,YAAYvC,GAEhC,MAAOlX,GACH,IACIkX,EAAWlS,KAAK0U,SAASxC,GAE7B,MAAOyC,GACH,MAAM3Z,GAIlB,OAAO,eAAUgF,KAAKwU,YAAa,aAA5B,CAA0CtC,GAGrD,cAAc6B,GAIV,MAH+B,kBAApB,IACPA,EAAgB/T,KAAK4U,SAASb,IAE3B,eAAU/T,KAAKwU,YAAa,gBAA5B,CAA6CT,GAExD,cAAcpF,EAAQ5L,GAClB,OAAO/C,KAAK6U,UAAU9K,OAAO4E,EAAQ5L,GAEzC,cAAc4L,EAAQzE,GAClB,OAAOlK,KAAK6U,UAAU/K,OAAO6E,EAAQzE,GAEzC,aAAaA,GACT,OAAOlK,KAAK8U,cAAc9U,KAAK2T,OAAOjD,OAAQxG,GAAU,IAE5D,kBAAkBgI,EAAUnP,GACE,kBAAf,IACPmP,EAAWlS,KAAK0U,SAASxC,IAE7B,MAAM/T,EAAQ,eAAS4E,GAIvB,OAHI,eAAQ5E,EAAMtB,MAAM,EAAG,MAAQmD,KAAKiU,WAAW/B,IAC/C,GAAO5W,mBAAmB,uCAAuC4W,EAAStV,QAAS,OAAQ,eAAQuB,IAEhG6B,KAAK+U,cAAc7C,EAASxB,OAAQvS,EAAMtB,MAAM,IAE3D,kBAAkBqV,EAAUhI,GAIxB,MAH0B,kBAAf,IACPgI,EAAWlS,KAAK0U,SAASxC,IAEtB,eAAQ,eAAO,CAClBlS,KAAKiU,WAAW/B,GAChBlS,KAAK8U,cAAc5C,EAASxB,OAAQxG,GAAU,OAItD,mBAAmB8K,EAAkBjS,GACC,kBAAvB,IACPiS,EAAmBhV,KAAKyU,YAAYO,IAExC,MAAM7W,EAAQ,eAAS4E,GAIvB,OAHI,eAAQ5E,EAAMtB,MAAM,EAAG,MAAQmD,KAAKiU,WAAWe,IAC/C,GAAO1Z,mBAAmB,0CAA0C0Z,EAAiBpY,QAAS,OAAQ,eAAQuB,IAE3G6B,KAAK+U,cAAcC,EAAiBtE,OAAQvS,EAAMtB,MAAM,IAGnE,mBAAmBmY,EAAkB9K,GAIjC,MAHkC,kBAAvB,IACP8K,EAAmBhV,KAAKyU,YAAYO,IAEjC,eAAQ,eAAO,CAClBhV,KAAKiU,WAAWe,GAChBhV,KAAK8U,cAAcE,EAAiBtE,OAAQxG,GAAU,OAI9D,qBAAqB8K,EAAkBjS,GACD,kBAAvB,IACPiS,EAAmBhV,KAAKyU,YAAYO,IAExC,IAAI7W,EAAQ,eAAS4E,GACjBoQ,EAAS,KACT8B,EAAY,KACZC,EAAY,KACZC,EAAiB,KACrB,OAAQhX,EAAM9C,OAAS2E,KAAK6U,UAAUjC,gBAClC,KAAK,EACD,IACI,OAAO5S,KAAK6U,UAAU9K,OAAOiL,EAAiBpD,QAASzT,GAE3D,MAAOnD,IACP,MACJ,KAAK,EAAG,CACJ,MAAMoa,EAAW,eAAQjX,EAAMtB,MAAM,EAAG,IAClCwY,EAAUpC,GAAcmC,GAC9B,GAAIC,EACAJ,EAAYjV,KAAK6U,UAAU9K,OAAOsL,EAAQ3E,OAAQvS,EAAMtB,MAAM,IAC9DqY,EAAYG,EAAQzY,KACpBuY,EAAiBE,EAAQnC,UACrBmC,EAAQlC,SACRA,EAAS8B,EAAU,SAIvB,IACI,MAAMja,EAAQgF,KAAK0U,SAASU,GAC5BH,EAAYjV,KAAK6U,UAAU9K,OAAO/O,EAAM0V,OAAQvS,EAAMtB,MAAM,IAC5DqY,EAAYla,EAAM4B,KAClBuY,EAAiBna,EAAMwU,SAE3B,MAAOxU,GACHuW,QAAQC,IAAIxW,GAGpB,OAGR,OAAO,GAAOY,WAAW,wBAAyB,OAAOC,OAAOyZ,eAAgB,CAC5EC,OAAQP,EAAiBxF,SACzByF,YAAWC,YAAWC,iBAAgBhC,WAI9C,qBAAqB6B,EAAkB9K,GAInC,MAHkC,kBAAvB,IACP8K,EAAmBhV,KAAKyU,YAAYO,IAEjC,eAAQhV,KAAK6U,UAAU/K,OAAOkL,EAAiBpD,QAAS1H,GAAU,KAG7E,mBAAmB6J,EAAe7J,GACC,kBAApB,IACP6J,EAAgB/T,KAAK4U,SAASb,IAE9B7J,EAAO7O,OAAS0Y,EAAcrD,OAAOrV,QACrC,GAAOO,WAAW,0BAA4BmY,EAAcvE,SAAU,OAAO3T,OAAO2Z,oBAAqB,CACrGjL,SAAU,SACVrO,MAAOgO,IAGf,IAAIuL,EAAS,GACR1B,EAActD,WACfgF,EAAOzX,KAAKgC,KAAKuU,cAAcR,IAEnC,MAAM2B,EAAc,CAAClI,EAAOtR,IACL,WAAfsR,EAAM/F,KACC,eAAGvL,GAEU,UAAfsR,EAAM/F,KACJ,eAAU,eAAQvL,KAGV,YAAfsR,EAAM/F,MACNzH,KAAK6U,UAAU/K,OAAO,CAAC,WAAY,CAAC5N,IAEjC,eAAW,eAAQA,GAAQ,KAEtCgO,EAAOS,QAAQ,CAACzO,EAAOqE,KACnB,IAAIiN,EAAQuG,EAAcrD,OAAOnQ,GAC5BiN,EAAMQ,QAME,MAAT9R,EACAuZ,EAAOzX,KAAK,MAEY,UAAnBwP,EAAMjC,UAA2C,UAAnBiC,EAAMjC,SACzC,GAAOjQ,mBAAmB,gDAAkD,YAAckS,EAAM5Q,KAAOV,GAElGY,MAAMG,QAAQf,GACnBuZ,EAAOzX,KAAK9B,EAAMmO,IAAKnO,GAAUwZ,EAAYlI,EAAOtR,KAGpDuZ,EAAOzX,KAAK0X,EAAYlI,EAAOtR,IAflB,MAATA,GACA,GAAOZ,mBAAmB,qDAAuD,YAAckS,EAAM5Q,KAAOV,KAkBxH,MAAOuZ,EAAOpa,QAAwC,OAA9Boa,EAAOA,EAAOpa,OAAS,GAC3Coa,EAAOE,MAEX,OAAOF,EAEX,eAAe1B,EAAe7J,GACK,kBAApB,IACP6J,EAAgB/T,KAAK4U,SAASb,IAElC,MAAM0B,EAAS,GACTG,EAAY,GACZC,EAAa,GA6BnB,OA5BK9B,EAActD,WACfgF,EAAOzX,KAAKgC,KAAKuU,cAAcR,IAE/B7J,EAAO7O,SAAW0Y,EAAcrD,OAAOrV,QACvC,GAAOC,mBAAmB,kCAAmC,SAAU4O,GAE3E6J,EAAcrD,OAAO/F,QAAQ,CAAC6C,EAAOjN,KACjC,MAAMrE,EAAQgO,EAAO3J,GACrB,GAAIiN,EAAMQ,QACN,GAAmB,WAAfR,EAAM/F,KACNgO,EAAOzX,KAAK,eAAG9B,SAEd,GAAmB,UAAfsR,EAAM/F,KACXgO,EAAOzX,KAAK,eAAU9B,QAErB,IAAuB,UAAnBsR,EAAMjC,UAA2C,UAAnBiC,EAAMjC,SAEzC,MAAM,IAAIxQ,MAAM,mBAGhB0a,EAAOzX,KAAKgC,KAAK6U,UAAU/K,OAAO,CAAC0D,EAAM/F,MAAO,CAACvL,UAIrD0Z,EAAU5X,KAAKwP,GACfqI,EAAW7X,KAAK9B,KAGjB,CACH6G,KAAM/C,KAAK6U,UAAU/K,OAAO8L,EAAWC,GACvCJ,OAAQA,GAIhB,eAAe1B,EAAehR,EAAM0S,GAIhC,GAH+B,kBAApB,IACP1B,EAAgB/T,KAAK4U,SAASb,IAEpB,MAAV0B,IAAmB1B,EAActD,UAAW,CAC5C,IAAIqF,EAAY9V,KAAKuU,cAAcR,GAC9B,eAAY0B,EAAO,GAAI,KAAOA,EAAO,GAAGnB,gBAAkBwB,GAC3D,GAAOla,WAAW,0BAA2B,OAAOC,OAAOyO,iBAAkB,CAAEC,SAAU,YAAawL,SAAUD,EAAW5Z,MAAOuZ,EAAO,KAE7IA,EAASA,EAAO5Y,MAAM,GAE1B,IAAImR,EAAU,GACVgI,EAAa,GACbrO,EAAU,GACdoM,EAAcrD,OAAO/F,QAAQ,CAAC6C,EAAOjN,KAC7BiN,EAAMQ,QACa,WAAfR,EAAM/F,MAAoC,UAAf+F,EAAM/F,MAAuC,UAAnB+F,EAAMjC,UAA2C,UAAnBiC,EAAMjC,UACzFyC,EAAQhQ,KAAK,EAAUsR,WAAW,CAAE7H,KAAM,UAAW7K,KAAM4Q,EAAM5Q,QACjE+K,EAAQ3J,MAAK,KAGbgQ,EAAQhQ,KAAKwP,GACb7F,EAAQ3J,MAAK,KAIjBgY,EAAWhY,KAAKwP,GAChB7F,EAAQ3J,MAAK,MAGrB,IAAIiY,EAA2B,MAAVR,EAAkBzV,KAAK6U,UAAU9K,OAAOiE,EAAS,eAAOyH,IAAW,KACpFS,EAAmBlW,KAAK6U,UAAU9K,OAAOiM,EAAYjT,GAAM,GAC3DxH,EAAS,GACT4a,EAAkB,EAAGC,EAAe,EACxCrC,EAAcrD,OAAO/F,QAAQ,CAAC6C,EAAOjN,KACjC,GAAIiN,EAAMQ,QACN,GAAqB,MAAjBiI,EACA1a,EAAOgF,GAAS,IAAI,GAAQ,CAAEyS,YAAY,EAAMqD,KAAM,YAErD,GAAI1O,EAAQpH,GACbhF,EAAOgF,GAAS,IAAI,GAAQ,CAAEyS,YAAY,EAAMqD,KAAMJ,EAAcG,YAGpE,IACI7a,EAAOgF,GAAS0V,EAAcG,KAElC,MAAOpb,GACHO,EAAOgF,GAASvF,OAKxB,IACIO,EAAOgF,GAAS2V,EAAiBC,KAErC,MAAOnb,GACHO,EAAOgF,GAASvF,EAIxB,GAAIwS,EAAM5Q,MAA8B,MAAtBrB,EAAOiS,EAAM5Q,MAAe,CAC1C,MAAMV,EAAQX,EAAOgF,GAEjBrE,aAAiBnB,MACjBkF,OAAOC,eAAe3E,EAAQiS,EAAM5Q,KAAM,CACtCoK,YAAY,EACZ2E,IAAK,KAAQ,MAAMyH,GAAgB,YAAY1D,KAAKE,UAAUpC,EAAM5Q,MAASV,MAIjFX,EAAOiS,EAAM5Q,MAAQV,KAKjC,IAAK,IAAII,EAAI,EAAGA,EAAIf,EAAOF,OAAQiB,IAAK,CACpC,MAAMJ,EAAQX,EAAOe,GACjBJ,aAAiBnB,OACjBkF,OAAOC,eAAe3E,EAAQe,EAAG,CAC7B0K,YAAY,EACZ2E,IAAK,KAAQ,MAAMyH,GAAgB,SAAS9W,EAAKJ,MAI7D,OAAO+D,OAAO2L,OAAOrQ,GAIzB,iBAAiB+a,GACb,IAAIpE,EAAWlS,KAAKyU,YAAY6B,EAAGvT,KAAKoJ,UAAU,EAAG,IAAImI,eACzD,OAAKpC,EAGE,IAAI,GAAuB,CAC9BqE,KAAMvW,KAAK6U,UAAU9K,OAAOmI,EAASxB,OAAQ,KAAO4F,EAAGvT,KAAKoJ,UAAU,KACtE6I,iBAAkB9C,EAClBtV,KAAMsV,EAAStV,KACfsW,UAAWhB,EAAS1C,SACpBX,QAAS7O,KAAKiU,WAAW/B,GACzBhW,MAAO,OAAUkM,KAAKkO,EAAGpa,OAAS,OAR3B,KAef,SAASsV,GACL,IAAIU,EAAWlS,KAAK4U,SAASpD,EAAIiE,OAAO,IACxC,OAAKvD,GAAYA,EAASzB,UACf,KAKJ,IAAI,GAAe,CACtBsD,cAAe7B,EACftV,KAAMsV,EAAStV,KACfsW,UAAWhB,EAAS1C,SACpBgH,MAAOxW,KAAKuU,cAAcrC,GAC1BqE,KAAMvW,KAAKyW,eAAevE,EAAUV,EAAIzO,KAAMyO,EAAIiE,UAG1D,WAAW1S,GACP,MAAM2T,EAAU,eAAQ3T,GACxB,IAAImP,EAAWlS,KAAK0U,SAASgC,EAAQvK,UAAU,EAAG,IAAImI,eACtD,OAAKpC,EAGE,IAAI,GAAiB,CACxBqE,KAAMvW,KAAK6U,UAAU9K,OAAOmI,EAASxB,OAAQ,KAAOgG,EAAQvK,UAAU,KACtEwK,cAAezE,EACftV,KAAMsV,EAAStV,KACfsW,UAAWhB,EAAS1C,SACpBX,QAAS7O,KAAKiU,WAAW/B,KAPlB,KAqBf,mBAAmBhW,GACf,SAAUA,IAASA,EAAM0a,eCplB1B,MAAM,GAAU,0BCCvB,IAAIC,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMhb,GAAS,OAAOA,aAAiB8a,EAAI9a,EAAQ,IAAI8a,GAAE,SAAUG,GAAWA,EAAQjb,MAC/F,OAAO,IAAK8a,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAUpb,GAAS,IAAMqb,EAAKN,EAAUO,KAAKtb,IAAW,MAAOub,GAAKJ,EAAOI,IACpF,SAASC,EAASxb,GAAS,IAAMqb,EAAKN,EAAU,SAAS/a,IAAW,MAAOub,GAAKJ,EAAOI,IACvF,SAASF,EAAKhc,GAAUA,EAAOoc,KAAOR,EAAQ5b,EAAOW,OAASgb,EAAM3b,EAAOW,OAAO0b,KAAKN,EAAWI,GAClGH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,YAQtE,MAAM,GAAS,IAAI,OAAO,IAMnB,MAAM,WAAkB,OAC3B,mBAAmBtb,GACf,SAAUA,IAASA,EAAM4b,eAgD1B,MAAM,GACT,cACI,GAAOC,yBAA0B,IACjC,eAAe/X,KAAM,eAAe,GAExC,aACI,OAAO6W,GAAU7W,UAAM,OAAQ,GAAQ,YACnC,MAAM,MAAEuB,EAAK,SAAEyW,SAAmB,eAAkB,CAChDzW,MAAOvB,KAAKiY,SAAS,UACrBD,SAAUhY,KAAKkY,cAAcC,MAAOnd,GAGzB,QAGf,IAAIod,EAAe,KAAMC,EAAuB,KAQhD,OAPI9W,GAASA,EAAM+W,gBAIfD,EAAuB,OAAUjQ,KAAK,cACtCgQ,EAAe7W,EAAM+W,cAAc3L,IAAI,GAAGD,IAAI2L,IAE3C,CAAED,eAAcC,uBAAsBL,eAIrD,YAAYO,EAAWC,GACnB,OAAOxY,KAAKyF,GAAG8S,EAAWC,GAG9B,eAAeD,EAAWC,GACtB,OAAOxY,KAAKyY,IAAIF,EAAWC,GAE/B,kBAAkBtc,GACd,SAAUA,IAASA,EAAMwc,cC1G1B,MAAM,GAAU,wBCCvB,IAAI,GAAwC,SAAU5B,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMhb,GAAS,OAAOA,aAAiB8a,EAAI9a,EAAQ,IAAI8a,GAAE,SAAUG,GAAWA,EAAQjb,MAC/F,OAAO,IAAK8a,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAUpb,GAAS,IAAMqb,EAAKN,EAAUO,KAAKtb,IAAW,MAAOub,GAAKJ,EAAOI,IACpF,SAASC,EAASxb,GAAS,IAAMqb,EAAKN,EAAU,SAAS/a,IAAW,MAAOub,GAAKJ,EAAOI,IACvF,SAASF,EAAKhc,GAAUA,EAAOoc,KAAOR,EAAQ5b,EAAOW,OAASgb,EAAM3b,EAAOW,OAAO0b,KAAKN,EAAWI,GAClGH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,YAMtE,MAAM,GAAS,IAAI,OAAO,IACpBmB,GAAyB,CAC3B,aAAc,UAAW,aAAc,OAAQ,OAAQ,WAAY,WAAY,eAAgB,uBAAwB,QAAS,KAAM,OAAQ,SAE5IC,GAAgB,CAClB,OAAO/c,OAAOgd,mBACd,OAAOhd,OAAOid,cACd,OAAOjd,OAAOkd,yBAIX,MAAM,GAGT,cACI,GAAOhB,yBAA0B,IACjC,eAAe/X,KAAM,aAAa,GAItC,WAAWgZ,GACP,OAAO,GAAUhZ,UAAM,OAAQ,GAAQ,YAEnC,OADAA,KAAKiZ,eAAe,oBACPjZ,KAAKkZ,SAASC,WAAWnZ,KAAKoZ,aAAcJ,MAGjE,oBAAoBA,GAChB,OAAO,GAAUhZ,UAAM,OAAQ,GAAQ,YAEnC,OADAA,KAAKiZ,eAAe,6BACPjZ,KAAKkZ,SAASG,oBAAoBrZ,KAAKoZ,aAAcJ,MAI1E,YAAYM,GACR,OAAO,GAAUtZ,UAAM,OAAQ,GAAQ,YACnCA,KAAKiZ,eAAe,eACpB,MAAM3C,QAAW,eAAkBtW,KAAKuZ,iBAAiBD,IACzD,aAAatZ,KAAKkZ,SAASM,YAAYlD,MAI/C,KAAKgD,EAAaN,GACd,OAAO,GAAUhZ,UAAM,OAAQ,GAAQ,YACnCA,KAAKiZ,eAAe,QACpB,MAAM3C,QAAW,eAAkBtW,KAAKuZ,iBAAiBD,IACzD,aAAatZ,KAAKkZ,SAASlc,KAAKsZ,EAAI0C,MAI5C,gBAAgBM,GACZ,OAAO,GAAUtZ,UAAM,OAAQ,GAAQ,YACnCA,KAAKiZ,eAAe,mBACpB,MAAM3C,QAAWtW,KAAKyZ,oBAAoBH,GACpCI,QAAiB1Z,KAAK2Z,gBAAgBrD,GAC5C,aAAatW,KAAKkZ,SAASU,gBAAgBF,MAGnD,aACI,OAAO,GAAU1Z,UAAM,OAAQ,GAAQ,YACnCA,KAAKiZ,eAAe,cACpB,MAAMY,QAAgB7Z,KAAKkZ,SAASY,aACpC,OAAOD,EAAQE,WAGvB,cACI,OAAO,GAAU/Z,UAAM,OAAQ,GAAQ,YAEnC,OADAA,KAAKiZ,eAAe,qBACPjZ,KAAKkZ,SAAShB,iBAGnC,aACI,OAAO,GAAUlY,UAAM,OAAQ,GAAQ,YAEnC,OADAA,KAAKiZ,eAAe,oBACPjZ,KAAKkZ,SAASc,gBAGnC,YAAYpd,GACR,OAAO,GAAUoD,UAAM,OAAQ,GAAQ,YAEnC,OADAA,KAAKiZ,eAAe,qBACPjZ,KAAKkZ,SAASe,YAAYrd,MAY/C,iBAAiB0c,GACb,IAAK,MAAMvZ,KAAOuZ,GAC+B,IAAzCX,GAAuBrL,QAAQvN,IAC/B,GAAOzE,mBAAmB,4BAA8ByE,EAAK,cAAeuZ,GAGpF,MAAMhD,EAAK,eAAYgD,GAgBvB,OAfe,MAAXhD,EAAGlO,KACHkO,EAAGlO,KAAOpI,KAAKoZ,aAIf9C,EAAGlO,KAAOgP,QAAQ8C,IAAI,CAClB9C,QAAQD,QAAQb,EAAGlO,MACnBpI,KAAKoZ,eACNxB,KAAMrc,IACDA,EAAO,GAAG+Y,gBAAkB/Y,EAAO,GAAG+Y,eACtC,GAAOhZ,mBAAmB,wBAAyB,cAAege,GAE/D/d,EAAO,KAGf+a,EASX,oBAAoBgD,GAChB,OAAO,GAAUtZ,UAAM,OAAQ,GAAQ,YACnC,MAAMsW,QAAW,eAAkBtW,KAAKuZ,iBAAiBD,IAC5C,MAAThD,EAAG6D,KACH7D,EAAG6D,GAAK/C,QAAQD,QAAQb,EAAG6D,IAAIvC,KAAMuC,GAAO,GAAUna,UAAM,OAAQ,GAAQ,YACxE,GAAU,MAANma,EACA,OAAO,KAEX,MAAMrG,QAAgB9T,KAAKia,YAAYE,GAIvC,OAHe,MAAXrG,GACA,GAAOxY,mBAAmB,qCAAsC,QAAS6e,GAEtErG,MAGXwC,EAAG6D,GAAGhC,MAAOnd,QAGjB,MAAMof,EAAiC,MAAnB9D,EAAG8B,cAAmD,MAA3B9B,EAAG+B,qBAOlD,GANmB,MAAf/B,EAAG0B,UAAiC,IAAZ1B,EAAG7O,OAAc2S,EAGvB,IAAZ9D,EAAG7O,MAA0B,IAAZ6O,EAAG7O,OAAe2S,GACzC,GAAO9e,mBAAmB,4EAA6E,cAAege,GAHtH,GAAOhe,mBAAmB,+CAAgD,cAAege,GAK5E,IAAZhD,EAAG7O,MAAyB,MAAX6O,EAAG7O,MAAqC,MAAnB6O,EAAG8B,cAAmD,MAA3B9B,EAAG+B,qBAIpE,GAAgB,IAAZ/B,EAAG7O,MAA0B,IAAZ6O,EAAG7O,KAGN,MAAf6O,EAAG0B,WACH1B,EAAG0B,SAAWhY,KAAKkY,mBAGtB,CAED,MAAMmC,QAAgBra,KAAKga,aAC3B,GAAe,MAAX1D,EAAG7O,KAEH,GAA4B,MAAxB4S,EAAQjC,cAAwD,MAAhCiC,EAAQhC,qBAIxC,GADA/B,EAAG7O,KAAO,EACS,MAAf6O,EAAG0B,SAAkB,CAGrB,MAAMA,EAAW1B,EAAG0B,gBACb1B,EAAG0B,SACV1B,EAAG8B,aAAeJ,EAClB1B,EAAG+B,qBAAuBL,OAIH,MAAnB1B,EAAG8B,eACH9B,EAAG8B,aAAeiC,EAAQjC,cAEC,MAA3B9B,EAAG+B,uBACH/B,EAAG+B,qBAAuBgC,EAAQhC,2BAIjB,MAApBgC,EAAQrC,UAGToC,GACA,GAAOxe,WAAW,oCAAqC,OAAOC,OAAOC,sBAAuB,CACxFC,UAAW,wBAIA,MAAfua,EAAG0B,WACH1B,EAAG0B,SAAWqC,EAAQrC,UAG1B1B,EAAG7O,KAAO,GAIV,GAAO7L,WAAW,oCAAqC,OAAOC,OAAOC,sBAAuB,CACxFC,UAAW,2BAIF,IAAZua,EAAG7O,OAGe,MAAnB6O,EAAG8B,eACH9B,EAAG8B,aAAeiC,EAAQjC,cAEC,MAA3B9B,EAAG+B,uBACH/B,EAAG+B,qBAAuBgC,EAAQhC,4BAjE1C/B,EAAG7O,KAAO,EAiGd,OA5BgB,MAAZ6O,EAAGgE,QACHhE,EAAGgE,MAAQta,KAAKqZ,oBAAoB,YAErB,MAAf/C,EAAGiE,WACHjE,EAAGiE,SAAWva,KAAKwZ,YAAYlD,GAAI6B,MAAOnd,IACtC,GAAI4d,GAActL,QAAQtS,EAAMsQ,OAAS,EACrC,MAAMtQ,EAEV,OAAO,GAAOY,WAAW,4EAA6E,OAAOC,OAAO2e,wBAAyB,CACzIxf,MAAOA,EACPsb,GAAIA,OAIE,MAAdA,EAAGyD,QACHzD,EAAGyD,QAAU/Z,KAAKya,aAGlBnE,EAAGyD,QAAU3C,QAAQ8C,IAAI,CACrB9C,QAAQD,QAAQb,EAAGyD,SACnB/Z,KAAKya,eACN7C,KAAM8C,IACc,IAAfA,EAAQ,IAAYA,EAAQ,KAAOA,EAAQ,IAC3C,GAAOpf,mBAAmB,2BAA4B,cAAege,GAElEoB,EAAQ,WAGV,eAAkBpE,MAKvC,eAAeva,GACNiE,KAAKkZ,UACN,GAAOtd,WAAW,mBAAoB,OAAOC,OAAOC,sBAAuB,CACvEC,UAAYA,GAAa,mBAIrC,gBAAgBG,GACZ,SAAUA,IAASA,EAAMye,YAG1B,MAAM,WAAmB,GAC5B,YAAY7G,EAASoF,GACjB,GAAOzG,oBAAqB,IAC5BpJ,QACA,eAAerJ,KAAM,UAAW8T,GAChC,eAAe9T,KAAM,WAAYkZ,GAAY,MAEjD,aACI,OAAO9B,QAAQD,QAAQnX,KAAK8T,SAEhC,MAAMlM,EAAS7L,GACX,OAAOqb,QAAQD,UAAUS,KAAK,KAC1B,GAAOhc,WAAWgM,EAAS,OAAO/L,OAAOC,sBAAuB,CAAEC,UAAWA,MAGrF,YAAY6L,GACR,OAAO5H,KAAK4a,MAAM,kCAAmC,eAEzD,gBAAgBtB,GACZ,OAAOtZ,KAAK4a,MAAM,sCAAuC,mBAE7D,eAAeC,EAAQ/N,EAAO5Q,GAC1B,OAAO8D,KAAK4a,MAAM,oCAAqC,iBAE3D,QAAQ1B,GACJ,OAAO,IAAI,GAAWlZ,KAAK8T,QAASoF,I,iBC5SrC,MAAM,GAAU,kBCCvB,IAAI,GAAwC,SAAUpC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMhb,GAAS,OAAOA,aAAiB8a,EAAI9a,EAAQ,IAAI8a,GAAE,SAAUG,GAAWA,EAAQjb,MAC/F,OAAO,IAAK8a,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAUpb,GAAS,IAAMqb,EAAKN,EAAUO,KAAKtb,IAAW,MAAOub,GAAKJ,EAAOI,IACpF,SAASC,EAASxb,GAAS,IAAMqb,EAAKN,EAAU,SAAS/a,IAAW,MAAOub,GAAKJ,EAAOI,IACvF,SAASF,EAAKhc,GAAUA,EAAOoc,KAAOR,EAAQ5b,EAAOW,OAASgb,EAAM3b,EAAOW,OAAO0b,KAAKN,EAAWI,GAClGH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,YAatE,MAAM,GAAS,IAAI,OAAO,IAIpB,GAAyB,CAC3BuC,SAAS,EAAMhX,MAAM,EAAMqF,MAAM,EAAMmS,UAAU,EAAMvC,UAAU,EAAMsC,OAAO,EAAMH,IAAI,EAAMje,OAAO,EACrGuL,MAAM,EAAMqT,YAAY,EACxB1C,cAAc,EAAMC,sBAAsB,EAC1C0C,YAAY,GAEhB,SAAS,GAAYC,EAAUC,GAC3B,OAAO,GAAUjb,UAAM,OAAQ,GAAQ,YACnC,MAAMpD,QAAaqe,EACG,kBAAX,GACP,GAAO3f,mBAAmB,8BAA+B,OAAQsB,GAGrE,IACI,OAAO,eAAWA,GAEtB,MAAO5B,IACFggB,GACD,GAAOpf,WAAW,sDAAuD,OAAOC,OAAOC,sBAAuB,CAC1GC,UAAW,gBAGnB,MAAM+X,QAAgBkH,EAASf,YAAYrd,GAI3C,OAHe,MAAXkX,GACA,GAAOxY,mBAAmB,kDAAmD,OAAQsB,GAElFkX,KAIf,SAASoH,GAAiBF,EAAU9e,EAAOif,GACvC,OAAO,GAAUnb,UAAM,OAAQ,GAAQ,YACnC,OAAIlD,MAAMG,QAAQke,SACD/D,QAAQ8C,IAAIiB,EAAU9Q,IAAI,CAAC8Q,EAAW5a,IACxC2a,GAAiBF,EAAYle,MAAMG,QAAQf,GAAUA,EAAMqE,GAASrE,EAAMif,EAAUve,MAAQue,KAGpF,YAAnBA,EAAU1T,WACG,GAAYuT,EAAU9e,GAEhB,UAAnBif,EAAU1T,WACGyT,GAAiBF,EAAU9e,EAAOif,EAAU/M,YAElC,UAAvB+M,EAAU5P,SACLzO,MAAMG,QAAQf,SAMNkb,QAAQ8C,IAAIhe,EAAMmO,IAAK5L,GAAMyc,GAAiBF,EAAUvc,EAAG0c,EAAU9L,iBALvE+H,QAAQC,OAAO,GAAO+D,UAAU,0BAA2B,OAAOvf,OAAOyO,iBAAkB,CAC9FC,SAAU,QACVrO,WAKLA,KAGf,SAASud,GAAoB4B,EAAUnJ,EAAUqE,GAC7C,OAAO,GAAUvW,UAAM,OAAQ,GAAQ,YAEnC,IAAIsb,EAAY,GACZ/E,EAAKlb,SAAW6W,EAASxB,OAAOrV,OAAS,GAAwC,kBAA3Bkb,EAAKA,EAAKlb,OAAS,KACzEigB,EAAY,eAAY/E,EAAKZ,QAGjC,GAAO5J,mBAAmBwK,EAAKlb,OAAQ6W,EAASxB,OAAOrV,OAAQ,sBAE3DggB,EAASE,OACLD,EAAUlT,KAGVkT,EAAUlT,KAAO,eAAkB,CAC/BoT,SAAU,GAAYH,EAASE,OAAQD,EAAUlT,MACjDmT,OAAQF,EAASE,OAAOnC,eACzBxB,KAAM6D,GAAU,GAAUzb,UAAM,OAAQ,GAAQ,YAM/C,OALI,eAAWyb,EAAMF,UAAYE,EAAMD,UACnC,GAAO5f,WAAW,8CAA+C,OAAOC,OAAOC,sBAAuB,CAClGC,UAAW,mBAGZ0f,EAAMD,aAIjBF,EAAUlT,KAAOiT,EAASE,OAAOnC,aAGhCkC,EAAUlT,OACfkT,EAAUlT,KAAO,GAAYiT,EAASnC,SAAUoC,EAAUlT,OAO9D,MAAMsT,QAAiB,eAAkB,CACrCnF,KAAM2E,GAAiBG,EAASE,QAAUF,EAASnC,SAAU3C,EAAMrE,EAASxB,QAC5EoD,QAASuH,EAASM,gBAClBL,UAAY,eAAkBA,IAAc,KAG1CvY,EAAOsY,EAASO,UAAUC,mBAAmB3J,EAAUwJ,EAASnF,MAChED,EAAK,CACPvT,KAAMA,EACNoX,GAAIuB,EAAS5H,SAGXgI,EAAKJ,EAASJ,UA2BpB,GAzBgB,MAAZQ,EAAGxB,QACHhE,EAAGgE,MAAQ,OAAUlS,KAAK0T,EAAGxB,OAAO1R,YAErB,MAAfkT,EAAGvB,WACHjE,EAAGiE,SAAW,OAAUnS,KAAK0T,EAAGvB,WAEjB,MAAfuB,EAAG9D,WACH1B,EAAG0B,SAAW,OAAU5P,KAAK0T,EAAG9D,WAEb,MAAnB8D,EAAG1D,eACH9B,EAAG8B,aAAe,OAAUhQ,KAAK0T,EAAG1D,eAET,MAA3B0D,EAAGzD,uBACH/B,EAAG+B,qBAAuB,OAAUjQ,KAAK0T,EAAGzD,uBAEjC,MAAXyD,EAAG1T,OACHkO,EAAGlO,KAAO0T,EAAG1T,MAEF,MAAX0T,EAAGrU,OACH6O,EAAG7O,KAAOqU,EAAGrU,MAEI,MAAjBqU,EAAGhB,aACHxE,EAAGwE,WAAa,4BAAcgB,EAAGhB,aAGlB,MAAfxE,EAAGiE,UAAoC,MAAhBrI,EAASjB,IAAa,CAM7C,IAAI8K,EAAY,KAChB,MAAM5d,EAAQ,eAAS4E,GACvB,IAAK,IAAIzG,EAAI,EAAGA,EAAI6B,EAAM9C,OAAQiB,IAC9Byf,GAAa,EACT5d,EAAM7B,KACNyf,GAAa,IAGrBzF,EAAGiE,SAAW,OAAUnS,KAAK8J,EAASjB,KAAKvE,IAAIqP,GAGnD,GAAID,EAAG5f,MAAO,CACV,MAAM8f,EAAU,OAAU5T,KAAK0T,EAAG5f,OAC7B8f,EAAQhQ,UAAakG,EAASb,SAC/B,GAAOzV,WAAW,2CAA4C,OAAOC,OAAOC,sBAAuB,CAC/FC,UAAW,kBACXG,MAAOof,EAAUpf,QAGzBoa,EAAGpa,MAAQ8f,EAEXF,EAAGf,aACHzE,EAAGyE,WAAa,eAAYe,EAAGf,oBAG5BO,EAAUhB,aACVgB,EAAUf,gBACVe,EAAUtD,gBACVsD,EAAUlT,YACVkT,EAAUpf,aACVof,EAAU7T,YACV6T,EAAUR,kBACVQ,EAAUlD,oBACVkD,EAAUjD,4BACViD,EAAUP,WAGjB,MAAMkB,EAAYhc,OAAOkU,KAAKmH,GAAW7H,OAAQ1T,GAA2B,MAAlBub,EAAUvb,IAOpE,OANIkc,EAAU5gB,QACV,GAAOO,WAAW,mBAAmBqgB,EAAU5R,IAAK6R,GAAMxM,KAAKE,UAAUsM,IAAI5d,KAAK,KAAQ,OAAOzC,OAAOC,sBAAuB,CAC3HC,UAAW,YACXuf,UAAWW,IAGZ3F,KAGf,SAAS6F,GAAcd,EAAUnJ,GAC7B,OAAO,YAAaqE,GAChB,OAAOkD,GAAoB4B,EAAUnJ,EAAUqE,IAGvD,SAAS6F,GAAcf,EAAUnJ,GAC7B,MAAMmK,EAAoBhB,EAASE,QAAUF,EAASnC,SACtD,OAAO,YAAa3C,GAChB,OAAO,GAAUvW,UAAM,OAAQ,GAAQ,YAC9Bqc,GACD,GAAOzgB,WAAW,wCAAyC,OAAOC,OAAOC,sBAAuB,CAC5FC,UAAW,gBAGnB,MAAMua,QAAWmD,GAAoB4B,EAAUnJ,EAAUqE,GACzD,aAAa8F,EAAiB7C,YAAYlD,OAItD,SAASgG,GAAgBjB,EAAU/E,GAC/B,MAAMiG,EAAOjG,EAAGiG,KAAKC,KAAKlG,GAC1BA,EAAGiG,KAAQE,GACAF,EAAKE,GAAe7E,KAAM8E,IAC7BA,EAAQ7I,OAAS6I,EAAQC,KAAKtS,IAAKmH,IAC/B,IAAIoL,EAAQ,eAASpL,GACjBqL,EAAS,KACb,IACIA,EAASxB,EAASO,UAAUkB,SAAStL,GAEzC,MAAOiG,IAqBP,OAnBIoF,IACAD,EAAMrG,KAAOsG,EAAOtG,KACpBqG,EAAM7S,OAAS,CAAChH,EAAM0S,IACX4F,EAASO,UAAUnF,eAAeoG,EAAO9I,cAAehR,EAAM0S,GAEzEmH,EAAMA,MAAQC,EAAOjgB,KACrBggB,EAAMG,eAAiBF,EAAO3J,WAGlC0J,EAAMI,eAAiB,IAAe3B,EAASnC,SAC/C0D,EAAM3E,SAAW,IACNoD,EAASnC,SAASjB,SAASyE,EAAQO,WAE9CL,EAAMM,eAAiB,IACZ7B,EAASnC,SAASgE,eAAeR,EAAQS,iBAEpDP,EAAMQ,sBAAwB,IACnBhG,QAAQD,QAAQuF,GAEpBE,IAEJF,IAInB,SAASW,GAAUhC,EAAUnJ,EAAUoL,GACnC,MAAMjB,EAAoBhB,EAASE,QAAUF,EAASnC,SACtD,OAAO,YAAa3C,GAChB,OAAO,GAAUvW,UAAM,OAAQ,GAAQ,YAEnC,IAAIgZ,OAAWpP,EACf,GAAI2M,EAAKlb,SAAW6W,EAASxB,OAAOrV,OAAS,GAAwC,kBAA3Bkb,EAAKA,EAAKlb,OAAS,GAAkB,CAC3F,MAAMigB,EAAY,eAAY/E,EAAKZ,OACT,MAAtB2F,EAAUtC,WACVA,QAAiBsC,EAAUtC,iBAExBsC,EAAUtC,SACjBzC,EAAKvY,KAAKsd,GAGoB,MAA9BD,EAASkC,0BACHlC,EAASmC,UAAUxE,IAG7B,MAAM1C,QAAWmD,GAAoB4B,EAAUnJ,EAAUqE,GACnDhb,QAAe8gB,EAAiBrf,KAAKsZ,EAAI0C,GAC/C,IACI,IAAI9c,EAAQmf,EAASO,UAAU6B,qBAAqBvL,EAAU3W,GAI9D,OAHI+hB,GAA8C,IAA5BpL,EAASN,QAAQvW,SACnCa,EAAQA,EAAM,IAEXA,EAEX,MAAOlB,GAMH,MALIA,EAAMsQ,OAAS,OAAOzP,OAAOyZ,iBAC7Bta,EAAM8Y,QAAUuH,EAASvH,QACzB9Y,EAAMub,KAAOA,EACbvb,EAAMse,YAAchD,GAElBtb,OAKtB,SAAS0iB,GAAUrC,EAAUnJ,GACzB,OAAO,YAAaqE,GAChB,OAAO,GAAUvW,UAAM,OAAQ,GAAQ,YAC9Bqb,EAASE,QACV,GAAO3f,WAAW,0CAA2C,OAAOC,OAAOC,sBAAuB,CAC9FC,UAAW,oBAIe,MAA9Bsf,EAASkC,0BACHlC,EAASmC,aAEnB,MAAMG,QAAkBlE,GAAoB4B,EAAUnJ,EAAUqE,GAC1DD,QAAW+E,EAASE,OAAO3B,gBAAgB+D,GAGjD,OADArB,GAAgBjB,EAAU/E,GACnBA,MAInB,SAASsH,GAAavC,EAAUnJ,EAAUoL,GACtC,OAAIpL,EAASd,SACFiM,GAAUhC,EAAUnJ,EAAUoL,GAElCI,GAAUrC,EAAUnJ,GAE/B,SAAS2L,GAAYpK,GACjB,OAAIA,EAAOK,SAA6B,MAAjBL,EAAOgC,QAA2C,IAAzBhC,EAAOgC,OAAOpa,QAGtDoY,EAAOK,SAAW,KAAO,KAAOL,EAAOgC,OAAShC,EAAOgC,OAAOpL,IAAKmM,GACnE1Z,MAAMG,QAAQuZ,GACPA,EAAMlY,KAAK,KAEfkY,GACRlY,KAAK,KAAO,IAPJ,IASf,MAAM,GACF,YAAYwf,EAAKrK,GACb,eAAezT,KAAM,MAAO8d,GAC5B,eAAe9d,KAAM,SAAUyT,GAC/BzT,KAAK+d,WAAa,GAEtB,YAAYvF,EAAUwF,GAClBhe,KAAK+d,WAAW/f,KAAK,CAAEwa,SAAUA,EAAUwF,KAAMA,IAErD,eAAexF,GACX,IAAIb,GAAO,EACX3X,KAAK+d,WAAa/d,KAAK+d,WAAWtK,OAAQwK,MAClCtG,GAAQsG,EAAKzF,WAAaA,KAG9Bb,GAAO,GACA,IAGf,qBACI3X,KAAK+d,WAAa,GAEtB,YACI,OAAO/d,KAAK+d,WAAW1T,IAAK/N,GAAMA,EAAEkc,UAExC,gBACI,OAAOxY,KAAK+d,WAAW1iB,OAE3B,IAAIkb,GACA,MAAM2H,EAAgBle,KAAKke,gBAU3B,OATAle,KAAK+d,WAAa/d,KAAK+d,WAAWtK,OAAQwK,IACtC,MAAME,EAAW5H,EAAK1Z,QAMtB,OAJAuhB,WAAW,KACPH,EAAKzF,SAASX,MAAM7X,KAAMme,IAC3B,IAEMF,EAAS,OAEfC,EAEX,aAAatB,IAGb,QAAQA,GACJ,MAAO,CAACA,IAGhB,MAAMyB,WAA0B,GAC5B,cACIhV,MAAM,QAAS,OAQvB,MAAM,WAA6B,GAC/B,YAAYyK,EAASwK,EAAmBpM,EAAUuD,GAC9C,MAAMhC,EAAS,CACXK,QAASA,GAEb,IAAI0C,EAAQ8H,EAAkB/J,cAAcrC,GACxCuD,GACIe,IAAUf,EAAO,IACjB,GAAOna,mBAAmB,iBAAkB,SAAUma,GAE1DhC,EAAOgC,OAASA,EAAO5Y,SAGvB4W,EAAOgC,OAAS,CAACe,GAErBnN,MAAMwU,GAAYpK,GAASA,GAC3B,eAAezT,KAAM,UAAW8T,GAChC,eAAe9T,KAAM,YAAase,GAClC,eAAete,KAAM,WAAYkS,GAErC,aAAa0K,GACTvT,MAAMkV,aAAa3B,GACnBA,EAAMA,MAAQ5c,KAAKkS,SAAStV,KAC5BggB,EAAMG,eAAiB/c,KAAKkS,SAAS1C,SACrCoN,EAAM7S,OAAS,CAAChH,EAAM0S,IACXzV,KAAK4b,UAAUnF,eAAezW,KAAKkS,SAAUnP,EAAM0S,GAE9D,IACImH,EAAMrG,KAAOvW,KAAK4b,UAAUnF,eAAezW,KAAKkS,SAAU0K,EAAM7Z,KAAM6Z,EAAMnH,QAEhF,MAAOza,GACH4hB,EAAMrG,KAAO,KACbqG,EAAM4B,YAAcxjB,GAG5B,QAAQ4hB,GACJ,MAAM/gB,EAASsL,EAAkByV,EAAMrG,MACvC,GAAI1a,EAAOR,OACP,MAAMQ,EAAO,GAAGb,MAEpB,MAAMub,GAAQqG,EAAMrG,MAAQ,IAAI1Z,QAEhC,OADA0Z,EAAKvY,KAAK4e,GACHrG,GAQf,MAAM,WAA6B,GAC/B,YAAYzC,EAASwK,GACjBjV,MAAM,IAAK,CAAEyK,QAASA,IACtB,eAAe9T,KAAM,UAAW8T,GAChC,eAAe9T,KAAM,YAAase,GAEtC,aAAa1B,GACTvT,MAAMkV,aAAa3B,GACnB,IACI,MAAMC,EAAS7c,KAAK4b,UAAUkB,SAASF,GACvCA,EAAMA,MAAQC,EAAOjgB,KACrBggB,EAAMG,eAAiBF,EAAO3J,UAC9B0J,EAAM7S,OAAS,CAAChH,EAAM0S,IACXzV,KAAK4b,UAAUnF,eAAeoG,EAAO9I,cAAehR,EAAM0S,GAErEmH,EAAMrG,KAAOsG,EAAOtG,KAExB,MAAOvb,MAKR,MAAM,GACT,YAAYyjB,EAAeH,EAAmBjC,GAC1C,GAAO5J,oBAAqBiM,IAG5B,eAAe1e,KAAM,YAAa,0BAAsB,eAAtB,CAAsCse,IAChD,MAApBjC,GACA,eAAerc,KAAM,WAAY,MACjC,eAAeA,KAAM,SAAU,OAE1B,GAAO2e,SAAStC,IACrB,eAAerc,KAAM,WAAYqc,EAAiBnD,UAAY,MAC9D,eAAelZ,KAAM,SAAUqc,IAE1B,GAASuC,WAAWvC,IACzB,eAAerc,KAAM,WAAYqc,GACjC,eAAerc,KAAM,SAAU,OAG/B,GAAO1E,mBAAmB,6BAA8B,mBAAoB+gB,GAEhF,eAAerc,KAAM,aAAc,IACnC,eAAeA,KAAM,cAAe,IACpC,eAAeA,KAAM,YAAa,IAClC,eAAeA,KAAM,sBAAuB,IAC5C,eAAeA,KAAM,UAAW,IAChC,CACI,MAAM6e,EAAgB,GACtB5e,OAAOkU,KAAKnU,KAAK4b,UAAU/H,QAAQlJ,QAASoS,IACxC,MAAMH,EAAQ5c,KAAK4b,UAAU/H,OAAOkJ,GACpC,eAAe/c,KAAK8e,QAAS/B,EAAgB,IAAIxG,KACtC,CACHzC,QAAS9T,KAAK8T,QACd2B,OAAQzV,KAAK4b,UAAUmD,mBAAmBnC,EAAOrG,MAGpDsI,EAAcjC,EAAMhgB,QACrBiiB,EAAcjC,EAAMhgB,MAAQ,IAEhCiiB,EAAcjC,EAAMhgB,MAAMoB,KAAK+e,KAEnC9c,OAAOkU,KAAK0K,GAAelU,QAAS/N,IAChC,MAAMkiB,EAAUD,EAAcjiB,GACP,IAAnBkiB,EAAQzjB,OACR,eAAe2E,KAAK8e,QAASliB,EAAMoD,KAAK8e,QAAQA,EAAQ,KAGxD,GAAOpjB,KAAK,2BAA2BkB,MAASkiB,EAAQxgB,KAAK,YAUzE,GANA,eAAe0B,KAAM,iBAAkB,IACvC,eAAeA,KAAM,gBAAiB,IACjB,MAAjBye,GACA,GAAOnjB,mBAAmB,uCAAwC,gBAAiBmjB,GAEvF,eAAeze,KAAM,UAAWye,GAC5Bze,KAAKkZ,SACL,eAAelZ,KAAM,kBAAmB,GAAYA,KAAKkZ,SAAUuF,SAGnE,IACI,eAAeze,KAAM,kBAAmBoX,QAAQD,QAAQ,eAAWsH,KAEvE,MAAOzjB,GAEH,GAAOY,WAAW,2DAA4D,OAAOC,OAAOC,sBAAuB,CAC/GC,UAAW,iBAIvB,MAAMyP,EAAc,GACdwT,EAAmB,GACzB/e,OAAOkU,KAAKnU,KAAK4b,UAAUhI,WAAWjJ,QAASuI,IAC3C,MAAMhB,EAAWlS,KAAK4b,UAAUhI,UAAUV,GAG1C,GAAI8L,EAAiB9L,GACjB,GAAOxX,KAAK,2BAA2BgU,KAAKE,UAAUsD,QAD1D,CAIA8L,EAAiB9L,IAAa,EAG9B,CACI,MAAMtW,EAAOsV,EAAStV,KACjB4O,EAAY,IAAI5O,KACjB4O,EAAY,IAAI5O,GAAU,IAE9B4O,EAAY,IAAI5O,GAAQoB,KAAKkV,GAEV,MAAnBlT,KAAKkT,IACL,eAAelT,KAAMkT,EAAW0K,GAAa5d,KAAMkS,GAAU,IAKhC,MAA7BlS,KAAK4T,UAAUV,IACf,eAAelT,KAAK4T,UAAWV,EAAW0K,GAAa5d,KAAMkS,GAAU,IAEzC,MAA9BlS,KAAKif,WAAW/L,IAChB,eAAelT,KAAKif,WAAY/L,EAAWmK,GAAUrd,KAAMkS,GAAU,IAE9B,MAAvClS,KAAKyZ,oBAAoBvG,IACzB,eAAelT,KAAKyZ,oBAAqBvG,EAAWiJ,GAAcnc,KAAMkS,IAEzC,MAA/BlS,KAAKwZ,YAAYtG,IACjB,eAAelT,KAAKwZ,YAAatG,EAAWkJ,GAAcpc,KAAMkS,OAGxEjS,OAAOkU,KAAK3I,GAAab,QAAS/N,IAE9B,MAAMsiB,EAAa1T,EAAY5O,GAC/B,GAAIsiB,EAAW7jB,OAAS,EACpB,OAGJuB,EAAOA,EAAKuP,UAAU,GACtB,MAAM+G,EAAYgM,EAAW,GAE7B,IACsB,MAAdlf,KAAKpD,IACL,eAAeoD,KAAMpD,EAAMoD,KAAKkT,IAGxC,MAAOuE,IACqB,MAAxBzX,KAAK4T,UAAUhX,IACf,eAAeoD,KAAK4T,UAAWhX,EAAMoD,KAAK4T,UAAUV,IAE3B,MAAzBlT,KAAKif,WAAWriB,IAChB,eAAeoD,KAAKif,WAAYriB,EAAMoD,KAAKif,WAAW/L,IAEpB,MAAlClT,KAAKyZ,oBAAoB7c,IACzB,eAAeoD,KAAKyZ,oBAAqB7c,EAAMoD,KAAKyZ,oBAAoBvG,IAE9C,MAA1BlT,KAAKwZ,YAAY5c,IACjB,eAAeoD,KAAKwZ,YAAa5c,EAAMoD,KAAKwZ,YAAYtG,MAIpE,0BAA0BoG,GACtB,OAAO,eAAmBA,GAE9B,oBAAoBgF,GAChB,OAAI,GAAUa,YAAYb,GACfA,EAEJ,IAAI,GAAUA,GAGzB,WACI,OAAOte,KAAKwd,YAEhB,UAAUxE,GAuBN,OAtBKhZ,KAAKof,mBAEFpf,KAAKud,kBACLvd,KAAKof,iBAAmBpf,KAAKud,kBAAkBhB,OAAO3E,KAAK,IAChD5X,MAOXA,KAAKof,iBAAmBpf,KAAKkZ,SAASmG,QAAQrf,KAAK8T,QAASkF,GAAUpB,KAAMtM,IAC3D,OAATA,GACA,GAAO1P,WAAW,wBAAyB,OAAOC,OAAOC,sBAAuB,CAC5EwjB,gBAAiBtf,KAAK8T,QACtB/X,UAAW,gBAGZiE,QAIZA,KAAKof,iBAMhB,SAAS9D,GACAtb,KAAKub,QACN,GAAO3f,WAAW,0CAA2C,OAAOC,OAAOC,sBAAuB,CAAEC,UAAW,8BAEnH,MAAMua,EAAK,eAAYgF,GAAa,IAQpC,MAPA,CAAC,OAAQ,MAAM3Q,SAAQ,SAAU5K,GACd,MAAXuW,EAAGvW,IAGP,GAAOnE,WAAW,mBAAqBmE,EAAK,OAAOlE,OAAOC,sBAAuB,CAAEC,UAAWgE,OAElGuW,EAAG6D,GAAKna,KAAK2b,gBACN3b,KAAKuf,WAAW3H,KAAK,IACjB5X,KAAKub,OAAO3B,gBAAgBtD,IAI3C,QAAQ+F,GAC8B,kBAAvB,IACPA,EAAmB,IAAI,GAAWA,EAAkBrc,KAAKkZ,WAE7D,MAAMmC,EAAW,IAAKrb,KAAgB,YAAEA,KAAK8T,QAAS9T,KAAK4b,UAAWS,GAItE,OAHIrc,KAAKud,mBACL,eAAelC,EAAU,oBAAqBrb,KAAKud,mBAEhDlC,EAGX,OAAOoD,GACH,OAAO,IAAKze,KAAgB,YAAEye,EAAeze,KAAK4b,UAAW5b,KAAKub,QAAUvb,KAAKkZ,UAErF,iBAAiBhd,GACb,OAAO,GAAQsjB,UAAUtjB,GAE7B,uBAAuBujB,GAEnB,OAAIzf,KAAK0f,eAAeD,EAAa3B,KAC1B9d,KAAK0f,eAAeD,EAAa3B,KAErC2B,EAEX,iBAAiBlH,GACb,GAA2B,kBAAhB,EAA0B,CAGjC,GAAkB,UAAdA,EACA,OAAOvY,KAAK2f,uBAAuB,IAAItB,IAG3C,GAAkB,UAAd9F,EACA,OAAOvY,KAAK2f,uBAAuB,IAAI,GAAa,QAAS,OAGjE,GAAkB,MAAdpH,EACA,OAAOvY,KAAK2f,uBAAuB,IAAI,GAAqB3f,KAAK8T,QAAS9T,KAAK4b,YAGnF,MAAM1J,EAAWlS,KAAK4b,UAAUhH,SAAS2D,GACzC,OAAOvY,KAAK2f,uBAAuB,IAAI,GAAqB3f,KAAK8T,QAAS9T,KAAK4b,UAAW1J,IAG9F,GAAIqG,EAAU9C,QAAU8C,EAAU9C,OAAOpa,OAAS,EAAG,CAEjD,IACI,MAAMmb,EAAQ+B,EAAU9C,OAAO,GAC/B,GAAuB,kBAAZ,EACP,MAAM,IAAI1a,MAAM,iBAEpB,MAAMmX,EAAWlS,KAAK4b,UAAUhH,SAAS4B,GACzC,OAAOxW,KAAK2f,uBAAuB,IAAI,GAAqB3f,KAAK8T,QAAS9T,KAAK4b,UAAW1J,EAAUqG,EAAU9C,SAElH,MAAOza,IAEP,MAAMyY,EAAS,CACXK,QAAS9T,KAAK8T,QACd2B,OAAQ8C,EAAU9C,QAEtB,OAAOzV,KAAK2f,uBAAuB,IAAI,GAAa9B,GAAYpK,GAASA,IAE7E,OAAOzT,KAAK2f,uBAAuB,IAAI,GAAqB3f,KAAK8T,QAAS9T,KAAK4b,YAEnF,oBAAoB6D,GAChB,GAAqC,IAAjCA,EAAavB,gBAAuB,QAC7Ble,KAAK0f,eAAeD,EAAa3B,KAExC,MAAM8B,EAAO5f,KAAK6f,cAAcJ,EAAa3B,KACzC8B,GAAQH,EAAahM,SACrBzT,KAAKkZ,SAAST,IAAIgH,EAAahM,OAAQmM,UAChC5f,KAAK6f,cAAcJ,EAAa3B,OAMnD,WAAW2B,EAAcjO,EAAKgH,GAC1B,MAAMoE,EAAQ,eAASpL,GAavB,OAZAoL,EAAMI,eAAiB,KACdxE,IAGLiH,EAAazC,eAAexE,GAC5BxY,KAAK8f,oBAAoBL,KAE7B7C,EAAM3E,SAAW,IAAejY,KAAKkZ,SAASjB,SAASzG,EAAIyL,WAC3DL,EAAMM,eAAiB,IAAeld,KAAKkZ,SAASgE,eAAe1L,EAAI2L,iBACvEP,EAAMQ,sBAAwB,IAAepd,KAAKkZ,SAASkE,sBAAsB5L,EAAI2L,iBAErFsC,EAAalB,aAAa3B,GACnBA,EAEX,kBAAkB6C,EAAcjH,EAAUwF,GAQtC,GAPKhe,KAAKkZ,UACN,GAAOtd,WAAW,wDAAyD,OAAOC,OAAOC,sBAAuB,CAAEC,UAAW,SAEjI0jB,EAAaM,YAAYvH,EAAUwF,GAEnChe,KAAK0f,eAAeD,EAAa3B,KAAO2B,GAEnCzf,KAAK6f,cAAcJ,EAAa3B,KAAM,CACvC,MAAMkC,EAAexO,IACjB,IAAIoL,EAAQ5c,KAAKigB,WAAWR,EAAcjO,EAAKgH,GAE/C,GAAyB,MAArBoE,EAAM4B,YACN,IACI,MAAMjI,EAAOkJ,EAAaS,QAAQtD,GAClC5c,KAAK4f,KAAKH,EAAahM,UAAW8C,GAEtC,MAAOvb,GACH4hB,EAAM4B,YAAcxjB,EAAMA,MAIP,MAAvBykB,EAAahM,QACbzT,KAAK4f,KAAK,QAAShD,GAGE,MAArBA,EAAM4B,aACNxe,KAAK4f,KAAK,QAAShD,EAAM4B,YAAa5B,IAG9C5c,KAAK6f,cAAcJ,EAAa3B,KAAOkC,EAEZ,MAAvBP,EAAahM,QACbzT,KAAKkZ,SAASzT,GAAGga,EAAahM,OAAQuM,IAIlD,YAAYpD,EAAOuD,EAAsBC,GACrC,MAAMX,EAAezf,KAAKqgB,iBAAiBzD,GACrCnJ,EAAS,eAAYgM,EAAahM,QAWxC,MAVsC,kBAA3B,GAAuC,eAAY0M,EAAsB,KACjE,MAAXC,GACA,GAAO9kB,mBAAmB,wCAAyC,UAAW8kB,GAElF3M,EAAOwJ,UAAYkD,IAGnB1M,EAAO6M,UAAsC,MAAxBH,EAAgCA,EAAuB,EAC5E1M,EAAO2M,QAAuB,MAAXA,EAAmBA,EAAU,UAE7CpgB,KAAKkZ,SAASqH,QAAQ9M,GAAQmE,KAAM+E,GAChCA,EAAKtS,IAAKmH,GAAQxR,KAAKigB,WAAWR,EAAcjO,EAAK,QAGpE,GAAGoL,EAAOpE,GAEN,OADAxY,KAAKwgB,kBAAkBxgB,KAAKqgB,iBAAiBzD,GAAQpE,GAAU,GACxDxY,KAEX,KAAK4c,EAAOpE,GAER,OADAxY,KAAKwgB,kBAAkBxgB,KAAKqgB,iBAAiBzD,GAAQpE,GAAU,GACxDxY,KAEX,KAAKuY,KAAchC,GACf,IAAKvW,KAAKkZ,SACN,OAAO,EAEX,MAAMuG,EAAezf,KAAKqgB,iBAAiB9H,GACrChd,EAAUkkB,EAAagB,IAAIlK,GAAQ,EAGzC,OADAvW,KAAK8f,oBAAoBL,GAClBlkB,EAEX,cAAcgd,GACV,OAAKvY,KAAKkZ,SAGO,MAAbX,EACOtY,OAAOkU,KAAKnU,KAAK0f,gBAAgBjU,OAAO,CAACC,EAAO3L,IAC5C2L,EAAQ1L,KAAK0f,eAAe3f,GAAKme,gBACzC,GAEAle,KAAKqgB,iBAAiB9H,GAAW2F,gBAP7B,EASf,UAAU3F,GACN,IAAKvY,KAAKkZ,SACN,MAAO,GAEX,GAAiB,MAAbX,EAAmB,CACnB,MAAMhd,EAAS,GACf,IAAK,IAAIuiB,KAAO9d,KAAK0f,eACjB1f,KAAK0f,eAAe5B,GAAK4C,YAAY/V,QAAS6N,IAC1Cjd,EAAOyC,KAAKwa,KAGpB,OAAOjd,EAEX,OAAOyE,KAAKqgB,iBAAiB9H,GAAWmI,YAE5C,mBAAmBnI,GACf,IAAKvY,KAAKkZ,SACN,OAAOlZ,KAEX,GAAiB,MAAbuY,EAAmB,CACnB,IAAK,MAAMuF,KAAO9d,KAAK0f,eAAgB,CACnC,MAAMD,EAAezf,KAAK0f,eAAe5B,GACzC2B,EAAakB,qBACb3gB,KAAK8f,oBAAoBL,GAE7B,OAAOzf,KAGX,MAAMyf,EAAezf,KAAKqgB,iBAAiB9H,GAG3C,OAFAkH,EAAakB,qBACb3gB,KAAK8f,oBAAoBL,GAClBzf,KAEX,IAAIuY,EAAWC,GACX,IAAKxY,KAAKkZ,SACN,OAAOlZ,KAEX,MAAMyf,EAAezf,KAAKqgB,iBAAiB9H,GAG3C,OAFAkH,EAAazC,eAAexE,GAC5BxY,KAAK8f,oBAAoBL,GAClBzf,KAEX,eAAeuY,EAAWC,GACtB,OAAOxY,KAAKyY,IAAIF,EAAWC,IAG5B,MAAMkG,WAAiB,IAEvB,MAAM,GACT,YAAYJ,EAAmBsC,EAAUrF,GACrC,IAAIsF,EAAc,KAEdA,EADsB,kBAAf,EACOD,EAET,eAAQA,GACC,eAAQA,GAEjBA,GAAyC,kBAArBA,EAAe,OAE1BA,EAAStZ,OAIT,IAGkB,OAAhCuZ,EAAY1U,UAAU,EAAG,KACzB0U,EAAc,KAAOA,KAGpB,eAAYA,IAAiBA,EAAYxlB,OAAS,IACnD,GAAOC,mBAAmB,mBAAoB,WAAYslB,GAG1DrF,IAAW,GAAOoD,SAASpD,IAC3B,GAAOjgB,mBAAmB,iBAAkB,SAAUigB,GAE1D,eAAevb,KAAM,WAAY6gB,GACjC,eAAe7gB,KAAM,YAAa,0BAAsB,eAAtB,CAAsCse,IACxE,eAAete,KAAM,SAAUub,GAAU,MAG7C,wBAAwBhF,GACpB,IAAID,EAAK,GAET,GAAIC,EAAKlb,SAAW2E,KAAK4b,UAAUjI,OAAOjD,OAAOrV,OAAS,GAAwC,kBAA3Bkb,EAAKA,EAAKlb,OAAS,GAAkB,CACxGib,EAAK,eAAYC,EAAKZ,OACtB,IAAK,MAAM5V,KAAOuW,EACd,IAAK,GAAuBvW,GACxB,MAAM,IAAIhF,MAAM,gCAAkCgF,GAW9D,GANA,CAAC,OAAQ,OAAQ,MAAM4K,QAAS5K,IACb,MAAXuW,EAAGvW,IAGP,GAAOnE,WAAW,mBAAqBmE,EAAK,OAAOlE,OAAOC,sBAAuB,CAAEC,UAAWgE,MAE9FuW,EAAGpa,MAAO,CACV,MAAMA,EAAQ,OAAUkM,KAAKkO,EAAGpa,OAC3BA,EAAM8P,UAAahM,KAAK4b,UAAUjI,OAAOtC,SAC1C,GAAOzV,WAAW,gDAAiD,OAAOC,OAAOC,sBAAuB,CACpGC,UAAW,kBACXG,MAAOoa,EAAGpa,QAWtB,OANA,GAAO6P,mBAAmBwK,EAAKlb,OAAQ2E,KAAK4b,UAAUjI,OAAOjD,OAAOrV,OAAQ,4BAE5Eib,EAAGvT,KAAO,eAAQ,eAAO,CACrB/C,KAAK4gB,SACL5gB,KAAK4b,UAAUkF,aAAavK,MAEzBD,EAEX,UAAUC,GACN,OAAO,GAAUvW,UAAM,OAAQ,GAAQ,YACnC,IAAIsb,EAAY,GAEZ/E,EAAKlb,SAAW2E,KAAK4b,UAAUjI,OAAOjD,OAAOrV,OAAS,IACtDigB,EAAY/E,EAAKZ,OAGrB,GAAO5J,mBAAmBwK,EAAKlb,OAAQ2E,KAAK4b,UAAUjI,OAAOjD,OAAOrV,OAAQ,4BAE5E,MAAMsT,QAAeuM,GAAiBlb,KAAKub,OAAQhF,EAAMvW,KAAK4b,UAAUjI,OAAOjD,QAC/E/B,EAAO3Q,KAAKsd,GAEZ,MAAMyF,EAAa/gB,KAAKghB,wBAAwBrS,GAE1C2H,QAAWtW,KAAKub,OAAO3B,gBAAgBmH,GACvCjN,EAAU,eAAU9T,KAAKwU,YAAa,qBAA5B,CAAkD8B,GAC5D+E,EAAW,eAAUrb,KAAKwU,YAAa,cAA5B,CAA2CV,EAAS9T,KAAK4b,UAAW5b,KAAKub,QAI1F,OAFAe,GAAgBjB,EAAU/E,GAC1B,eAAe+E,EAAU,oBAAqB/E,GACvC+E,KAGf,OAAOvH,GACH,OAAQ9T,KAAgB,YAAEihB,YAAYnN,EAAS9T,KAAK4b,UAAW5b,KAAKub,QAExE,QAAQA,GACJ,OAAO,IAAKvb,KAAgB,YAAEA,KAAK4b,UAAW5b,KAAK4gB,SAAUrF,GAEjE,oBAAoB2F,EAAgB3F,GACV,MAAlB2F,GACA,GAAOtlB,WAAW,0BAA2B,OAAOC,OAAOslB,iBAAkB,CAAE5W,SAAU,mBAE7D,kBAArB,IACP2W,EAAiBxR,KAAKC,MAAMuR,IAEhC,MAAM1N,EAAM0N,EAAe1N,IAC3B,IAAIoN,EAAW,KAOf,OANIM,EAAeN,SACfA,EAAWM,EAAeN,SAErBM,EAAeE,KAAOF,EAAeE,IAAIR,WAC9CA,EAAWM,EAAeE,IAAIR,UAE3B,IAAI5gB,KAAKwT,EAAKoN,EAAUrF,GAEnC,oBAAoB+C,GAChB,OAAOI,GAAS2C,aAAa/C,GAEjC,0BAA0BhI,GACtB,OAAO,eAAmBA,GAE9B,mBAAmBxC,EAASwK,EAAmB/C,GAC3C,OAAO,IAAImD,GAAS5K,EAASwK,EAAmB/C,I,iBCt/BxD,MAAM,GAAS,IAAI,OAAO,SAEpB,GAAoB,GACpB+F,GAAO,OAAUlZ,KAAK,GACtBmZ,GAAc,OAAUnZ,MAAM,GACpC,SAASoZ,GAAW5Z,EAAS6Z,EAAO1lB,EAAWG,GAC3C,MAAMyS,EAAS,CAAE8S,MAAOA,EAAO1lB,UAAWA,GAI1C,YAHc6N,IAAV1N,IACAyS,EAAOzS,MAAQA,GAEZ,GAAON,WAAWgM,EAAS,OAAO/L,OAAO6lB,cAAe/S,GAGnE,IAAIgT,GAAQ,IACZ,MAAOA,GAAMtmB,OAAS,IAClBsmB,IAASA,GAGb,SAASC,GAAcC,GACnB,GAA0B,kBAAf,EACP,IACIA,EAAW,OAAUzZ,KAAKyZ,GAAUjZ,WAExC,MAAO6O,IAEX,MAA0B,kBAAf,GAA2BoK,GAAY,GAAKA,GAAY,OAASA,EAAW,GAC3E,IAAMF,GAAMxV,UAAU,EAAG0V,GAE9B,GAAOvmB,mBAAmB,uBAAwB,WAAYumB,GAElE,SAASC,GAAY5lB,EAAO2lB,GACf,MAAZA,IACAA,EAAW,GAEf,MAAME,EAAaH,GAAcC,GAEjC3lB,EAAQ,OAAUkM,KAAKlM,GACvB,MAAM8lB,EAAW9lB,EAAMuQ,GAAG6U,IACtBU,IACA9lB,EAAQA,EAAMyQ,IAAI4U,KAEtB,IAAIU,EAAW/lB,EAAMgmB,IAAIH,GAAYjQ,WACrC,MAAOmQ,EAAS5mB,OAAS0mB,EAAW1mB,OAAS,EACzC4mB,EAAW,IAAMA,EAGrBA,EAAWA,EAAStZ,MAAM,wBAAwB,GAClD,MAAMwZ,EAAQjmB,EAAMkmB,IAAIL,GAAYjQ,WAUpC,OARI5V,EADsB,IAAtB6lB,EAAW1mB,OACH8mB,EAGAA,EAAQ,IAAMF,EAEtBD,IACA9lB,EAAQ,IAAMA,GAEXA,EAEJ,SAASmmB,GAAWnmB,EAAO2lB,GACd,MAAZA,IACAA,EAAW,GAEf,MAAME,EAAaH,GAAcC,GACV,kBAAZ,GAAyB3lB,EAAMyM,MAAM,gBAC5C,GAAOrN,mBAAmB,wBAAyB,QAASY,GAGhE,MAAM8lB,EAAsC,MAA1B9lB,EAAMiQ,UAAU,EAAG,GACjC6V,IACA9lB,EAAQA,EAAMiQ,UAAU,IAEd,MAAVjQ,GACA,GAAOZ,mBAAmB,gBAAiB,QAASY,GAGxD,MAAMgV,EAAQhV,EAAMsU,MAAM,KACtBU,EAAM7V,OAAS,GACf,GAAOC,mBAAmB,0BAA2B,QAASY,GAElE,IAAIimB,EAAQjR,EAAM,GAAI+Q,EAAW/Q,EAAM,GAClCiR,IACDA,EAAQ,KAEPF,IACDA,EAAW,KAGf,MAAyC,MAAlCA,EAASA,EAAS5mB,OAAS,GAC9B4mB,EAAWA,EAAS9V,UAAU,EAAG8V,EAAS5mB,OAAS,GAGnD4mB,EAAS5mB,OAAS0mB,EAAW1mB,OAAS,GACtCmmB,GAAW,wCAAyC,YAAa,cAGpD,KAAbS,IACAA,EAAW,KAGf,MAAOA,EAAS5mB,OAAS0mB,EAAW1mB,OAAS,EACzC4mB,GAAY,IAEhB,MAAMK,EAAa,OAAUla,KAAK+Z,GAC5BI,EAAgB,OAAUna,KAAK6Z,GACrC,IAAIO,EAAOF,EAAW3V,IAAIoV,GAAarV,IAAI6V,GAI3C,OAHIP,IACAQ,EAAMA,EAAI7V,IAAI4U,KAEXiB,EAEJ,MAAM,GACT,YAAYrT,EAAkB/C,EAAQqW,EAAOZ,GACrC1S,IAAqB,IACrB,GAAOvT,WAAW,2DAA4D,OAAOC,OAAOC,sBAAuB,CAC/GC,UAAW,oBAGnBiE,KAAKoM,OAASA,EACdpM,KAAKyiB,MAAQA,EACbziB,KAAK6hB,SAAWA,EAChB7hB,KAAKpD,MAAQwP,EAAS,GAAK,KAAO,QAAUhO,OAAOqkB,GAAS,IAAMrkB,OAAOyjB,GACzE7hB,KAAK0iB,YAAcd,GAAcC,GACjC5hB,OAAO2L,OAAO5L,MAElB,YAAY9D,GACR,GAAIA,aAAiB,GACjB,OAAOA,EAEY,kBAAZ,IACPA,EAAQ,YAAYA,GAExB,IAAIkQ,GAAS,EACTqW,EAAQ,IACRZ,EAAW,GACf,GAAuB,kBAAZ,EACP,GAAc,UAAV3lB,QAGC,GAAc,WAAVA,EACLkQ,GAAS,MAER,CACD,MAAMzD,EAAQzM,EAAMyM,MAAM,gCACrBA,GACD,GAAOrN,mBAAmB,uBAAwB,SAAUY,GAEhEkQ,EAAuB,MAAbzD,EAAM,GAChB8Z,EAAQtmB,SAASwM,EAAM,IACvBkZ,EAAW1lB,SAASwM,EAAM,SAG7B,GAAIzM,EAAO,CACZ,MAAMuf,EAAQ,CAAC1b,EAAK0H,EAAMoC,IACJ,MAAd3N,EAAM6D,GACC8J,UAEC3N,EAAM6D,KAAU0H,GACxB,GAAOnM,mBAAmB,yBAA2ByE,EAAM,QAAU0H,EAAO,IAAK,UAAY1H,EAAK7D,EAAM6D,IAErG7D,EAAM6D,IAEjBqM,EAASqP,EAAM,SAAU,UAAWrP,GACpCqW,EAAQhH,EAAM,QAAS,SAAUgH,GACjCZ,EAAWpG,EAAM,WAAY,SAAUoG,GAQ3C,OANIY,EAAQ,GACR,GAAOnnB,mBAAmB,gDAAiD,eAAgBmnB,GAE3FZ,EAAW,IACX,GAAOvmB,mBAAmB,4CAA6C,kBAAmBumB,GAEvF,IAAI,GAAY,GAAmBzV,EAAQqW,EAAOZ,IAG1D,MAAM,GACT,YAAY1S,EAAkBzL,EAAKxH,EAAOsT,GACtC,GAAOiD,oBAAqB,IACxBtD,IAAqB,IACrB,GAAOvT,WAAW,2DAA4D,OAAOC,OAAOC,sBAAuB,CAC/GC,UAAW,oBAGnBiE,KAAKwP,OAASA,EACdxP,KAAK2iB,KAAOjf,EACZ1D,KAAK4iB,OAAS1mB,EACd8D,KAAK6iB,gBAAiB,EACtB5iB,OAAO2L,OAAO5L,MAElB,aAAa8iB,GACL9iB,KAAKwP,OAAO5S,OAASkmB,EAAMtT,OAAO5S,MAClC,GAAOtB,mBAAmB,gDAAiD,QAASwnB,GAG5F,UAAUA,GACN9iB,KAAK+iB,aAAaD,GAClB,MAAM7hB,EAAIohB,GAAWriB,KAAK4iB,OAAQ5iB,KAAKwP,OAAOqS,UACxCmB,EAAIX,GAAWS,EAAMF,OAAQE,EAAMtT,OAAOqS,UAChD,OAAO,GAAYoB,UAAUhiB,EAAEyL,IAAIsW,GAAIhjB,KAAKwP,OAAOqS,SAAU7hB,KAAKwP,QAEtE,UAAUsT,GACN9iB,KAAK+iB,aAAaD,GAClB,MAAM7hB,EAAIohB,GAAWriB,KAAK4iB,OAAQ5iB,KAAKwP,OAAOqS,UACxCmB,EAAIX,GAAWS,EAAMF,OAAQE,EAAMtT,OAAOqS,UAChD,OAAO,GAAYoB,UAAUhiB,EAAEiiB,IAAIF,GAAIhjB,KAAKwP,OAAOqS,SAAU7hB,KAAKwP,QAEtE,UAAUsT,GACN9iB,KAAK+iB,aAAaD,GAClB,MAAM7hB,EAAIohB,GAAWriB,KAAK4iB,OAAQ5iB,KAAKwP,OAAOqS,UACxCmB,EAAIX,GAAWS,EAAMF,OAAQE,EAAMtT,OAAOqS,UAChD,OAAO,GAAYoB,UAAUhiB,EAAE0L,IAAIqW,GAAGZ,IAAIpiB,KAAKwP,OAAOkT,aAAc1iB,KAAKwP,OAAOqS,SAAU7hB,KAAKwP,QAEnG,UAAUsT,GACN9iB,KAAK+iB,aAAaD,GAClB,MAAM7hB,EAAIohB,GAAWriB,KAAK4iB,OAAQ5iB,KAAKwP,OAAOqS,UACxCmB,EAAIX,GAAWS,EAAMF,OAAQE,EAAMtT,OAAOqS,UAChD,OAAO,GAAYoB,UAAUhiB,EAAE0L,IAAI3M,KAAKwP,OAAOkT,aAAaN,IAAIY,GAAIhjB,KAAKwP,OAAOqS,SAAU7hB,KAAKwP,QAEnG,QACI,MAAM0B,EAAQlR,KAAK8R,WAAWtB,MAAM,KACf,IAAjBU,EAAM7V,QACN6V,EAAMlT,KAAK,KAEf,IAAIzC,EAAS,GAAY6M,KAAK8I,EAAM,GAAIlR,KAAKwP,QAC7C,MAAM2T,GAAejS,EAAM,GAAGvI,MAAM,UAIpC,OAHI3I,KAAKojB,cAAgBD,IACrB5nB,EAASA,EAAO8nB,UAAUC,GAAIC,SAAShoB,EAAOiU,UAE3CjU,EAEX,UACI,MAAM2V,EAAQlR,KAAK8R,WAAWtB,MAAM,KACf,IAAjBU,EAAM7V,QACN6V,EAAMlT,KAAK,KAEf,IAAIzC,EAAS,GAAY6M,KAAK8I,EAAM,GAAIlR,KAAKwP,QAC7C,MAAM2T,GAAejS,EAAM,GAAGvI,MAAM,UAIpC,OAHK3I,KAAKojB,cAAgBD,IACtB5nB,EAASA,EAAOioB,UAAUF,GAAIC,SAAShoB,EAAOiU,UAE3CjU,EAGX,MAAMsmB,GACc,MAAZA,IACAA,EAAW,GAGf,MAAM3Q,EAAQlR,KAAK8R,WAAWtB,MAAM,KAOpC,GANqB,IAAjBU,EAAM7V,QACN6V,EAAMlT,KAAK,MAEX6jB,EAAW,GAAKA,EAAW,IAAOA,EAAW,IAC7C,GAAOvmB,mBAAmB,wBAAyB,WAAYumB,GAE/D3Q,EAAM,GAAG7V,QAAUwmB,EACnB,OAAO7hB,KAEX,MAAMyjB,EAAS,GAAYrb,KAAK,IAAMuZ,GAAMxV,UAAU,EAAG0V,GAAW7hB,KAAKwP,QACnEkU,EAAOC,GAAKJ,SAASvjB,KAAKwP,QAChC,OAAOxP,KAAK4jB,UAAUH,GAAQD,UAAUE,GAAMG,QAAQC,UAAUL,GAEpE,SACI,MAAwB,QAAhBzjB,KAAK4iB,QAAoC,MAAhB5iB,KAAK4iB,OAE1C,aACI,MAA2B,MAAnB5iB,KAAK4iB,OAAO,GAExB,WAAa,OAAO5iB,KAAK4iB,OACzB,YAAYH,GACR,GAAa,MAATA,EACA,OAAOziB,KAAK2iB,KAEZF,EAAQ,GACR,GAAOnnB,mBAAmB,qBAAsB,QAASmnB,GAE7D,MAAM/e,EAAM,OAAU0E,KAAKpI,KAAK2iB,MAAM9V,SAAS7M,KAAKwP,OAAOiT,OAAO7V,OAAO6V,GAAO/Y,cAChF,OAAO,eAAWhG,EAAK+e,EAAQ,GAEnC,gBAAkB,OAAOsB,WAAW/jB,KAAK8R,YACzC,SAAStC,GACL,OAAO,GAAYK,WAAW7P,KAAK4iB,OAAQpT,GAE/C,iBAAiBtT,EAAO2lB,EAAUrS,GAY9B,OAVc,MAAVA,GAA8B,MAAZqS,GAAqB,eAAeA,KACtDrS,EAASqS,EACTA,EAAW,MAEC,MAAZA,IACAA,EAAW,GAED,MAAVrS,IACAA,EAAS,SAEN,GAAYK,WAAWiS,GAAY5lB,EAAO2lB,GAAW,GAAYzZ,KAAKoH,IAEjF,kBAAkBtT,EAAOsT,GACP,MAAVA,IACAA,EAAS,SAEb,MAAMwU,EAAc,GAAY5b,KAAKoH,GAC/ByU,EAAU5B,GAAWnmB,EAAO8nB,EAAYnC,WACzCmC,EAAY5X,QAAU6X,EAAQxX,GAAG6U,KAClCE,GAAW,oCAAqC,WAAY,QAAStlB,GAEzE,IAAIwH,EAAM,KACNsgB,EAAY5X,OACZ1I,EAAMugB,EAAQrX,OAAOoX,EAAYvB,OAAO/Y,eAGxChG,EAAMugB,EAAQva,cACdhG,EAAM,eAAWA,EAAKsgB,EAAYvB,MAAQ,IAE9C,MAAMyB,EAAUpC,GAAYmC,EAASD,EAAYnC,UACjD,OAAO,IAAI,GAAY,GAAmBne,EAAKwgB,EAASF,GAE5D,iBAAiB9nB,EAAOsT,GACN,MAAVA,IACAA,EAAS,SAEb,MAAMwU,EAAc,GAAY5b,KAAKoH,GACrC,GAAI,eAAStT,GAAOb,OAAS2oB,EAAYvB,MAAQ,EAC7C,MAAM,IAAI1nB,MAAM,YAEpB,IAAIkpB,EAAU,OAAU7b,KAAKlM,GACzB8nB,EAAY5X,SACZ6X,EAAUA,EAAQpX,SAASmX,EAAYvB,QAE3C,MAAM/e,EAAMugB,EAAQrX,QAAQoX,EAAY5X,OAAS,EAAI,GAAK4X,EAAYvB,OAAO/Y,cACvEwa,EAAUpC,GAAYmC,EAASD,EAAYnC,UACjD,OAAO,IAAI,GAAY,GAAmBne,EAAKwgB,EAASF,GAE5D,YAAY9nB,EAAOsT,GACf,GAAuB,kBAAZ,EACP,OAAO,GAAYK,WAAW3T,EAAOsT,GAEzC,GAAI,eAAQtT,GACR,OAAO,GAAYgC,UAAUhC,EAAOsT,GAExC,IACI,OAAO,GAAYyT,UAAU/mB,EAAO,EAAGsT,GAE3C,MAAOxU,GAEH,GAAIA,EAAMsQ,OAAS,OAAOzP,OAAOyO,iBAC7B,MAAMtP,EAGd,OAAO,GAAOM,mBAAmB,4BAA6B,QAASY,GAE3E,qBAAqBA,GACjB,SAAUA,IAASA,EAAM2mB,iBAGjC,MAAMS,GAAM,GAAYlb,KAAK,GACvBub,GAAO,GAAYvb,KAAK,OCrWjB+b,GAAgB,8BACtB,SAASC,GAAYxc,GAIxB,MAHyB,kBAAd,IACPA,EAAU,eAAYA,IAEnB,eAAU,eAAO,CACpB,eAAYuc,IACZ,eAAY/lB,OAAOwJ,EAAQvM,SAC3BuM,KCXD,MAAM,GAAU,aCAvB,IAAI,GAAwC,SAAUkP,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMhb,GAAS,OAAOA,aAAiB8a,EAAI9a,EAAQ,IAAI8a,GAAE,SAAUG,GAAWA,EAAQjb,MAC/F,OAAO,IAAK8a,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAUpb,GAAS,IAAMqb,EAAKN,EAAUO,KAAKtb,IAAW,MAAOub,GAAKJ,EAAOI,IACpF,SAASC,EAASxb,GAAS,IAAMqb,EAAKN,EAAU,SAAS/a,IAAW,MAAOub,GAAKJ,EAAOI,IACvF,SAASF,EAAKhc,GAAUA,EAAOoc,KAAOR,EAAQ5b,EAAOW,OAASgb,EAAM3b,EAAOW,OAAO0b,KAAKN,EAAWI,GAClGH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,YAUtE,MAAM,GAAS,IAAI,OAAO,IAEpB5T,GAAU,IAAIpI,WAAW,IAC/BoI,GAAQygB,KAAK,GACb,MAAM,GAAc,OAAUjc,MAAM,GAC9B,GAAO,OAAUA,KAAK,GACtBkc,GAAM,OAAUlc,KAAK,GACrBmc,GAAa,OAAUnc,KAAK,sEAClC,SAASoc,GAAYtoB,GACjB,MAAMiC,EAAQ,eAASjC,GACjBuoB,EAAYtmB,EAAM9C,OAAS,GACjC,OAAIopB,EACO,eAAU,CAACtmB,EAAOyF,GAAQ/G,MAAM4nB,KAEpC,eAAQtmB,GAEnB,MAAMumB,GAAU,eAAWJ,GAAI5a,cAAe,IACxCib,GAAW,eAAW,GAAKjb,cAAe,IAC1Ckb,GAAmB,CACrBhoB,KAAM,SACNioB,QAAS,SACT9K,QAAS,UACT+K,kBAAmB,UACnBC,KAAM,WAEJC,GAAmB,CACrB,OAAQ,UAAW,UAAW,oBAAqB,QAEvD,SAASC,GAAYllB,GACjB,OAAO,SAAU7D,GAIb,MAHuB,kBAAZ,GACP,GAAOZ,mBAAmB,4BAA4BoU,KAAKE,UAAU7P,GAAQ,UAAUA,EAAO7D,GAE3FA,GAGf,MAAMgpB,GAAe,CACjBtoB,KAAMqoB,GAAY,QAClBJ,QAASI,GAAY,WACrBlL,QAAS,SAAU7d,GACf,IACI,OAAO,OAAUkM,KAAKlM,GAAO4V,WAEjC,MAAO9W,IACP,OAAO,GAAOM,mBAAmB,qCAAsC,iBAAkBY,IAE7F4oB,kBAAmB,SAAU5oB,GACzB,IACI,OAAO,eAAWA,GAAOoY,cAE7B,MAAOtZ,IACP,OAAO,GAAOM,mBAAmB,2CAA4C,2BAA4BY,IAE7G6oB,KAAM,SAAU7oB,GACZ,IACI,MAAMiC,EAAQ,eAASjC,GACvB,GAAqB,KAAjBiC,EAAM9C,OACN,MAAM,IAAIN,MAAM,cAEpB,OAAO,eAAQoD,GAEnB,MAAOnD,IACP,OAAO,GAAOM,mBAAmB,8BAA+B,cAAeY,KAGvF,SAASipB,GAAe1d,GAEpB,CACI,MAAMkB,EAAQlB,EAAKkB,MAAM,kBACzB,GAAIA,EAAO,CACP,MAAMyD,EAAuB,KAAbzD,EAAM,GAChB8Z,EAAQtmB,SAASwM,EAAM,IAAM,QAC/B8Z,EAAQ,IAAM,GAAKA,EAAQ,KAAQ9Z,EAAM,IAAMA,EAAM,KAAOvK,OAAOqkB,KACnE,GAAOnnB,mBAAmB,wBAAyB,OAAQmM,GAE/D,MAAM2d,EAAcb,GAAWjY,KAAKF,EAAUqW,EAAQ,EAAKA,GACrD4C,EAAcjZ,EAASgZ,EAAY1Y,IAAI4X,IAAK3X,IAAI,IAAe,GACrE,OAAO,SAAUzQ,GACb,MAAMuC,EAAI,OAAU2J,KAAKlM,GAIzB,OAHIuC,EAAEgO,GAAG4Y,IAAgB5mB,EAAE+N,GAAG4Y,KAC1B,GAAO9pB,mBAAmB,2BAA2BmM,EAAQ,QAASvL,GAEnE,eAAWuC,EAAEmO,OAAO,KAAKlD,cAAe,MAK3D,CACI,MAAMf,EAAQlB,EAAKkB,MAAM,gBACzB,GAAIA,EAAO,CACP,MAAM8Z,EAAQtmB,SAASwM,EAAM,IAI7B,OAHc,IAAV8Z,GAAeA,EAAQ,IAAM9Z,EAAM,KAAOvK,OAAOqkB,KACjD,GAAOnnB,mBAAmB,sBAAuB,OAAQmM,GAEtD,SAAUvL,GACb,MAAMiC,EAAQ,eAASjC,GAIvB,OAHIiC,EAAM9C,SAAWonB,GACjB,GAAOnnB,mBAAmB,sBAAsBmM,EAAQ,QAASvL,GAE9DsoB,GAAYtoB,KAI/B,OAAQuL,GACJ,IAAK,UAAW,OAAO,SAAUvL,GAC7B,OAAO,eAAW,eAAWA,GAAQ,KAEzC,IAAK,OAAQ,OAAO,SAAUA,GAC1B,OAAUA,EAAoBwoB,GAAXC,IAEvB,IAAK,QAAS,OAAO,SAAUzoB,GAC3B,OAAO,eAAUA,IAErB,IAAK,SAAU,OAAO,SAAUA,GAC5B,OAAO,eAAGA,IAGlB,OAAO,KAEX,SAASopB,GAAW1oB,EAAM2oB,GACtB,MAAO,GAAG3oB,KAAQ2oB,EAAOlb,IAAI,EAAGzN,OAAM6K,UAAYA,EAAO,IAAM7K,GAAO0B,KAAK,QAExE,MAAM,GACT,YAAYwO,GACR,eAAe9M,KAAM,QAASC,OAAO2L,OAAO,eAASkB,KACrD,eAAe9M,KAAM,gBAAiB,IACtC,eAAeA,KAAM,SAAU,IAE/B,MAAMwlB,EAAQ,GAERC,EAAU,GAEVC,EAAW,GACjBzlB,OAAOkU,KAAKrH,GAAOnC,QAASlD,IACxB+d,EAAM/d,GAAQ,GACdge,EAAQhe,GAAQ,GAChBie,EAASje,GAAQ,KAErB,IAAK,MAAM7K,KAAQkQ,EAAO,CACtB,MAAMtB,EAAc,GACpBsB,EAAMlQ,GAAM+N,QAASgb,IAEbna,EAAYma,EAAM/oB,OAClB,GAAOtB,mBAAmB,2BAA2BoU,KAAKE,UAAU+V,EAAM/oB,YAAY8S,KAAKE,UAAUhT,KAAS,QAASkQ,GAE3HtB,EAAYma,EAAM/oB,OAAQ,EAE1B,MAAM2O,EAAWoa,EAAMle,KAAKkB,MAAM,uBAAuB,GACrD4C,IAAa3O,GACb,GAAOtB,mBAAmB,8BAA8BoU,KAAKE,UAAUrE,GAAa,QAASuB,GAGjG,MAAM8Y,EAAUT,GAAe5Z,GAC3Bqa,IAGCH,EAAQla,IACT,GAAOjQ,mBAAmB,gBAAgBoU,KAAKE,UAAUrE,GAAa,QAASuB,GAGnF2Y,EAAQla,GAAUvN,KAAKpB,GACvB4oB,EAAM5oB,GAAM2O,IAAY,KAIhC,MAAMsa,EAAe5lB,OAAOkU,KAAKsR,GAAShS,OAAQqS,GAA6B,IAAtBL,EAAQK,GAAGzqB,QASpE,SAAS0qB,EAActe,EAAMue,GACrBA,EAAMve,IACN,GAAOnM,mBAAmB,8BAA8BoU,KAAKE,UAAUnI,GAAS,QAASqF,GAE7FkZ,EAAMve,IAAQ,EACdxH,OAAOkU,KAAKqR,EAAM/d,IAAOkD,QAAS0D,IACzBoX,EAAQpX,KAIb0X,EAAc1X,EAAO2X,GAErB/lB,OAAOkU,KAAK6R,GAAOrb,QAASsb,IACxBP,EAASO,GAAS5X,IAAS,cAG5B2X,EAAMve,GAxBW,IAAxBoe,EAAaxqB,OACb,GAAOC,mBAAmB,uBAAwB,QAASwR,GAEtD+Y,EAAaxqB,OAAS,GAC3B,GAAOC,mBAAmB,4CAA4CuqB,EAAaxb,IAAKxJ,GAAO6O,KAAKE,UAAU/O,IAAKvC,KAAK,MAAS,QAASwO,GAE9I,eAAe9M,KAAM,cAAe6lB,EAAa,IAoBjDE,EAAc/lB,KAAKkmB,YAAa,IAEhC,IAAK,MAAMtpB,KAAQ8oB,EAAU,CACzB,MAAMS,EAAKlmB,OAAOkU,KAAKuR,EAAS9oB,IAChCupB,EAAGC,OACHpmB,KAAKqmB,OAAOzpB,GAAQ0oB,GAAW1oB,EAAMkQ,EAAMlQ,IAASupB,EAAG9b,IAAKxJ,GAAMykB,GAAWzkB,EAAGiM,EAAMjM,KAAKvC,KAAK,KAGxG,WAAWmJ,GACP,IAAIme,EAAU5lB,KAAKsmB,cAAc7e,GAIjC,OAHKme,IACDA,EAAU5lB,KAAKsmB,cAAc7e,GAAQzH,KAAKumB,YAAY9e,IAEnDme,EAEX,YAAYne,GAER,CACI,MAAMme,EAAUT,GAAe1d,GAC/B,GAAIme,EACA,OAAOA,EAIf,MAAMjd,EAAQlB,EAAKkB,MAAM,yBACzB,GAAIA,EAAO,CACP,MAAMsd,EAAUtd,EAAM,GAChB6d,EAAaxmB,KAAKymB,WAAWR,GAC7B5qB,EAASc,SAASwM,EAAM,IAC9B,OAAQzM,IACAb,GAAU,GAAKa,EAAMb,SAAWA,GAChC,GAAOC,mBAAmB,0DAA2D,QAASY,GAElG,IAAIX,EAASW,EAAMmO,IAAImc,GAIvB,OAHIxmB,KAAKqmB,OAAOJ,KACZ1qB,EAASA,EAAO8O,IAAI,SAEjB,eAAU,eAAU9O,KAInC,MAAMgqB,EAASvlB,KAAK8M,MAAMrF,GAC1B,GAAI8d,EAAQ,CACR,MAAMmB,EAAc,eAAG1mB,KAAKqmB,OAAO5e,IACnC,OAAQvL,IACJ,MAAMgO,EAASqb,EAAOlb,IAAI,EAAGzN,OAAM6K,WAC/B,MAAMlM,EAASyE,KAAKymB,WAAWhf,EAAhBzH,CAAsB9D,EAAMU,IAC3C,OAAIoD,KAAKqmB,OAAO5e,GACL,eAAUlM,GAEdA,IAGX,OADA2O,EAAOyc,QAAQD,GACR,eAAUxc,IAGzB,OAAO,GAAO5O,mBAAmB,iBAAiBmM,EAAQ,OAAQA,GAEtE,WAAW7K,GACP,MAAMrB,EAASyE,KAAKqmB,OAAOzpB,GAI3B,OAHKrB,GACD,GAAOD,mBAAmB,iBAAiBoU,KAAKE,UAAUhT,GAAS,OAAQA,GAExErB,EAEX,WAAWkM,EAAMvL,GACb,OAAO8D,KAAKymB,WAAWhf,EAAhBzH,CAAsB9D,GAEjC,WAAWU,EAAMV,GACb,OAAO,eAAU8D,KAAK4mB,WAAWhqB,EAAMV,IAE3C,OAAOA,GACH,OAAO8D,KAAK4mB,WAAW5mB,KAAKkmB,YAAahqB,GAE7C,KAAKA,GACD,OAAO8D,KAAK6mB,WAAW7mB,KAAKkmB,YAAahqB,GAE7C,OAAOuL,EAAMvL,EAAO4qB,GAEhB,CACI,MAAMlB,EAAUT,GAAe1d,GAC/B,GAAIme,EACA,OAAOkB,EAASrf,EAAMvL,GAI9B,MAAMyM,EAAQlB,EAAKkB,MAAM,yBACzB,GAAIA,EAAO,CACP,MAAMsd,EAAUtd,EAAM,GAChBtN,EAASc,SAASwM,EAAM,IAI9B,OAHItN,GAAU,GAAKa,EAAMb,SAAWA,GAChC,GAAOC,mBAAmB,0DAA2D,QAASY,GAE3FA,EAAMmO,IAAK5L,GAAMuB,KAAK+mB,OAAOd,EAASxnB,EAAGqoB,IAGpD,MAAMvB,EAASvlB,KAAK8M,MAAMrF,GAC1B,OAAI8d,EACOA,EAAO9Z,OAAO,CAACC,GAAS9O,OAAM6K,WACjCiE,EAAM9O,GAAQoD,KAAK+mB,OAAOtf,EAAMvL,EAAMU,GAAOkqB,GACtCpb,GACR,IAEA,GAAOpQ,mBAAmB,iBAAiBmM,EAAQ,OAAQA,GAEtE,MAAMvL,EAAO4qB,GACT,OAAO9mB,KAAK+mB,OAAO/mB,KAAKkmB,YAAahqB,EAAO4qB,GAEhD,YAAYha,GACR,OAAO,IAAI,GAAiBA,GAEhC,sBAAsBA,GAClB,OAAO,GAAiB1E,KAAK0E,GAAOoZ,YAExC,kBAAkBtpB,EAAMkQ,EAAO5Q,GAC3B,OAAO,GAAiBkM,KAAK0E,GAAO+Z,WAAWjqB,EAAMV,GAEzD,kBAAkB2e,GACd,MAAMmM,EAAe,GACrB,IAAK,MAAMpqB,KAAQie,EAAQ,CACvB,MAAMpT,EAAOmd,GAAiBhoB,GACzB6K,GACD,GAAOnM,mBAAmB,kCAAkCoU,KAAKE,UAAUhT,GAAS,SAAUie,GAElGmM,EAAahpB,KAAK,CAAEpB,OAAM6K,SAK9B,OAHAuf,EAAaZ,KAAK,CAACnlB,EAAG+hB,IACXgC,GAAiB1X,QAAQrM,EAAErE,MAAQooB,GAAiB1X,QAAQ0V,EAAEpmB,OAElE,GAAiBiqB,WAAW,eAAgB,CAAEI,aAAcD,GAAgBnM,GAEvF,cAAcA,EAAQ/N,EAAO5Q,GACzB,OAAO,eAAU,CACb,SACA,GAAiBgrB,WAAWrM,GAC5B,GAAiBzS,KAAK0E,GAAOuJ,KAAKna,KAG1C,YAAY2e,EAAQ/N,EAAO5Q,GACvB,OAAO,eAAU,GAAiB4N,OAAO+Q,EAAQ/N,EAAO5Q,IAG5D,oBAAoB2e,EAAQ/N,EAAO5Q,EAAO+d,GACtC,OAAO,GAAUja,UAAM,OAAQ,GAAQ,YAEnC6a,EAAS,eAAYA,GAErB,MAAMsM,EAAW,GAEbtM,EAAOiK,oBAAsB,eAAYjK,EAAOiK,kBAAmB,MACnEqC,EAAStM,EAAOiK,mBAAqB,MAGzC,MAAMc,EAAU,GAAiBxd,KAAK0E,GAEtC8Y,EAAQwB,MAAMlrB,EAAO,CAACuL,EAAMvL,KACX,YAATuL,GAAuB,eAAYvL,EAAO,MAC1CirB,EAASjrB,GAAS,MAEfA,IAGX,IAAK,MAAMU,KAAQuqB,EACfA,EAASvqB,SAAcqd,EAAYrd,GAavC,OAVIie,EAAOiK,mBAAqBqC,EAAStM,EAAOiK,qBAC5CjK,EAAOiK,kBAAoBqC,EAAStM,EAAOiK,oBAG/C5oB,EAAQ0pB,EAAQwB,MAAMlrB,EAAO,CAACuL,EAAMvL,IACnB,YAATuL,GAAsB0f,EAASjrB,GACxBirB,EAASjrB,GAEbA,GAEJ,CAAE2e,SAAQ3e,YAGzB,kBAAkB2e,EAAQ/N,EAAO5Q,GAE7B,GAAiBgrB,WAAWrM,GAE5B,MAAMwM,EAAe,GACfC,EAAc,GACpBtC,GAAiBra,QAAS/N,IACtB,MAAMV,EAAQ2e,EAAOje,GACR,MAATV,IAGJmrB,EAAazqB,GAAQsoB,GAAatoB,GAAMV,GACxCorB,EAAYtpB,KAAK,CAAEpB,OAAM6K,KAAMmd,GAAiBhoB,QAEpD,MAAMgpB,EAAU,GAAiBxd,KAAK0E,GAChCya,EAAkB,eAAYza,GASpC,OARIya,EAAgBN,aAChB,GAAO3rB,mBAAmB,2CAA4C,qBAAsBwR,GAG5Fya,EAAgBN,aAAeK,EAGnC1B,EAAQ9b,OAAO5N,GACR,CACH4Q,MAAOya,EACP1M,OAAQwM,EACRnB,YAAaN,EAAQM,YACrBte,QAASge,EAAQwB,MAAMlrB,EAAO,CAACuL,EAAMvL,KAEjC,GAAIuL,EAAKkB,MAAM,eACX,OAAO,eAAQ,eAASzM,IAG5B,GAAIuL,EAAKkB,MAAM,UACX,OAAO,OAAUP,KAAKlM,GAAO4V,WAEjC,OAAQrK,GACJ,IAAK,UACD,OAAOvL,EAAMoY,cACjB,IAAK,OACD,QAASpY,EACb,IAAK,SAID,MAHuB,kBAAZ,GACP,GAAOZ,mBAAmB,iBAAkB,QAASY,GAElDA,EAEf,OAAO,GAAOZ,mBAAmB,mBAAoB,OAAQmM,OC1YtE,MAAM,GACT,YAAY+f,GACR,eAAexnB,KAAM,WAAYwnB,GACjC,eAAexnB,KAAM,OAAQwnB,EAASnsB,QACtC,eAAe2E,KAAM,eAAgB,IACrC,eAAeA,KAAM,UAAWwnB,EAASC,OAAO,IAEhD,IAAK,IAAInrB,EAAI,EAAGA,EAAIkrB,EAASnsB,OAAQiB,IACjC0D,KAAK0nB,aAAaF,EAASC,OAAOnrB,IAAMA,EAGhD,OAAOJ,GACH,IAAIyrB,EAAS,eAASzrB,GACtB,GAAsB,IAAlByrB,EAAOtsB,OACP,MAAO,GAEX,IAAIusB,EAAS,CAAC,GACd,IAAK,IAAItrB,EAAI,EAAGA,EAAIqrB,EAAOtsB,SAAUiB,EAAG,CACpC,IAAIurB,EAAQF,EAAOrrB,GACnB,IAAK,IAAIqF,EAAI,EAAGA,EAAIimB,EAAOvsB,SAAUsG,EACjCkmB,GAASD,EAAOjmB,IAAM,EACtBimB,EAAOjmB,GAAKkmB,EAAQ7nB,KAAK8nB,KACzBD,EAASA,EAAQ7nB,KAAK8nB,KAAQ,EAElC,MAAOD,EAAQ,EACXD,EAAO5pB,KAAK6pB,EAAQ7nB,KAAK8nB,MACzBD,EAASA,EAAQ7nB,KAAK8nB,KAAQ,EAGtC,IAAIC,EAAS,GAEb,IAAK,IAAIC,EAAI,EAAiB,IAAdL,EAAOK,IAAYA,EAAIL,EAAOtsB,OAAS,IAAK2sB,EACxDD,GAAU/nB,KAAKioB,QAGnB,IAAK,IAAIC,EAAIN,EAAOvsB,OAAS,EAAG6sB,GAAK,IAAKA,EACtCH,GAAU/nB,KAAKwnB,SAASI,EAAOM,IAEnC,OAAOH,EAEX,OAAO7rB,GACH,GAAuB,kBAAZ,EACP,MAAM,IAAIisB,UAAU,mBAExB,IAAIhqB,EAAQ,GACZ,GAAqB,IAAjBjC,EAAMb,OACN,OAAO,IAAIG,WAAW2C,GAE1BA,EAAMH,KAAK,GACX,IAAK,IAAI1B,EAAI,EAAGA,EAAIJ,EAAMb,OAAQiB,IAAK,CACnC,IAAI8rB,EAAOpoB,KAAK0nB,aAAaxrB,EAAMI,IACnC,QAAasN,IAATwe,EACA,MAAM,IAAIrtB,MAAM,WAAaiF,KAAK8nB,KAAO,cAE7C,IAAID,EAAQO,EACZ,IAAK,IAAIzmB,EAAI,EAAGA,EAAIxD,EAAM9C,SAAUsG,EAChCkmB,GAAS1pB,EAAMwD,GAAK3B,KAAK8nB,KACzB3pB,EAAMwD,GAAa,IAARkmB,EACXA,IAAU,EAEd,MAAOA,EAAQ,EACX1pB,EAAMH,KAAa,IAAR6pB,GACXA,IAAU,EAIlB,IAAK,IAAIG,EAAI,EAAG9rB,EAAM8rB,KAAOhoB,KAAKioB,SAAWD,EAAI9rB,EAAMb,OAAS,IAAK2sB,EACjE7pB,EAAMH,KAAK,GAEf,OAAO,eAAS,IAAIxC,WAAW2C,EAAMkqB,aAG9B,IAAI,GAAM,oCAAzB,MACMC,GAAS,IAAI,GAAM,8D,IClHdC,G,yBACX,SAAWA,GACPA,EAAmB,UAAY,SAC/BA,EAAmB,UAAY,UAFnC,CAGGA,KAAuBA,GAAqB,KCJxC,MAAM,GAAU,aCOjB,GAAS,IAAI,OAAO,IACnB,SAASC,GAAUzlB,GACtB,MAAO,KAAQ,KAAKylB,YAAYC,OAAO,eAAS1lB,IAAO2lB,OAAO,OAE3D,SAASC,GAAO5lB,GACnB,MAAO,KAAQ,KAAK4lB,SAASF,OAAO,eAAS1lB,IAAO2lB,OAAO,OAExD,SAASE,GAAO7lB,GACnB,MAAO,KAAQ,KAAK6lB,SAASH,OAAO,eAAS1lB,IAAO2lB,OAAO,OAExD,SAASG,GAAYC,EAAW/oB,EAAKgD,GAOxC,OANKwlB,GAAmBO,IACpB,GAAOltB,WAAW,yBAA2BktB,EAAW,OAAOjtB,OAAOC,sBAAuB,CACzFC,UAAW,OACX+sB,UAAWA,IAGZ,KAAO,KAAKC,KAAK,KAAKD,GAAY,eAAS/oB,IAAM0oB,OAAO,eAAS1lB,IAAO2lB,OAAO,OCrBnF,SAASM,GAAOC,EAAUlE,EAAMmE,EAAYC,EAAQC,GAGvD,IAAIC,EAFJJ,EAAW,eAASA,GACpBlE,EAAO,eAASA,GAEhB,IAAI7I,EAAI,EACR,MAAMoN,EAAK,IAAI9tB,WAAW2tB,GACpBI,EAAS,IAAI/tB,WAAWupB,EAAK1pB,OAAS,GAG5C,IAAIyF,EACA0oB,EAHJD,EAAO9rB,IAAIsnB,GAIX,IAAK,IAAIzoB,EAAI,EAAGA,GAAK4f,EAAG5f,IAAK,CAEzBitB,EAAOxE,EAAK1pB,QAAWiB,GAAK,GAAM,IAClCitB,EAAOxE,EAAK1pB,OAAS,GAAMiB,GAAK,GAAM,IACtCitB,EAAOxE,EAAK1pB,OAAS,GAAMiB,GAAK,EAAK,IACrCitB,EAAOxE,EAAK1pB,OAAS,GAAS,IAAJiB,EAE1B,IAAImtB,EAAI,eAASZ,GAAYO,EAAeH,EAAUM,IACjDF,IACDA,EAAOI,EAAEpuB,OACTmuB,EAAI,IAAIhuB,WAAW6tB,GACnBnN,EAAIjT,KAAKC,KAAKigB,EAASE,GACvBvoB,EAAIqoB,GAAUjN,EAAI,GAAKmN,GAG3BG,EAAE/rB,IAAIgsB,GACN,IAAK,IAAI9nB,EAAI,EAAGA,EAAIunB,EAAYvnB,IAAK,CAEjC8nB,EAAI,eAASZ,GAAYO,EAAeH,EAAUQ,IAClD,IAAK,IAAIzB,EAAI,EAAGA,EAAIqB,EAAMrB,IACtBwB,EAAExB,IAAMyB,EAAEzB,GAElB,MAAM0B,GAAWptB,EAAI,GAAK+sB,EACpBM,EAAOrtB,IAAM4f,EAAIpb,EAAIuoB,EAE3BC,EAAG7rB,IAAI,eAAS+rB,GAAG3sB,MAAM,EAAG8sB,GAAMD,GAEtC,OAAO,eAAQJ,G,iBCzCZ,MAAM,GAAU,kBCEjBM,IAAiB,EAKV,GAAS,IAAI,OAAO,IAC1B,MAAM,GACT,YAAYC,GACR,GAAO9R,yBAA0B,IACjC,eAAe/X,KAAM,SAAU6pB,GAGnC,MAAMC,GACF,OAAOA,EAASxV,cAAc9D,MAAM,OAGxC,KAAKuZ,GACD,OAAOA,EAAMzrB,KAAK,KAEtB,aAAa0rB,GACT,MAAMD,EAAQ,GACd,IAAK,IAAIztB,EAAI,EAAGA,EAAI,KAAMA,IAAK,CAC3B,MAAM2tB,EAAOD,EAASE,QAAQ5tB,GAE9B,GAAIA,IAAM0tB,EAASG,aAAaF,GAC5B,MAAO,KAEXF,EAAM/rB,KAAKisB,GAEf,OAAO,eAAGF,EAAMzrB,KAAK,MAAQ,MAEjC,gBAAgB8rB,EAAMxtB,GAKlB,GAJKA,IACDA,EAAOwtB,EAAKP,QAGZD,GACA,IACI,MAAM/uB,EAAYC,OACdD,EAAUwvB,SAAWxvB,EAAUwvB,QAAQC,YAClCzvB,EAAUwvB,QAAQC,UAAU1tB,IAC7B,eAAe/B,EAAUwvB,QAAQC,UAAW1tB,EAAMwtB,IAI9D,MAAOpvB,MC7CnB,MAAM,GAAQ,+zVACd,IAAI,GAAW,KACf,SAASuvB,GAAUH,GACf,GAAgB,MAAZ,KAGJ,GAAW,GAAMnc,QAAQ,WAAY,OAAOqG,cAAcnI,UAAU,GAAGqE,MAAM,KAGhD,uEAAzB,GAASiL,MAAM2O,IAEf,MADA,GAAW,KACL,IAAIrvB,MAAM,0CAGxB,MAAM,WAAe,GACjB,cACIsO,MAAM,MAEV,QAAQ9I,GAEJ,OADAgqB,GAAUvqB,MACH,GAASO,GAEpB,aAAa0pB,GAET,OADAM,GAAUvqB,MACH,GAASsN,QAAQ2c,IAGhC,MAAMO,GAAS,IAAI,GACnB,GAASC,SAASD,IC5BX,MAAMF,GAAY,CACrBI,GAAI,ICHK,GAAU,eCajB,GAAS,IAAI,OAAO,IACpB,GAAI,OAAUtiB,KAAK,sEAEnBuiB,GAAe,eAAY,gBAC3BC,GAAc,WAEpB,SAASC,GAAaC,GAClB,OAAS,GAAKA,GAAQ,GAAO,EAAIA,EAGrC,SAASC,GAAaD,GAClB,OAAQ,GAAKA,GAAQ,EAEzB,SAASE,GAAQ9uB,GACb,OAAO,eAAW,eAAQA,GAAQ,IAEtC,SAAS+uB,GAAYloB,GACjB,OAAOulB,GAAOxe,OAAO,eAAO,CAAC/G,EAAM,eAAa4lB,GAAOA,GAAO5lB,IAAQ,EAAG,MAE7E,SAASmoB,GAAYlB,GACjB,GAAgB,MAAZA,EACA,OAAOM,GAAU,MAErB,GAA0B,kBAAf,EAAyB,CAChC,MAAMP,EAAQO,GAAUN,GAIxB,OAHa,MAATD,GACA,GAAOzuB,mBAAmB,iBAAkB,WAAY0uB,GAErDD,EAEX,OAAOC,EAEX,MAAM,GAAoB,GACbmB,GAAc,mBAEpB,MAAM,GAQT,YAAYhc,EAAkBic,EAAYC,EAAWC,EAAmBC,EAAWhrB,EAAO+R,EAAOkZ,GAG7F,GAFA,GAAO/Y,oBAAqB,IAExBtD,IAAqB,GACrB,MAAM,IAAIpU,MAAM,gDAEpB,GAAIqwB,EAAY,CACZ,MAAMK,EAAa,IAAI,QAAWL,GAClC,eAAeprB,KAAM,aAAcyrB,EAAWL,YAC9C,eAAeprB,KAAM,YAAayrB,EAAWC,0BAG7C,eAAe1rB,KAAM,aAAc,MACnC,eAAeA,KAAM,YAAa,eAAQqrB,IAE9C,eAAerrB,KAAM,oBAAqBsrB,GAC1C,eAAetrB,KAAM,cAAe,eAAawoB,GAAUG,GAAO3oB,KAAKqrB,YAAa,EAAG,IACvF,eAAerrB,KAAM,UAAW,6BAAeA,KAAKqrB,YACpD,eAAerrB,KAAM,YAAaurB,GAClC,eAAevrB,KAAM,QAASO,GAC9B,eAAeP,KAAM,QAASsS,GACR,MAAlBkZ,GAEA,eAAexrB,KAAM,WAAY,MACjC,eAAeA,KAAM,OAAQ,OAEI,kBAArB,GAEZ,eAAeA,KAAM,WAAY,MACjC,eAAeA,KAAM,OAAQwrB,KAI7B,eAAexrB,KAAM,WAAYwrB,GACjC,eAAexrB,KAAM,OAAQwrB,EAAenkB,OAGpD,kBAMI,GAAIrH,KAAKsS,OAAS,IACd,MAAM,IAAIvX,MAAM,oBAEpB,OAAOkwB,GAAY,eAAO,CACD,MAAnBjrB,KAAKorB,WAAsB,aAAe,aAC5C,eAAQprB,KAAKsS,OACbtS,KAAKsrB,kBACL,eAAW,eAAQtrB,KAAKO,OAAQ,GAChCP,KAAKurB,UACgB,MAAnBvrB,KAAKorB,WAAsB,eAAO,CAAC,OAAQprB,KAAKorB,aAAeprB,KAAKqrB,aAG9E,SACI,OAAO,IAAI,GAAO,GAAmB,KAAMrrB,KAAKqrB,UAAWrrB,KAAKsrB,kBAAmBtrB,KAAKurB,UAAWvrB,KAAKO,MAAOP,KAAKsS,MAAOtS,KAAKqH,MAEpI,QAAQ9G,GACJ,GAAIA,EAAQ,WACR,MAAM,IAAIxF,MAAM,mBAAqBqD,OAAOmC,IAGhD,IAAI8G,EAAOrH,KAAKqH,KACZA,IACAA,GAAQ,KAAO9G,GAASqqB,KAE5B,MAAM7nB,EAAO,IAAIvH,WAAW,IAC5B,GAAI+E,EAAQqqB,GAAa,CACrB,IAAK5qB,KAAKorB,WACN,MAAM,IAAIrwB,MAAM,wCAGpBgI,EAAKtF,IAAI,eAASuC,KAAKorB,YAAa,GAEhC/jB,IACAA,GAAQ,UAKZtE,EAAKtF,IAAI,eAASuC,KAAKqrB,YAG3B,IAAK,IAAI/uB,EAAI,GAAIA,GAAK,EAAGA,GAAK,EAC1ByG,EAAK,IAAMzG,GAAK,IAAQiE,GAAU,GAAKjE,EAAM,IAEjD,MAAMqvB,EAAI,eAAS9C,GAAYN,GAAmBK,OAAQ5oB,KAAKurB,UAAWxoB,IACpE6oB,EAAKD,EAAE9uB,MAAM,EAAG,IAChBgvB,EAAKF,EAAE9uB,MAAM,IAEnB,IAAIivB,EAAK,KAELC,EAAK,KACT,GAAI/rB,KAAKorB,WACLU,EAAKd,GAAQ,OAAU5iB,KAAKwjB,GAAIlf,IAAI1M,KAAKorB,YAAYlJ,IAAI,SAExD,CACD,MAAM8J,EAAK,IAAI,QAAW,eAAQJ,IAClCG,EAAKC,EAAGC,UAAUjsB,KAAKqrB,WAE3B,IAAIG,EAAiBnkB,EACrB,MAAM6kB,EAAclsB,KAAK8pB,SAQzB,OAPIoC,IACAV,EAAiBvrB,OAAO2L,OAAO,CAC3BugB,OAAQD,EAAYC,OACpB9kB,KAAMA,EACNwiB,OAASqC,EAAYrC,QAAU,QAGhC,IAAI,GAAO,GAAmBiC,EAAIC,EAAI/rB,KAAKosB,YAAapB,GAAQa,GAAKtrB,EAAOP,KAAKsS,MAAQ,EAAGkZ,GAEvG,WAAWnkB,GACP,MAAM+G,EAAa/G,EAAKmJ,MAAM,KAC9B,GAA0B,IAAtBpC,EAAW/S,QAAmC,MAAlB+S,EAAW,IAA6B,IAAfpO,KAAKsS,MAC1D,MAAM,IAAIvX,MAAM,kBAAoBsM,GAElB,MAAlB+G,EAAW,IACXA,EAAWie,QAEf,IAAI9wB,EAASyE,KACb,IAAK,IAAI1D,EAAI,EAAGA,EAAI8R,EAAW/S,OAAQiB,IAAK,CACxC,MAAMqW,EAAYvE,EAAW9R,GAC7B,GAAIqW,EAAUhK,MAAM,aAAc,CAC9B,MAAMpI,EAAQpE,SAASwW,EAAUxG,UAAU,EAAGwG,EAAUtX,OAAS,IACjE,GAAIkF,GAASqqB,GACT,MAAM,IAAI7vB,MAAM,wBAA0B4X,GAE9CpX,EAASA,EAAO+wB,QAAQ1B,GAAcrqB,OAErC,KAAIoS,EAAUhK,MAAM,YAQrB,MAAM,IAAI5N,MAAM,4BAA8B4X,GARZ,CAClC,MAAMpS,EAAQpE,SAASwW,GACvB,GAAIpS,GAASqqB,GACT,MAAM,IAAI7vB,MAAM,wBAA0B4X,GAE9CpX,EAASA,EAAO+wB,QAAQ/rB,KAMhC,OAAOhF,EAEX,iBAAiBgxB,EAAMzC,GACnB,MAAM0C,EAAY,eAASD,GAC3B,GAAIC,EAAUnxB,OAAS,IAAMmxB,EAAUnxB,OAAS,GAC5C,MAAM,IAAIN,MAAM,gBAEpB,MAAM4wB,EAAI,eAAS9C,GAAYN,GAAmBK,OAAQ+B,GAAc6B,IACxE,OAAO,IAAI,GAAO,GAAmBxB,GAAQW,EAAE9uB,MAAM,EAAG,KAAM,KAAM,aAAcmuB,GAAQW,EAAE9uB,MAAM,KAAM,EAAG,EAAGitB,GAElH,oBAAoBA,EAAUb,EAAUe,GAKpC,OAHAA,EAAWkB,GAAYlB,GAEvBF,EAAW2C,GAAkBC,GAAkB5C,EAAUE,GAAWA,GAC7D,GAAO2C,UAAUC,GAAe9C,EAAUb,GAAW,CACxDkD,OAAQrC,EACRziB,KAAM,IACNwiB,OAAQG,EAASH,SAGzB,gBAAgB0C,GACZ,OAAO,GAAOI,UAAUJ,EAAM,MAElC,uBAAuBM,GACnB,MAAM1uB,EAAQmqB,GAAOve,OAAO8iB,GACP,KAAjB1uB,EAAM9C,QAAiB4vB,GAAY9sB,EAAMtB,MAAM,EAAG,OAASgwB,GAC3D,GAAOvxB,mBAAmB,uBAAwB,cAAe,cAErE,MAAMgX,EAAQnU,EAAM,GACdmtB,EAAoB,eAAQntB,EAAMtB,MAAM,EAAG,IAC3C0D,EAAQpE,SAAS,eAAQgC,EAAMtB,MAAM,EAAG,KAAKsP,UAAU,GAAI,IAC3Dof,EAAY,eAAQptB,EAAMtB,MAAM,GAAI,KACpCkD,EAAM5B,EAAMtB,MAAM,GAAI,IAC5B,OAAQ,eAAQsB,EAAMtB,MAAM,EAAG,KAE3B,IAAK,aACL,IAAK,aACD,OAAO,IAAI,GAAO,GAAmB,KAAM,eAAQkD,GAAMurB,EAAmBC,EAAWhrB,EAAO+R,EAAO,MAEzG,IAAK,aACL,IAAK,cACD,GAAe,IAAXvS,EAAI,GACJ,MAEJ,OAAO,IAAI,GAAO,GAAmB,eAAQA,EAAIlD,MAAM,IAAK,KAAMyuB,EAAmBC,EAAWhrB,EAAO+R,EAAO,MAEtH,OAAO,GAAOhX,mBAAmB,uBAAwB,cAAe,eAGzE,SAASsxB,GAAe9C,EAAUb,GAChCA,IACDA,EAAW,IAEf,MAAMlE,EAAO,eAAY,WAAakE,EAAU,OAAyB6D,MACzE,OAAO9D,GAAO,eAAYc,EAAU,OAAyBgD,MAAO/H,EAAM,KAAM,GAAI,UAEjF,SAAS2H,GAAkB5C,EAAUE,GACxCA,EAAWkB,GAAYlB,GACvB,GAAO+C,iBACP,MAAMhD,EAAQC,EAASxZ,MAAMsZ,GAC7B,GAAKC,EAAM1uB,OAAS,IAAO,EACvB,MAAM,IAAIN,MAAM,oBAEpB,MAAMiyB,EAAU,eAAS,IAAIxxB,WAAWyN,KAAKC,KAAK,GAAK6gB,EAAM1uB,OAAS,KACtE,IAAIiN,EAAS,EACb,IAAK,IAAIhM,EAAI,EAAGA,EAAIytB,EAAM1uB,OAAQiB,IAAK,CACnC,IAAIiE,EAAQypB,EAASG,aAAaJ,EAAMztB,GAAG2wB,UAAU,SACrD,IAAe,IAAX1sB,EACA,MAAM,IAAIxF,MAAM,oBAEpB,IAAK,IAAImyB,EAAM,EAAGA,EAAM,GAAIA,IACpB3sB,EAAS,GAAM,GAAK2sB,IACpBF,EAAQ1kB,GAAU,IAAO,GAAM,EAAKA,EAAS,GAEjDA,IAGR,MAAM6kB,EAAc,GAAKpD,EAAM1uB,OAAS,EAClC+xB,EAAerD,EAAM1uB,OAAS,EAC9BgyB,EAAexC,GAAauC,GAC5BE,EAAW,eAAS3E,GAAOqE,EAAQnwB,MAAM,EAAGswB,EAAc,KAAK,GAAKE,EAC1E,GAAIC,KAAcN,EAAQA,EAAQ3xB,OAAS,GAAKgyB,GAC5C,MAAM,IAAItyB,MAAM,oBAEpB,OAAO,eAAQiyB,EAAQnwB,MAAM,EAAGswB,EAAc,IAE3C,SAASV,GAAkBO,EAAShD,GAGvC,GAFAA,EAAWkB,GAAYlB,GACvBgD,EAAU,eAASA,GACdA,EAAQ3xB,OAAS,IAAO,GAAK2xB,EAAQ3xB,OAAS,IAAM2xB,EAAQ3xB,OAAS,GACtE,MAAM,IAAIN,MAAM,mBAEpB,MAAMwyB,EAAU,CAAC,GACjB,IAAIC,EAAgB,GACpB,IAAK,IAAIlxB,EAAI,EAAGA,EAAI0wB,EAAQ3xB,OAAQiB,IAE5BkxB,EAAgB,GAChBD,EAAQA,EAAQlyB,OAAS,KAAO,EAChCkyB,EAAQA,EAAQlyB,OAAS,IAAM2xB,EAAQ1wB,GACvCkxB,GAAiB,IAIjBD,EAAQA,EAAQlyB,OAAS,KAAOmyB,EAChCD,EAAQA,EAAQlyB,OAAS,IAAM2xB,EAAQ1wB,IAAO,EAAIkxB,EAElDD,EAAQvvB,KAAKgvB,EAAQ1wB,GAAKyuB,GAAa,EAAIyC,IAC3CA,GAAiB,GAIzB,MAAMJ,EAAeJ,EAAQ3xB,OAAS,EAChCiyB,EAAW,eAAS3E,GAAOqE,IAAU,GAAKnC,GAAauC,GAI7D,OAFAG,EAAQA,EAAQlyB,OAAS,KAAO+xB,EAChCG,EAAQA,EAAQlyB,OAAS,IAAOiyB,GAAa,EAAIF,EAC1CpD,EAAS1rB,KAAKivB,EAAQljB,IAAK9J,GAAUypB,EAASE,QAAQ3pB,KAE1D,SAASktB,GAAgB3D,EAAUE,GACtC,IAEI,OADA0C,GAAkB5C,EAAUE,IACrB,EAEX,MAAOhvB,IACP,OAAO,EAEJ,SAAS0yB,GAAentB,GAI3B,OAHuB,kBAAZ,GAAwBA,EAAQ,GAAKA,GAASqqB,IAAerqB,EAAQ,IAC5E,GAAOjF,mBAAmB,wBAAyB,QAASiF,GAEzD,aAAaA,S,iECrUjB,SAASotB,GAAcC,GAI1B,MAH2B,kBAAhB,GAA0D,OAA9BA,EAAUzhB,UAAU,EAAG,KAC1DyhB,EAAY,KAAOA,GAEhB,eAASA,GAEb,SAASC,GAAK3xB,EAAOb,GACxBa,EAAQkC,OAAOlC,GACf,MAAOA,EAAMb,OAASA,EAClBa,EAAQ,IAAMA,EAElB,OAAOA,EAEJ,SAAS4xB,GAAY7E,GACxB,MAA0B,kBAAf,EACA,eAAYA,EAAU,OAAyB8E,MAEnD,eAAS9E,GAEb,SAAS+E,GAAW1mB,EAAQD,GAC/B,IAAI4mB,EAAe3mB,EACnB,MAAM4J,EAAQ7J,EAAKiN,cAAc9D,MAAM,KACvC,IAAK,IAAIlU,EAAI,EAAGA,EAAI4U,EAAM7V,OAAQiB,IAAK,CAEnC,IAAI4xB,EAAgB,KACpB,IAAK,MAAMnuB,KAAOkuB,EACd,GAAIluB,EAAIuU,gBAAkBpD,EAAM5U,GAAI,CAChC4xB,EAAgBD,EAAaluB,GAC7B,MAIR,GAAsB,OAAlBmuB,EACA,OAAO,KAGXD,EAAeC,EAEnB,OAAOD,EAGJ,SAASE,GAAO/yB,GACnB,MAAM+C,EAAQ,eAAS/C,GAGvB+C,EAAM,GAAiB,GAAXA,EAAM,GAAa,GAI/BA,EAAM,GAAiB,GAAXA,EAAM,GAAa,IAC/B,MAAMjC,EAAQ,eAAQiC,GACtB,MAAO,CACHjC,EAAMiQ,UAAU,EAAG,IACnBjQ,EAAMiQ,UAAU,GAAI,IACpBjQ,EAAMiQ,UAAU,GAAI,IACpBjQ,EAAMiQ,UAAU,GAAI,IACpBjQ,EAAMiQ,UAAU,GAAI,KACtB7N,KAAK,KC5DJ,MAAM,GAAU,qBCCvB,IAAI,GAAwC,SAAUwY,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMhb,GAAS,OAAOA,aAAiB8a,EAAI9a,EAAQ,IAAI8a,GAAE,SAAUG,GAAWA,EAAQjb,MAC/F,OAAO,IAAK8a,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAUpb,GAAS,IAAMqb,EAAKN,EAAUO,KAAKtb,IAAW,MAAOub,GAAKJ,EAAOI,IACpF,SAASC,EAASxb,GAAS,IAAMqb,EAAKN,EAAU,SAAS/a,IAAW,MAAOub,GAAKJ,EAAOI,IACvF,SAASF,EAAKhc,GAAUA,EAAOoc,KAAOR,EAAQ5b,EAAOW,OAASgb,EAAM3b,EAAOW,OAAO0b,KAAKN,EAAWI,GAClGH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,YAgBtE,MAAM,GAAS,IAAI,OAAO,IAE1B,SAAS4W,GAAYlyB,GACjB,OAAiB,MAATA,GAAiBA,EAAM4tB,UAAY5tB,EAAM4tB,SAASqC,OAEvD,MAAM,WAAwB,OACjC,kBAAkBjwB,GACd,SAAUA,IAASA,EAAMmyB,qBAGjC,SAASC,GAASvrB,EAAMhD,EAAKoB,GACzB,MAAMotB,EAASP,GAAWjrB,EAAM,iBAChC,GAAe,gBAAXwrB,EAA0B,CAC1B,MAAM9sB,EAAKksB,GAAcK,GAAWjrB,EAAM,2BACpCJ,EAAU,IAAI,GAAA1B,EAAImB,QAAQX,GAC1B+sB,EAAS,IAAI,GAAAvtB,EAAIkC,gBAAgBK,IAAIzD,EAAK4C,GAChD,OAAO,eAAS6rB,EAAOttB,QAAQC,IAEnC,OAAO,KAEX,SAASstB,GAAY1rB,EAAMhD,GACvB,MAAMoB,EAAawsB,GAAcK,GAAWjrB,EAAM,sBAC5C2rB,EAAc,eAAQ,eAAU,eAAO,CAAC3uB,EAAIlD,MAAM,GAAI,IAAKsE,MAAegL,UAAU,GAC1F,GAAIuiB,IAAgBV,GAAWjrB,EAAM,cAAcuR,cAC/C,MAAM,IAAIvZ,MAAM,oBAEpB,MAAMqwB,EAAakD,GAASvrB,EAAMhD,EAAIlD,MAAM,EAAG,IAAKsE,GAC/CiqB,GACD,GAAOxvB,WAAW,qBAAsB,OAAOC,OAAOC,sBAAuB,CACzEC,UAAW,YAGnB,MAAM4yB,EAAc5uB,EAAIlD,MAAM,GAAI,IAC5BiX,EAAU,6BAAesX,GAC/B,GAAIroB,EAAK+Q,QAAS,CACd,IAAI2H,EAAQ1Y,EAAK+Q,QAAQQ,cAIzB,GAH8B,OAA1BmH,EAAMtP,UAAU,EAAG,KACnBsP,EAAQ,KAAOA,GAEf,eAAWA,KAAW3H,EACtB,MAAM,IAAI/Y,MAAM,oBAGxB,MAAMuK,EAAU,CACZ+oB,oBAAoB,EACpBva,QAASA,EACTsX,WAAY,eAAQA,IAGxB,GAA6C,QAAzC4C,GAAWjrB,EAAM,oBAA+B,CAChD,MAAM6rB,EAAqBjB,GAAcK,GAAWjrB,EAAM,gCACpD8rB,EAAalB,GAAcK,GAAWjrB,EAAM,6BAC5C+rB,EAAkB,IAAI,GAAA7tB,EAAImB,QAAQysB,GAClCE,EAAiB,IAAI,GAAA9tB,EAAIkC,gBAAgBK,IAAImrB,EAAaG,GAC1DznB,EAAO2mB,GAAWjrB,EAAM,kBAAoBooB,GAC5CtB,EAASmE,GAAWjrB,EAAM,oBAAsB,KAChDiqB,EAAU,eAAS+B,EAAe7tB,QAAQ0tB,IAChD,IACI,MAAM9E,EAAW2C,GAAkBO,EAASnD,GACtChc,EAAO,GAAOmhB,aAAalF,EAAU,KAAMD,GAAQoF,WAAW5nB,GACpE,GAAIwG,EAAKud,YAAc9lB,EAAQ8lB,WAC3B,MAAM,IAAIrwB,MAAM,qBAEpBuK,EAAQwkB,SAAWjc,EAAKic,SAE5B,MAAO9uB,GAIH,GAAIA,EAAMsQ,OAAS,OAAOzP,OAAOyO,kBAAuC,aAAnBtP,EAAMuP,SACvD,MAAMvP,GAIlB,OAAO,IAAI,GAAgBsK,GAE/B,SAAS4pB,GAAWC,EAAepK,EAAMjZ,EAAOsjB,EAAOC,GACnD,OAAO,eAAS,GAAQF,EAAepK,EAAMjZ,EAAOsjB,EAAOC,IAE/D,SAAS,GAAOF,EAAepK,EAAMjZ,EAAOsjB,EAAOC,GAC/C,OAAOjY,QAAQD,QAAQ+X,GAAWC,EAAepK,EAAMjZ,EAAOsjB,EAAOC,IAEzE,SAASC,GAAevsB,EAAMkmB,EAAUsG,EAAYC,EAAYC,GAC5D,MAAMN,EAAgBrB,GAAY7E,GAC5ByG,EAAM1B,GAAWjrB,EAAM,cAC7B,GAAI2sB,GAAwB,kBAAV,EAAoB,CAClC,MAAM9zB,EAAa,SAAUgB,EAAMV,GAC/B,OAAO,GAAOZ,mBAAmB,6CAA8CsB,EAAMV,IAEzF,GAA0B,WAAtBwzB,EAAIpb,cAA4B,CAChC,MAAMyQ,EAAO4I,GAAcK,GAAWjrB,EAAM,0BACtC4sB,EAAIxzB,SAAS6xB,GAAWjrB,EAAM,uBAC9BjC,EAAI3E,SAAS6xB,GAAWjrB,EAAM,uBAC9B6sB,EAAIzzB,SAAS6xB,GAAWjrB,EAAM,uBAE/B4sB,GAAM7uB,GAAM8uB,GACbh0B,EAAW,MAAO8zB,GAGA,KAAjBC,EAAKA,EAAI,IACV/zB,EAAW,IAAK+zB,GAEpB,MAAMP,EAAQjzB,SAAS6xB,GAAWjrB,EAAM,2BAIxC,OAHc,KAAVqsB,GACAxzB,EAAW,QAASwzB,GAEjBI,EAAWL,EAAepK,EAAM4K,EAAG7uB,EAAG8uB,EAAG,GAAIH,GAEnD,GAA0B,WAAtBC,EAAIpb,cAA4B,CACrC,MAAMyQ,EAAO4I,GAAcK,GAAWjrB,EAAM,0BAC5C,IAAIssB,EAAU,KACd,MAAMQ,EAAM7B,GAAWjrB,EAAM,wBACjB,gBAAR8sB,EACAR,EAAU,SAEG,gBAARQ,EACLR,EAAU,SAGVzzB,EAAW,MAAOi0B,GAEtB,MAAM/jB,EAAQ3P,SAAS6xB,GAAWjrB,EAAM,uBAClCqsB,EAAQjzB,SAAS6xB,GAAWjrB,EAAM,2BAIxC,OAHc,KAAVqsB,GACAxzB,EAAW,QAASwzB,GAEjBG,EAAWJ,EAAepK,EAAMjZ,EAAOsjB,EAAOC,IAG7D,OAAO,GAAO/zB,mBAAmB,sCAAuC,MAAOo0B,GAE5E,SAASI,GAAY9gB,EAAMia,GAC9B,MAAMlmB,EAAO2M,KAAKC,MAAMX,GAClBjP,EAAMuvB,GAAevsB,EAAMkmB,EAAUiG,GAAY,KAAOa,YAC9D,OAAOtB,GAAY1rB,EAAMhD,GAEtB,SAASmB,GAAQ8N,EAAMia,EAAUwG,GACpC,OAAO,GAAUzvB,UAAM,OAAQ,GAAQ,YACnC,MAAM+C,EAAO2M,KAAKC,MAAMX,GAClBjP,QAAYuvB,GAAevsB,EAAMkmB,EAAU,GAAQ,KAAO+G,OAAQP,GACxE,OAAOhB,GAAY1rB,EAAMhD,MAG1B,SAASgB,GAAQuE,EAAS2jB,EAAUgH,EAASR,GAChD,IAEI,GAAI,eAAWnqB,EAAQwO,WAAa,6BAAexO,EAAQ8lB,YACvD,MAAM,IAAIrwB,MAAM,+BAGpB,GAAIqzB,GAAY9oB,GAAU,CACtB,MAAMwkB,EAAWxkB,EAAQwkB,SACnBjc,EAAO,GAAOmhB,aAAalF,EAASqC,OAAQ,KAAMrC,EAASD,QAAQoF,WAAWnF,EAASziB,MAAQ8jB,IACrG,GAAItd,EAAKud,YAAc9lB,EAAQ8lB,WAC3B,MAAM,IAAIrwB,MAAM,sBAI5B,MAAO0c,GACH,OAAOL,QAAQC,OAAOI,GAGD,oBAAd,GAA6BgY,IACpCA,EAAmBQ,EACnBA,EAAU,IAETA,IACDA,EAAU,IAEd,MAAM7E,EAAa,eAAS9lB,EAAQ8lB,YAC9B+D,EAAgBrB,GAAY7E,GAClC,IAAI+D,EAAU,KACV3lB,EAAO,KACPwiB,EAAS,KACb,GAAIuE,GAAY9oB,GAAU,CACtB,MAAM4mB,EAAc5mB,EAAQwkB,SAC5BkD,EAAU,eAASN,GAAkBR,EAAYC,OAAQD,EAAYrC,QAAU,OAC/ExiB,EAAO6kB,EAAY7kB,MAAQ8jB,GAC3BtB,EAASqC,EAAYrC,QAAU,KAEnC,IAAIqG,EAASD,EAAQC,OAChBA,IACDA,EAAS,aAGb,IAAInL,EAAO,KAEPA,EADAkL,EAAQlL,KACD,eAASkL,EAAQlL,MAGjB,OAAAoL,GAAA,MAAY,IAIvB,IAAI1uB,EAAK,KACT,GAAIwuB,EAAQxuB,IAER,GADAA,EAAK,eAASwuB,EAAQxuB,IACJ,KAAdA,EAAGpG,OACH,MAAM,IAAIN,MAAM,mBAIpB0G,EAAK,OAAA0uB,GAAA,MAAY,IAGrB,IAAIC,EAAa,KACjB,GAAIH,EAAQI,MAER,GADAD,EAAa,eAASH,EAAQI,MACJ,KAAtBD,EAAW/0B,OACX,MAAM,IAAIN,MAAM,qBAIpBq1B,EAAa,OAAAD,GAAA,MAAY,IAG7B,IAAIR,EAAK,GAAK,GAAK7uB,EAAI,EAAG8uB,EAAI,EAe9B,OAdIK,EAAQD,SACJC,EAAQD,OAAOL,IACfA,EAAIM,EAAQD,OAAOL,GAEnBM,EAAQD,OAAOlvB,IACfA,EAAImvB,EAAQD,OAAOlvB,GAEnBmvB,EAAQD,OAAOJ,IACfA,EAAIK,EAAQD,OAAOJ,IAMpB,KAAOI,OAAOb,EAAepK,EAAM4K,EAAG7uB,EAAG8uB,EAAG,GAAIH,GAAkB7X,KAAM7X,IAC3EA,EAAM,eAASA,GAEf,MAAMuwB,EAAavwB,EAAIlD,MAAM,EAAG,IAC1B0zB,EAAYxwB,EAAIlD,MAAM,GAAI,IAE1B8xB,EAAc5uB,EAAIlD,MAAM,GAAI,IAE5B8F,EAAU,IAAI,GAAA1B,EAAImB,QAAQX,GAC1B+sB,EAAS,IAAI,GAAAvtB,EAAIkC,gBAAgBK,IAAI8sB,EAAY3tB,GACjDxB,EAAa,eAASqtB,EAAOztB,QAAQqqB,IAErCoF,EAAM,eAAU,eAAO,CAACD,EAAWpvB,KAEnC4B,EAAO,CACT+Q,QAASxO,EAAQwO,QAAQ3H,UAAU,GAAGmI,cACtCmc,GAAItC,GAAOiC,GACXvL,QAAS,EACT6L,OAAQ,CACJnC,OAAQ,cACRoC,aAAc,CACVlvB,GAAI,eAAQA,GAAI0K,UAAU,IAE9BhL,WAAY,eAAQA,GAAYgL,UAAU,GAC1CujB,IAAK,SACLkB,UAAW,CACP7L,KAAM,eAAQA,GAAM5Y,UAAU,GAC9B2Z,EAAG6J,EACHkB,MAAO,GACPjB,EAAGA,EACH9uB,EAAGA,GAEP0vB,IAAKA,EAAIrkB,UAAU,KAI3B,GAAI6gB,EAAS,CACT,MAAM6B,EAAa,OAAAsB,GAAA,MAAY,IACzBrB,EAAkB,IAAI,GAAA7tB,EAAImB,QAAQysB,GAClCE,EAAiB,IAAI,GAAA9tB,EAAIkC,gBAAgBK,IAAImrB,EAAaG,GAC1DF,EAAqB,eAASG,EAAehuB,QAAQisB,IACrD8D,EAAM,IAAIC,KACVC,EAAaF,EAAIG,iBAAmB,IACtCpD,GAAKiD,EAAII,cAAgB,EAAG,GAAK,IACjCrD,GAAKiD,EAAIK,aAAc,GAAK,IAC5BtD,GAAKiD,EAAIM,cAAe,GAAK,IAC7BvD,GAAKiD,EAAIO,gBAAiB,GAAK,IAC/BxD,GAAKiD,EAAIQ,gBAAiB,GAAK,MACnCvuB,EAAK,YAAc,CACfmtB,OAAQA,EACRqB,aAAe,QAAUP,EAAY,KAAOjuB,EAAK+Q,QACjDgb,gBAAiB,eAAQD,GAAY1iB,UAAU,GAC/CyiB,mBAAoB,eAAQA,GAAoBziB,UAAU,GAC1D9E,KAAMA,EACNwiB,OAAQA,EACRhF,QAAS,OAGjB,OAAOnV,KAAKE,UAAU7M,KC9S9B,MAAM,GAAS,IAAI,OAAO,IAEnB,MAAM,WAAyB,OAClC,mBAAmB7G,GACf,SAAUA,IAASA,EAAMs1B,sBAI1B,SAAS,GAAQxiB,EAAMia,GAC1B,MAAMlmB,EAAO2M,KAAKC,MAAMX,GACxBia,EAAW6E,GAAY7E,GAEvB,MAAMwI,EAAU,eAAWzD,GAAWjrB,EAAM,YAEtC2uB,EAAU/D,GAAcK,GAAWjrB,EAAM,YAC1C2uB,GAAYA,EAAQr2B,OAAS,KAAQ,GACtC,GAAOC,mBAAmB,kBAAmB,OAAQ0T,GAEzD,MAAMjP,EAAM,eAASipB,GAAOC,EAAUA,EAAU,IAAM,GAAI,WAAWpsB,MAAM,EAAG,IACxE4E,EAAKiwB,EAAQ70B,MAAM,EAAG,IACtB80B,EAAgBD,EAAQ70B,MAAM,IAE9B+0B,EAAS,IAAI,GAAA3wB,EAAIkC,gBAAgBE,IAAItD,EAAK0B,GAC1C8qB,EAAO,GAAAtrB,EAAI2C,QAAQC,MAAME,MAAM,eAAS6tB,EAAO1wB,QAAQywB,KAE7D,IAAIE,EAAU,GACd,IAAK,IAAIv1B,EAAI,EAAGA,EAAIiwB,EAAKlxB,OAAQiB,IAC7Bu1B,GAAWzzB,OAAOC,aAAakuB,EAAKjwB,IAExC,MAAMw1B,EAAe,eAAYD,GAC3BzG,EAAa,eAAU0G,GAC7B,OAAO,IAAI,GAAiB,CACxBN,qBAAqB,EACrB1d,QAAS2d,EACTrG,WAAYA,IC1Cb,SAAS2G,GAAkB/iB,GAC9B,IAAIjM,EAAO,KACX,IACIA,EAAO2M,KAAKC,MAAMX,GAEtB,MAAOhU,GACH,OAAO,EAEX,OAAQ+H,EAAK2uB,SAAW3uB,EAAK0uB,QAE1B,SAASO,GAAiBhjB,GAC7B,IAAIjM,EAAO,KACX,IACIA,EAAO2M,KAAKC,MAAMX,GAEtB,MAAOhU,GACH,OAAO,EAEX,SAAK+H,EAAK8hB,SAAW1oB,SAAS4G,EAAK8hB,WAAa9hB,EAAK8hB,SAAsC,IAA3B1oB,SAAS4G,EAAK8hB,UAS3E,SAASoN,GAAqBjjB,GACjC,GAAI+iB,GAAkB/iB,GAClB,IACI,OAAO,eAAWU,KAAKC,MAAMX,GAAMyiB,SAEvC,MAAOz2B,GACH,OAAO,KAGf,GAAIg3B,GAAiBhjB,GACjB,IACI,OAAO,eAAWU,KAAKC,MAAMX,GAAM8E,SAEvC,MAAO9Y,GACH,OAAO,KAGf,OAAO,KC1CX,SAASk3B,GAAkBljB,EAAMia,EAAUwG,GACvC,GAAIsC,GAAkB/iB,GAAO,CACrBygB,GACAA,EAAiB,GAErB,MAAMnqB,EAAU,GAAiB0J,EAAMia,GAIvC,OAHIwG,GACAA,EAAiB,GAEdrY,QAAQD,QAAQ7R,GAE3B,OAAI0sB,GAAiBhjB,GACV9N,GAAgB8N,EAAMia,EAAUwG,GAEpCrY,QAAQC,OAAO,IAAItc,MAAM,wBAEpC,SAASo3B,GAAsBnjB,EAAMia,GACjC,GAAI8I,GAAkB/iB,GAClB,OAAO,GAAiBA,EAAMia,GAElC,GAAI+I,GAAiBhjB,GACjB,OAAO,GAAoBA,EAAMia,GAErC,MAAM,IAAIluB,MAAM,uBC3Bb,MAAM,GAAU,eCCvB,IAAI,GAAwC,SAAU+b,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMhb,GAAS,OAAOA,aAAiB8a,EAAI9a,EAAQ,IAAI8a,GAAE,SAAUG,GAAWA,EAAQjb,MAC/F,OAAO,IAAK8a,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAUpb,GAAS,IAAMqb,EAAKN,EAAUO,KAAKtb,IAAW,MAAOub,GAAKJ,EAAOI,IACpF,SAASC,EAASxb,GAAS,IAAMqb,EAAKN,EAAU,SAAS/a,IAAW,MAAOub,GAAKJ,EAAOI,IACvF,SAASF,EAAKhc,GAAUA,EAAOoc,KAAOR,EAAQ5b,EAAOW,OAASgb,EAAM3b,EAAOW,OAAO0b,KAAKN,EAAWI,GAClGH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,YAiBtE,MAAM,GAAS,IAAI,OAAO,IAC1B,SAAS4a,GAAUl2B,GACf,OAAiB,MAATA,GAAiB,eAAYA,EAAMkvB,WAAY,KAAwB,MAAjBlvB,EAAM4X,QAExE,SAAS,GAAY5X,GACjB,MAAM4tB,EAAW5tB,EAAM4tB,SACvB,OAAQA,GAAYA,EAASqC,OAE1B,MAAM,WAAe,GACxB,YAAYf,EAAYlS,GAGpB,GAFA,GAAOzG,oBAAqB,IAC5BpJ,QACI+oB,GAAUhH,GAAa,CACvB,MAAMK,EAAa,IAAI,QAAWL,EAAWA,YAM7C,GALA,eAAeprB,KAAM,cAAe,IAAMyrB,GAC1C,eAAezrB,KAAM,UAAW,6BAAeA,KAAKqrB,YAChDrrB,KAAK8T,UAAY,eAAWsX,EAAWtX,UACvC,GAAOxY,mBAAmB,8BAA+B,aAAc,cAEvE,GAAY8vB,GAAa,CACzB,MAAMc,EAAcd,EAAWtB,SAC/B,eAAe9pB,KAAM,YAAa,KAAM,CACpCmsB,OAAQD,EAAYC,OACpB9kB,KAAM6kB,EAAY7kB,MAAQ8jB,GAC1BtB,OAAQqC,EAAYrC,QAAU,QAElC,MAAMC,EAAW9pB,KAAK8pB,SAChBjc,EAAO,GAAOmhB,aAAalF,EAASqC,OAAQ,KAAMrC,EAASD,QAAQoF,WAAWnF,EAASziB,MACzF,6BAAewG,EAAKud,cAAgBprB,KAAK8T,SACzC,GAAOxY,mBAAmB,4BAA6B,aAAc,mBAIzE,eAAe0E,KAAM,YAAa,IAAM,UAG3C,CACD,GAAI,QAAWqyB,aAAajH,GAEC,cAArBA,EAAWkH,OACX,GAAOh3B,mBAAmB,uCAAwC,aAAc,cAEpF,eAAe0E,KAAM,cAAe,IAAMorB,OAEzC,CAE2B,kBAAjB,GACHA,EAAWziB,MAAM,iBAAyC,KAAtByiB,EAAW/vB,SAC/C+vB,EAAa,KAAOA,GAG5B,MAAMK,EAAa,IAAI,QAAWL,GAClC,eAAeprB,KAAM,cAAe,IAAMyrB,GAE9C,eAAezrB,KAAM,YAAa,IAAM,MACxC,eAAeA,KAAM,UAAW,6BAAeA,KAAKqrB,YAGpDnS,IAAa,GAAS0F,WAAW1F,IACjC,GAAO5d,mBAAmB,mBAAoB,WAAY4d,GAE9D,eAAelZ,KAAM,WAAYkZ,GAAY,MAEjD,eAAiB,OAAOlZ,KAAKuyB,YAC7B,iBAAmB,OAAOvyB,KAAKwyB,cAAcpH,WAC7C,gBAAkB,OAAOprB,KAAKwyB,cAAcnH,UAC5C,aACI,OAAOjU,QAAQD,QAAQnX,KAAK8T,SAEhC,QAAQoF,GACJ,OAAO,IAAI,GAAOlZ,KAAMkZ,GAE5B,gBAAgBI,GACZ,OAAO,eAAkBA,GAAa1B,KAAMtB,IACzB,MAAXA,EAAGlO,OACC,eAAWkO,EAAGlO,QAAUpI,KAAK8T,SAC7B,GAAOxY,mBAAmB,oCAAqC,mBAAoBge,EAAYlR,aAE5FkO,EAAGlO,MAEd,MAAM8K,EAAYlT,KAAKwyB,cAAcC,WAAW,eAAU,wBAAUnc,KACpE,OAAO,wBAAUA,EAAIpD,KAG7B,YAAYtL,GACR,OAAO,GAAU5H,UAAM,OAAQ,GAAQ,YACnC,OAAO,eAAcA,KAAKwyB,cAAcC,WAAWrO,GAAYxc,QAGvE,eAAeiT,EAAQ/N,EAAO5Q,GAC1B,OAAO,GAAU8D,UAAM,OAAQ,GAAQ,YAEnC,MAAM0yB,QAAkB,GAAkBC,aAAa9X,EAAQ/N,EAAO5Q,EAAQU,IACrD,MAAjBoD,KAAKkZ,UACL,GAAOtd,WAAW,8CAA+C,OAAOC,OAAOC,sBAAuB,CAClGC,UAAW,cACXG,MAAOU,IAGRoD,KAAKkZ,SAASe,YAAYrd,KAErC,OAAO,eAAcoD,KAAKwyB,cAAcC,WAAW,GAAkBpc,KAAKqc,EAAU7X,OAAQ/N,EAAO4lB,EAAUx2B,YAGrH,QAAQ+sB,EAAUgH,EAASR,GAKvB,GAJyB,oBAAd,GAA6BA,IACpCA,EAAmBQ,EACnBA,EAAU,IAEVR,GAAkD,oBAAvB,EAC3B,MAAM,IAAI10B,MAAM,oBAKpB,OAHKk1B,IACDA,EAAU,IAEPlvB,GAAgBf,KAAMipB,EAAUgH,EAASR,GAKpD,oBAAoBQ,GAChB,IAAIjD,EAAU,OAAAmD,GAAA,MAAY,IACrBF,IACDA,EAAU,IAEVA,EAAQ2C,eACR5F,EAAU,eAAS,eAAa,eAAU,eAAO,CAACA,EAASiD,EAAQ2C,gBAAiB,EAAG,MAE3F,MAAM9I,EAAW2C,GAAkBO,EAASiD,EAAQpG,QACpD,OAAO,GAAOmF,aAAalF,EAAUmG,EAAQ5oB,KAAM4oB,EAAQpG,QAE/D,yBAAyB7a,EAAMia,EAAUwG,GACrC,OAAOyC,GAAkBljB,EAAMia,EAAUwG,GAAkB7X,KAAMtS,GACtD,IAAI,GAAOA,IAG1B,6BAA6B0J,EAAMia,GAC/B,OAAO,IAAI,GAAOkJ,GAAsBnjB,EAAMia,IAElD,oBAAoBa,EAAUziB,EAAM2iB,GAIhC,OAHK3iB,IACDA,EAAO8jB,IAEJ,IAAI,GAAO,GAAO6D,aAAalF,EAAU,KAAME,GAAUiF,WAAW5nB,KAG5E,SAASwrB,GAAcjrB,EAASsL,GACnC,OAAO,6BAAekR,GAAYxc,GAAUsL,GAEzC,SAAS4f,GAAgBjY,EAAQ/N,EAAO5Q,EAAOgX,GAClD,OAAO,6BAAe,GAAkBmD,KAAKwE,EAAQ/N,EAAO5Q,GAAQgX,G,iBC9KjE,MAAM,GAAU,iBCGjB,GAAS,IAAI,OAAO,IAE1B,SAAS6f,GAAgB72B,GACrB,OAAQA,GAAsC,oBAArBA,EAAe,UAE5C,SAAS82B,GAAmBnZ,GACxB,MAAM7O,EAAO,SAAUioB,EAAWhD,GACf,MAAXA,IACAA,EAAU,IAEd,MAAMiD,EAAe,GACrB,GAAID,EAAUE,eACV,IACID,EAAal1B,KAAK,IAAIi1B,EAAUE,eAAetZ,EAASoW,EAAQmD,SAEpE,MAAOp4B,IAEX,GAAIi4B,EAAUI,kBACV,IACIH,EAAal1B,KAAK,IAAIi1B,EAAUI,kBAAkBxZ,EAASoW,EAAQqD,YAEvE,MAAOt4B,IAEX,GAAIi4B,EAAUM,gBACV,IACIL,EAAal1B,KAAK,IAAIi1B,EAAUM,gBAAgB1Z,EAASoW,EAAQuD,UAErE,MAAOx4B,IAEX,GAAIi4B,EAAUQ,eAAgB,CAK1B,MAAMC,EAAO,CAAC,SAAU,UAAW,WACnC,IACI,MAAMxa,EAAW,IAAI+Z,EAAUQ,eAAe5Z,GAC1CX,EAASW,UAAoD,IAAzC6Z,EAAKpmB,QAAQ4L,EAASW,QAAQjd,OAClDs2B,EAAal1B,KAAKkb,GAG1B,MAAOle,KAEX,GAAIi4B,EAAUU,mBACV,IACIT,EAAal1B,KAAK,IAAIi1B,EAAUU,mBAAmB9Z,IAEvD,MAAO7e,IAEX,GAA4B,IAAxBk4B,EAAa73B,OACb,OAAO,KAEX,GAAI43B,EAAUW,iBAAkB,CAC5B,IAAIC,EAAS,EAOb,OANsB,MAAlB5D,EAAQ4D,OACRA,EAAS5D,EAAQ4D,OAEA,cAAZha,IACLga,EAAS,GAEN,IAAIZ,EAAUW,iBAAiBV,EAAcW,GAExD,OAAOX,EAAa,IAKxB,OAHAloB,EAAK8oB,UAAY,SAAUja,GACvB,OAAOmZ,GAAmBnZ,IAEvB7O,EAEX,SAAS+oB,GAAmBC,EAAKna,GAC7B,MAAM7O,EAAO,SAAUioB,EAAWhD,GAC9B,OAAIgD,EAAUgB,gBACH,IAAIhB,EAAUgB,gBAAgBD,EAAKna,GAEvC,MAKX,OAHA7O,EAAK8oB,UAAY,SAAUja,GACvB,OAAOka,GAAmBC,EAAKna,IAE5B7O,EAEX,MAAMkpB,GAAY,CACdna,QAAS,EACToa,WAAY,6CACZv3B,KAAM,YACNw3B,iBAAkBpB,GAAmB,cAEnCqB,GAAU,CACZta,QAAS,EACToa,WAAY,6CACZv3B,KAAM,UACNw3B,iBAAkBpB,GAAmB,YAEnCsB,GAAgB,CAClBva,QAAS,GACTnd,KAAM,gBACNw3B,iBAAkBL,GAAmB,sCAAuC,kBAG1EQ,GAAW,CACbC,YAAa,CAAEza,QAAS,EAAGnd,KAAM,eACjCs3B,UAAWA,GACXO,QAASP,GACTQ,OAAQ,CAAE3a,QAAS,EAAGnd,KAAM,UAC5By3B,QAASA,GACTM,QAASN,GACTO,QAAS,CACL7a,QAAS,EACToa,WAAY,6CACZv3B,KAAM,UACNw3B,iBAAkBpB,GAAmB,YAEzC6B,MAAO,CACH9a,QAAS,GACTnd,KAAM,QACNw3B,iBAAkBpB,GAAmB,UAEzC8B,OAAQ,CACJ/a,QAAS,EACToa,WAAY,6CACZv3B,KAAM,SACNw3B,iBAAkBpB,GAAmB,WAEzC+B,SAAU,CAAEhb,QAAS,QAASnd,KAAM,YAEpCo4B,QAAS,CACLjb,QAAS,GACTnd,KAAM,UACNw3B,iBAAkBL,GAAmB,mCAAqC,YAE9EkB,cAAe,CAAElb,QAAS,GAAInd,KAAM,iBACpC03B,cAAeA,GACfY,eAAgBZ,GAChBa,aAAc,CACVpb,QAAS,EACTnd,KAAM,eACNw3B,iBAAkBL,GAAmB,qCAAuC,iBAEhFqB,KAAM,CAAErb,QAAS,IAAKnd,KAAM,QAC5By4B,MAAO,CAAEtb,QAAS,IAAKnd,KAAM,SAC7B04B,SAAU,CAAEvb,QAAS,MAAOnd,KAAM,YAClC24B,SAAU,CAAExb,QAAS,GAAInd,KAAM,YAC/B,iBAAkB,CAAEmd,QAAS,GAAInd,KAAM,kBACvC,kBAAmB,CAAEmd,QAAS,IAAKnd,KAAM,mBACzC44B,SAAU,CAAEzb,QAAS,MAAOnd,KAAM,YAClC,mBAAoB,CAAEmd,QAAS,OAAQnd,KAAM,oBAC7C64B,IAAK,CAAE1b,QAAS,GAAInd,KAAM,OAC1B84B,KAAM,CAAE3b,QAAS,GAAInd,KAAM,SAQxB,SAAS,GAAWid,GAEvB,GAAe,MAAXA,EACA,OAAO,KAEX,GAAyB,kBAAd,EAAwB,CAC/B,IAAK,MAAMjd,KAAQ23B,GAAU,CACzB,MAAMoB,EAAWpB,GAAS33B,GAC1B,GAAI+4B,EAAS5b,UAAYF,EACrB,MAAO,CACHjd,KAAM+4B,EAAS/4B,KACfmd,QAAS4b,EAAS5b,QAClBoa,WAAawB,EAASxB,YAAc,KACpCC,iBAAmBuB,EAASvB,kBAAoB,MAI5D,MAAO,CACHra,QAASF,EACTjd,KAAM,WAGd,GAAyB,kBAAd,EAAwB,CAC/B,MAAM+4B,EAAWpB,GAAS1a,GAC1B,OAAgB,MAAZ8b,EACO,KAEJ,CACH/4B,KAAM+4B,EAAS/4B,KACfmd,QAAS4b,EAAS5b,QAClBoa,WAAYwB,EAASxB,WACrBC,iBAAmBuB,EAASvB,kBAAoB,MAGxD,MAAMuB,EAAWpB,GAAS1a,EAAQjd,MAElC,IAAK+4B,EAID,MAHiC,kBAArB9b,EAAe,SACvB,GAAOve,mBAAmB,0BAA2B,UAAWue,GAE7DA,EAGa,IAApBA,EAAQE,SAAiBF,EAAQE,UAAY4b,EAAS5b,SACtD,GAAOze,mBAAmB,2BAA4B,UAAWue,GAIrE,IAAI+b,EAAkB/b,EAAQua,kBAAoB,KAUlD,OATuB,MAAnBwB,GAA2BD,EAASvB,mBAEhCwB,EADA7C,GAAgB4C,EAASvB,kBACPuB,EAASvB,iBAAiBN,UAAUja,GAGpC8b,EAASvB,kBAI5B,CACHx3B,KAAMid,EAAQjd,KACdmd,QAAS4b,EAAS5b,QAClBoa,WAAata,EAAQsa,YAAcwB,EAASxB,YAAc,KAC1DC,iBAAkBwB,G,iBC1N1B,SAASC,GAAO9yB,GACZ,GAAKA,EAAK1H,OAAS,IAAO,EACtB,MAAM,IAAIN,MAAM,YAEpB,IAAIQ,EAAS,GACb,IAAK,IAAIe,EAAI,EAAGA,EAAIyG,EAAK1H,OAAQiB,GAAK,EAClCf,EAAOyC,KAAK7B,SAAS4G,EAAKoJ,UAAU7P,EAAGA,EAAI,GAAI,KAEnD,OAAOf,EAEX,SAASu6B,GAAY/yB,EAAMiI,GAClBA,IACDA,EAAO,SAAU9O,GAAS,MAAO,CAACC,SAASD,EAAO,OAEtD,IAAI65B,EAAK,EACLx6B,EAAS,GAMb,OALAwH,EAAKyN,MAAM,KAAK7F,QAASqrB,IACrB,IAAI9kB,EAAQ8kB,EAAKxlB,MAAM,KACvBulB,GAAM55B,SAAS+U,EAAM,GAAI,IACzB3V,EAAOw6B,GAAM/qB,EAAKkG,EAAM,MAErB3V,EAEX,SAAS06B,GAAiBlzB,GACtB,IAAImzB,EAAK,EACT,OAAOnzB,EAAKyN,MAAM,KAAKnG,IAAK5L,IACxB,IAAIyS,EAAQzS,EAAE+R,MAAM,KACC,IAAjBU,EAAM7V,OACN6V,EAAM,GAAK,IAEO,KAAbA,EAAM,KACXA,EAAM,GAAK,KAEf,IAAI6kB,EAAKG,EAAK/5B,SAAS+U,EAAM,GAAI,IAEjC,OADAglB,EAAK/5B,SAAS+U,EAAM,GAAI,IACjB,CAAEgL,EAAG6Z,EAAII,EAAGD,KAG3B,SAASE,GAASl6B,EAAOm6B,GACrB,IAAIN,EAAK,EACT,IAAK,IAAIz5B,EAAI,EAAGA,EAAI+5B,EAAOh7B,OAAQiB,IAAK,CACpC,IAAIg6B,EAAQD,EAAO/5B,GAEnB,GADAy5B,GAAMO,EAAMpa,EACRhgB,GAAS65B,GAAM75B,GAAS65B,EAAKO,EAAMH,IAAOj6B,EAAQ65B,IAAOO,EAAMC,GAAK,KAAQ,EAAG,CAC/E,GAAID,EAAM7e,IAAsC,IAAjC6e,EAAM7e,EAAEnK,QAAQpR,EAAQ65B,GACnC,SAEJ,OAAOO,GAGf,OAAO,KAEX,MAAME,GAAmBP,GAAiB,g8CAEpCQ,GAAkB,sDAAsDjmB,MAAM,KAAKnG,IAAK5L,GAAMtC,SAASsC,EAAG,KAC1Gi4B,GAAmB,CACrB,CAAEP,EAAG,GAAIQ,EAAG,GAAIza,EAAG,IACnB,CAAEia,EAAG,GAAIQ,EAAG,GAAIlf,EAAG,CAAC,IAAKyE,EAAG,KAC5B,CAAEia,EAAG,GAAIQ,EAAG,EAAGlf,EAAG,CAAC,IAAKyE,EAAG,GAAIqa,EAAG,GAClC,CAAEJ,EAAG,GAAIQ,EAAG,EAAGza,EAAG,GAAIqa,EAAG,GACzB,CAAEJ,EAAG,GAAIQ,EAAG,EAAGza,EAAG,GAAIqa,EAAG,GACzB,CAAEJ,EAAG,GAAIQ,EAAG,EAAGlf,EAAG,CAAC,EAAG,EAAG,GAAIyE,EAAG,GAAIqa,EAAG,GACvC,CAAEJ,EAAG,GAAIQ,EAAG,EAAGza,EAAG,GAAIqa,EAAG,GACzB,CAAEJ,EAAG,GAAIQ,EAAG,EAAGlf,EAAG,CAAC,GAAI,GAAI,IAAKyE,EAAG,GAAIqa,EAAG,GAC1C,CAAEJ,EAAG,GAAIQ,EAAG,GAAIlf,EAAG,CAAC,IAAKyE,EAAG,KAC5B,CAAEia,EAAG,GAAIQ,EAAG,EAAGza,EAAG,GAAIqa,EAAG,GACzB,CAAEJ,EAAG,GAAIQ,EAAG,GAAIza,EAAG,IACnB,CAAEia,EAAG,GAAIQ,EAAG,GAAIza,EAAG,IACnB,CAAEia,EAAG,GAAIQ,EAAG,EAAGza,EAAG,GAAIqa,EAAG,GACzB,CAAEJ,EAAG,GAAIQ,EAAG,EAAGza,EAAG,GAAIqa,EAAG,GACzB,CAAEJ,EAAG,GAAIQ,EAAG,EAAGza,EAAG,GAAIqa,EAAG,GACzB,CAAEJ,EAAG,GAAIQ,EAAG,EAAGlf,EAAG,CAAC,IAAKyE,EAAG,GAAIqa,EAAG,GAClC,CAAEJ,EAAG,GAAIQ,EAAG,EAAGza,EAAG,GAAIqa,EAAG,GACzB,CAAEJ,EAAG,GAAIQ,EAAG,GAAIza,EAAG,IACnB,CAAEia,EAAG,IAAKQ,EAAG,EAAGza,EAAG,KAAMqa,EAAG,GAC5B,CAAEJ,EAAG,GAAIQ,EAAG,EAAGza,EAAG,IAAKqa,EAAG,GAC1B,CAAEJ,EAAG,GAAIQ,EAAG,GAAIza,EAAG,KACnB,CAAEia,EAAG,GAAIQ,EAAG,GAAIza,EAAG,KACnB,CAAEia,EAAG,GAAIQ,EAAG,GAAIza,EAAG,OACnB,CAAEia,EAAG,GAAIQ,EAAG,GAAIza,EAAG,MACnB,CAAEia,EAAG,GAAIQ,GAAI,OAAQza,EAAG,OACxB,CAAEia,EAAG,GAAIQ,GAAI,OAAQza,EAAG,IACxB,CAAEia,EAAG,GAAIQ,GAAI,OAAQza,EAAG,IACxB,CAAEia,EAAG,GAAIQ,GAAI,OAAQlf,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAKyE,EAAG,IACxD,CAAEia,EAAG,GAAIQ,GAAI,OAAQza,EAAG,IACxB,CAAEia,EAAG,GAAIQ,GAAI,OAAQlf,EAAG,CAAC,EAAG,EAAG,EAAG,IAAKyE,EAAG,IAC1C,CAAEia,EAAG,GAAIQ,GAAI,OAAQlf,EAAG,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,IAAKyE,EAAG,IACnD,CAAEia,EAAG,GAAIQ,GAAI,OAAQza,EAAG,IACxB,CAAEia,EAAG,GAAIQ,GAAI,OAAQza,EAAG,IACxB,CAAEia,EAAG,GAAIQ,GAAI,OAAQza,EAAG,IACxB,CAAEia,EAAG,GAAIQ,GAAI,OAAQza,EAAG,IACxB,CAAEia,EAAG,GAAIQ,GAAI,OAAQza,EAAG,IACxB,CAAEia,EAAG,GAAIQ,GAAI,OAAQza,EAAG,IACxB,CAAEia,EAAG,GAAIQ,GAAI,OAAQlf,EAAG,CAAC,IAAKyE,EAAG,IACjC,CAAEia,EAAG,GAAIQ,GAAI,OAAQlf,EAAG,CAAC,IAAKyE,EAAG,IACjC,CAAEia,EAAG,GAAIQ,GAAI,OAAQlf,EAAG,CAAC,IAAKyE,EAAG,IACjC,CAAEia,EAAG,GAAIQ,GAAI,OAAQlf,EAAG,CAAC,IAAKyE,EAAG,IACjC,CAAEia,EAAG,GAAIQ,GAAI,OAAQlf,EAAG,CAAC,IAAKyE,EAAG,KAE/B0a,GAAoBd,GAAY,yfAChCe,GAAoBf,GAAY,0dAChCgB,GAAoBhB,GAAY,y3DAA03DD,IAC15DkB,GAAiBd,GAAiB,2LACxC,SAASe,GAAQ9sB,GACb,OAAOA,EAAOuB,OAAO,CAACC,EAAOxP,KACzBA,EAAMyO,QAASzO,IAAYwP,EAAM1N,KAAK9B,KAC/BwP,GACR,IAEA,SAASurB,GAAiBC,GAC7B,QAASd,GAASc,EAAWV,IAE1B,SAASW,GAAiBD,GAC7B,IAAIZ,EAAQF,GAASc,EAAWR,IAChC,GAAIJ,EACA,MAAO,CAACY,EAAYZ,EAAMK,GAE9B,IAAIS,EAAQR,GAAkBM,GAC9B,GAAIE,EACA,OAAOA,EAEX,IAAI/K,EAAQwK,GAAkBK,GAC9B,GAAI7K,EACA,MAAO,CAAC6K,EAAY7K,EAAM,IAE9B,IAAIgL,EAAUP,GAAkBI,GAChC,OAAIG,GAGG,KAEJ,SAASC,GAAgBJ,GAC5B,QAASd,GAASc,EAAWH,IAE1B,SAASQ,GAASr7B,GAIrB,GAAIA,EAAMyM,MAAM,kBAAoBzM,EAAMb,QAAU,GAChD,OAAOa,EAAMoY,cAGjB,IAAI8iB,EAAQ,eAAiBl7B,GAC7Bk7B,EAAQJ,GAAQI,EAAM/sB,IAAKiB,IAEvB,GAAImrB,GAAgBnpB,QAAQhC,IAAS,EACjC,MAAO,GAEX,GAAIA,GAAQ,OAAUA,GAAQ,MAC1B,MAAO,GAGX,IAAIksB,EAAeL,GAAiB7rB,GACpC,OAAIksB,GAIG,CAAClsB,MAGZ8rB,EAAQ,eAAiB,eAAcA,GAAQ,OAAyBrJ,MAExEqJ,EAAMzsB,QAASW,IACX,GAAIgsB,GAAgBhsB,GAChB,MAAM,IAAIvQ,MAAM,oCAIxBq8B,EAAMzsB,QAASW,IACX,GAAI2rB,GAAiB3rB,GACjB,MAAM,IAAIvQ,MAAM,oCAIxB,IAAI6B,EAAO,eAAcw6B,GAEzB,GAA6B,MAAzBx6B,EAAKuP,UAAU,EAAG,IAAuC,OAAzBvP,EAAKuP,UAAU,EAAG,IAAmD,MAApCvP,EAAKuP,UAAUvP,EAAKvB,OAAS,GAC9F,MAAM,IAAIN,MAAM,kBAGpB,GAAI6B,EAAKvB,OAAS,GACd,MAAM,IAAIN,MAAM,YAEpB,OAAO6B,ECpLX,MAAM,GAAS,IAAI,OAAO,IACpB66B,GAAQ,IAAIj8B,WAAW,IAC7Bi8B,GAAMpT,KAAK,GACX,MAAMqT,GAAY,IAAIxoB,OAAO,uBACtB,SAASyoB,GAAY/6B,GACxB,IACI,MAAMsU,EAAQtU,EAAK4T,MAAM,KACzB,IAAK,IAAIlU,EAAI,EAAGA,EAAI4U,EAAM7V,OAAQiB,IAC9B,GAAkC,IAA9Bi7B,GAASrmB,EAAM5U,IAAIjB,OACnB,MAAM,IAAIN,MAAM,SAGxB,OAAO,EAEX,MAAOC,IACP,OAAO,EAEJ,SAAS48B,GAASh7B,GAEC,kBAAX,GACP,GAAOtB,mBAAmB,iCAAkC,OAAQsB,GAExE,IAAIi7B,EAAUj7B,EACVrB,EAASk8B,GACb,MAAOI,EAAQx8B,OAAQ,CACnB,MAAMy8B,EAAYD,EAAQlvB,MAAM+uB,IACf,MAAbI,GAAsC,KAAjBA,EAAU,IAC/B,GAAOx8B,mBAAmB,yCAA0C,OAAQsB,GAEhF,MAAMm7B,EAAQ,eAAYR,GAASO,EAAU,KAC7Cv8B,EAAS,eAAU,eAAO,CAACA,EAAQ,eAAUw8B,MAC7CF,EAAUC,EAAU,IAAM,GAE9B,OAAO,eAAQv8B,GCpCZ,SAASwO,GAAOiuB,GACnBA,EAAWC,KAAKD,GAChB,MAAMj1B,EAAO,GACb,IAAK,IAAIzG,EAAI,EAAGA,EAAI07B,EAAS38B,OAAQiB,IACjCyG,EAAK/E,KAAKg6B,EAASj6B,WAAWzB,IAElC,OAAO,eAASyG,GAEb,SAAS+G,GAAO/G,GACnBA,EAAO,eAASA,GAChB,IAAIi1B,EAAW,GACf,IAAK,IAAI17B,EAAI,EAAGA,EAAIyG,EAAK1H,OAAQiB,IAC7B07B,GAAY55B,OAAOC,aAAa0E,EAAKzG,IAEzC,OAAO47B,KAAKF,GChBT,MAAM,GAAU,YCCvB,IAAI,GAAwC,SAAUlhB,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMhb,GAAS,OAAOA,aAAiB8a,EAAI9a,EAAQ,IAAI8a,GAAE,SAAUG,GAAWA,EAAQjb,MAC/F,OAAO,IAAK8a,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAUpb,GAAS,IAAMqb,EAAKN,EAAUO,KAAKtb,IAAW,MAAOub,GAAKJ,EAAOI,IACpF,SAASC,EAASxb,GAAS,IAAMqb,EAAKN,EAAU,SAAS/a,IAAW,MAAOub,GAAKJ,EAAOI,IACvF,SAASF,EAAKhc,GAAUA,EAAOoc,KAAOR,EAAQ5b,EAAOW,OAASgb,EAAM3b,EAAOW,OAAO0b,KAAKN,EAAWI,GAClGH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,YAI/D,SAAS2gB,GAAOC,EAAMnI,GACzB,OAAO,GAAUjwB,UAAM,OAAQ,GAAQ,YACpB,MAAXiwB,IACAA,EAAU,IAEd,MAAMoI,EAAU,CACZ9iB,OAAS0a,EAAQ1a,QAAU,MAC3B+iB,QAAUrI,EAAQqI,SAAW,GAC7BC,KAAOtI,EAAQsI,WAAQ3uB,IAEI,IAA3BqmB,EAAQuI,iBACRH,EAAQI,KAAO,OACfJ,EAAQK,MAAQ,WAChBL,EAAQM,YAAc,cACtBN,EAAQO,SAAW,SACnBP,EAAQQ,SAAW,UAGvB,MAAMC,QAAiBC,MAAMX,EAAMC,GAC7BE,QAAaO,EAASE,cACtBV,EAAU,GAWhB,OAVIQ,EAASR,QAAQ3tB,QACjBmuB,EAASR,QAAQ3tB,QAAQ,CAACzO,EAAO6D,KAC7Bu4B,EAAQv4B,EAAIuU,eAAiBpY,IAI/B48B,EAAgB,QAAM,OAAInuB,QAAS5K,IACjCu4B,EAAQv4B,EAAIuU,eAAiBwkB,EAASR,QAAQ3sB,IAAI5L,KAGnD,CACHu4B,QAASA,EACTW,WAAYH,EAASI,OACrBC,cAAeL,EAASM,WACxBb,KAAM,eAAS,IAAI/8B,WAAW+8B,QC7C1C,IAAI,GAAwC,SAAUzhB,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMhb,GAAS,OAAOA,aAAiB8a,EAAI9a,EAAQ,IAAI8a,GAAE,SAAUG,GAAWA,EAAQjb,MAC/F,OAAO,IAAK8a,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAUpb,GAAS,IAAMqb,EAAKN,EAAUO,KAAKtb,IAAW,MAAOub,GAAKJ,EAAOI,IACpF,SAASC,EAASxb,GAAS,IAAMqb,EAAKN,EAAU,SAAS/a,IAAW,MAAOub,GAAKJ,EAAOI,IACvF,SAASF,EAAKhc,GAAUA,EAAOoc,KAAOR,EAAQ5b,EAAOW,OAASgb,EAAM3b,EAAOW,OAAO0b,KAAKN,EAAWI,GAClGH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,YAStE,MAAM,GAAS,IAAI,OAAO,IAE1B,SAAS6hB,GAAQC,GACb,OAAO,IAAIliB,QAASD,IAChBiH,WAAWjH,EAASmiB,KAG5B,SAASC,GAAQr9B,EAAOuL,GACpB,GAAa,MAATvL,EACA,OAAO,KAEX,GAAuB,kBAAZ,EACP,OAAOA,EAEX,GAAI,eAAYA,GAAQ,CACpB,GAAIuL,IAAgC,SAAvBA,EAAK+I,MAAM,KAAK,IAA+C,qBAA9B/I,EAAK+I,MAAM,KAAK,GAAGD,QAC7D,IACI,OAAO,eAAarU,GAExB,MAAOlB,IAGX,OAAO,eAAQkB,GAEnB,OAAOA,EAQJ,SAASs9B,GAAWC,EAAYlB,EAAMmB,GAEzC,MAAMC,EAAwC,kBAAjB,GAAyD,MAA5BF,EAAWG,cAAyBH,EAAWG,cAAgB,GACzH,GAAOC,eAAgBF,EAAe,GAAMA,EAAe,IAAO,EAAI,oCAAqC,2BAA4BA,GACvI,MAAMG,EAA6C,kBAAjB,EAA6BL,EAAWK,iBAAmB,KACvFC,EAAiD,kBAAjB,GAA0E,kBAArCN,EAA+B,qBAAkBA,EAAWM,qBAAuB,IAC9J,GAAOF,eAAgBE,EAAuB,GAAMA,EAAuB,IAAO,EAAI,4CAA6C,kCAAmCA,GACtK,MAAMzB,EAAU,GAChB,IAAItE,EAAM,KAEV,MAAM/D,EAAU,CACZ1a,OAAQ,OAEZ,IAAIykB,GAAW,EACXC,EAAU,KACd,GAA4B,kBAAjB,EACPjG,EAAMyF,OAEL,GAA4B,kBAAjB,EAA2B,CAQvC,GAPkB,MAAdA,GAAwC,MAAlBA,EAAWzF,KACjC,GAAO14B,mBAAmB,cAAe,iBAAkBm+B,GAE/DzF,EAAMyF,EAAWzF,IACmB,kBAAxByF,EAAkB,SAAkBA,EAAWQ,QAAU,IACjEA,EAAUR,EAAWQ,SAErBR,EAAWnB,QACX,IAAK,MAAMv4B,KAAO05B,EAAWnB,QACzBA,EAAQv4B,EAAIuU,eAAiB,CAAEvU,IAAKA,EAAK7D,MAAOkC,OAAOq7B,EAAWnB,QAAQv4B,KACtE,CAAC,gBAAiB,qBAAqBuN,QAAQvN,EAAIuU,gBAAkB,IACrE0lB,GAAW,GAKvB,GADA/J,EAAQiK,YAAcT,EAAWS,UACV,MAAnBT,EAAWU,MAAuC,MAAvBV,EAAWxQ,SAAkB,CAC5B,WAAxB+K,EAAI7nB,UAAU,EAAG,KAA8D,IAA3CstB,EAAWW,6BAC/C,GAAOx+B,WAAW,mDAAoD,OAAOC,OAAOyO,iBAAkB,CAAEC,SAAU,MAAOypB,IAAKA,EAAKmG,KAAMV,EAAWU,KAAMlR,SAAU,eAExK,MAAMoR,EAAgBZ,EAAWU,KAAO,IAAMV,EAAWxQ,SACzDqP,EAAQ,iBAAmB,CACvBv4B,IAAK,gBACL7D,MAAO,SAAW,GAAa,eAAYm+B,MAIvD,MAAMC,EAAS,IAAIprB,OAAO,6CAA8C,KAClEqrB,EAAa,EAAQvG,EAAIrrB,MAAM2xB,GAAU,KAC/C,GAAIC,EACA,IACI,MAAMzB,EAAW,CACbG,WAAY,IACZE,cAAe,KACfb,QAAS,CAAE,eAAgBiC,EAAU,IACrChC,KAAM,GAAagC,EAAU,KAEjC,IAAIh/B,EAASu9B,EAASP,KAItB,OAHImB,IACAn+B,EAASm+B,EAAYZ,EAASP,KAAMO,IAEjC1hB,QAAQD,QAAQ5b,GAE3B,MAAOP,GACH,GAAOY,WAAW,4BAA6B,OAAOC,OAAO2+B,aAAc,CACvEjC,KAAMgB,GAAQgB,EAAU,GAAIA,EAAU,IACtCv/B,MAAOA,EACPy/B,YAAa,KACbC,cAAe,MACf1G,IAAKA,IAIbuE,IACAtI,EAAQ1a,OAAS,OACjB0a,EAAQsI,KAAOA,EACgB,MAA3BD,EAAQ,kBACRA,EAAQ,gBAAkB,CAAEv4B,IAAK,eAAgB7D,MAAO,6BAE3B,MAA7Bo8B,EAAQ,oBACRA,EAAQ,kBAAoB,CAAEv4B,IAAK,iBAAkB7D,MAAOkC,OAAOm6B,EAAKl9B,WAGhF,MAAMs/B,EAAc,GACpB16B,OAAOkU,KAAKmkB,GAAS3tB,QAAS5K,IAC1B,MAAM66B,EAAStC,EAAQv4B,GACvB46B,EAAYC,EAAO76B,KAAO66B,EAAO1+B,QAErC+zB,EAAQqI,QAAUqC,EAClB,MAAME,EAAiB,WACnB,IAAIC,EAAQ,KACZ,MAAMC,EAAU,IAAI3jB,SAAQ,SAAUD,EAASE,GACvC4iB,IACAa,EAAQ1c,WAAW,KACF,MAAT0c,IAGJA,EAAQ,KACRzjB,EAAO,GAAO+D,UAAU,UAAW,OAAOvf,OAAOm/B,QAAS,CACtDP,YAAalB,GAAQtJ,EAAQsI,KAAMoC,EAAY,iBAC/CD,cAAezK,EAAQ1a,OACvB0kB,QAASA,EACTjG,IAAKA,OAEViG,OAGLgB,EAAS,WACE,MAATH,IAGJI,aAAaJ,GACbA,EAAQ,OAEZ,MAAO,CAAEC,UAASE,UAzBC,GA2BjBE,EAAe,WACjB,OAAO,GAAUn7B,UAAM,OAAQ,GAAQ,YACnC,IAAK,IAAIo7B,EAAU,EAAGA,EAAUzB,EAAcyB,IAAW,CACrD,IAAItC,EAAW,KACf,IAEI,GADAA,QAAiBX,GAAOnE,EAAK/D,GACzBmL,EAAUzB,EACV,GAA4B,MAAxBb,EAASG,YAA8C,MAAxBH,EAASG,WAAoB,CAE5D,MAAMoC,EAAWvC,EAASR,QAAQ+C,UAAY,GAC9C,GAAuB,QAAnBpL,EAAQ1a,QAAoB8lB,EAAS1yB,MAAM,WAAY,CACvDqrB,EAAM8E,EAASR,QAAQ+C,SACvB,eAGH,GAA4B,MAAxBvC,EAASG,WAAoB,CAElC,IAAIqC,GAAW,EAIf,GAHIxB,IACAwB,QAAiBxB,EAAiBsB,EAASpH,IAE3CsH,EAAU,CACV,IAAIC,EAAQ,EACZ,MAAMC,EAAa1C,EAASR,QAAQ,eAEhCiD,EADwB,kBAAjB,GAA6BC,EAAW7yB,MAAM,iBACtB,IAAvBxM,SAASq/B,GAGTzB,EAAuB59B,SAASiC,OAAO6K,KAAKknB,SAAWlnB,KAAKwyB,IAAI,EAAGL,WAGzE/B,GAAQkC,GACd,WAKhB,MAAOvgC,GACH89B,EAAW99B,EAAM89B,SACD,MAAZA,IACA+B,EAAeI,SACf,GAAOr/B,WAAW,mBAAoB,OAAOC,OAAO2+B,aAAc,CAC9DC,YAAalB,GAAQtJ,EAAQsI,KAAMoC,EAAY,iBAC/CD,cAAezK,EAAQ1a,OACvBmmB,YAAa1gC,EACbg5B,IAAKA,KAIjB,IAAIuE,EAAOO,EAASP,KAepB,GAdIyB,GAAoC,MAAxBlB,EAASG,WACrBV,EAAO,MAEFO,EAASG,WAAa,KAAOH,EAASG,YAAc,OACzD4B,EAAeI,SACf,GAAOr/B,WAAW,eAAgB,OAAOC,OAAO2+B,aAAc,CAC1DtB,OAAQJ,EAASG,WACjBX,QAASQ,EAASR,QAClBC,KAAMgB,GAAQhB,EAAQO,EAAgB,QAAIA,EAASR,QAAQ,gBAAkB,MAC7EmC,YAAalB,GAAQtJ,EAAQsI,KAAMoC,EAAY,iBAC/CD,cAAezK,EAAQ1a,OACvBye,IAAKA,KAGT0F,EACA,IACI,MAAMn+B,QAAem+B,EAAYnB,EAAMO,GAEvC,OADA+B,EAAeI,SACR1/B,EAEX,MAAOP,GAEH,GAAIA,EAAM2gC,eAAiBP,EAAUzB,EAAc,CAC/C,IAAI2B,GAAW,EAIf,GAHIxB,IACAwB,QAAiBxB,EAAiBsB,EAASpH,IAE3CsH,EAAU,CACV,MAAMrB,EAAUF,EAAuB59B,SAASiC,OAAO6K,KAAKknB,SAAWlnB,KAAKwyB,IAAI,EAAGL,WAE7E/B,GAAQY,GACd,UAGRY,EAAeI,SACf,GAAOr/B,WAAW,4BAA6B,OAAOC,OAAO2+B,aAAc,CACvEjC,KAAMgB,GAAQhB,EAAQO,EAAgB,QAAIA,EAASR,QAAQ,gBAAkB,MAC7Et9B,MAAOA,EACPy/B,YAAalB,GAAQtJ,EAAQsI,KAAMoC,EAAY,iBAC/CD,cAAezK,EAAQ1a,OACvBye,IAAKA,IAOjB,OAHA6G,EAAeI,SAGR1C,EAEX,OAAO,GAAO38B,WAAW,kBAAmB,OAAOC,OAAO2+B,aAAc,CACpEC,YAAalB,GAAQtJ,EAAQsI,KAAMoC,EAAY,iBAC/CD,cAAezK,EAAQ1a,OACvBye,IAAKA,OAtGI,GA0GrB,OAAO5c,QAAQwkB,KAAK,CAACf,EAAeE,QAASI,IAE1C,SAASU,GAAUpC,EAAYzqB,EAAM0qB,GACxC,IAAIoC,EAAkB,CAAC5/B,EAAO48B,KAC1B,IAAIv9B,EAAS,KACb,GAAa,MAATW,EACA,IACIX,EAASmU,KAAKC,MAAM,eAAazT,IAErC,MAAOlB,GACH,GAAOY,WAAW,eAAgB,OAAOC,OAAO2+B,aAAc,CAC1DjC,KAAMr8B,EACNlB,MAAOA,IAOnB,OAHI0+B,IACAn+B,EAASm+B,EAAYn+B,EAAQu9B,IAE1Bv9B,GAKPg9B,EAAO,KACX,GAAY,MAARvpB,EAAc,CACdupB,EAAO,eAAYvpB,GAEnB,MAAM+sB,EAAmC,kBAAjB,EAA6B,CAAG/H,IAAKyF,GAAgB,eAAYA,GACzF,GAAIsC,EAAQzD,QAAS,CACjB,MAAM0D,EAA+G,IAA7F/7B,OAAOkU,KAAK4nB,EAAQzD,SAAS7kB,OAAQuU,GAA2B,iBAApBA,EAAE1T,eAAyC,OAC1G0nB,IACDD,EAAQzD,QAAU,eAAYyD,EAAQzD,SACtCyD,EAAQzD,QAAQ,gBAAkB,yBAItCyD,EAAQzD,QAAU,CAAE,eAAgB,oBAExCmB,EAAasC,EAEjB,OAAOvC,GAAWC,EAAYlB,EAAMuD,GAEjC,SAASG,GAAKjxB,EAAMilB,GAcvB,OAbKA,IACDA,EAAU,IAEdA,EAAU,eAAYA,GACD,MAAjBA,EAAQpM,QACRoM,EAAQpM,MAAQ,GAEG,MAAnBoM,EAAQiM,UACRjM,EAAQiM,QAAU,KAEE,MAApBjM,EAAQkM,WACRlM,EAAQkM,SAAW,KAEhB,IAAI/kB,SAAQ,SAAUD,EAASE,GAClC,IAAIyjB,EAAQ,KACRnjB,GAAO,EAEX,MAAMsjB,EAAS,KACPtjB,IAGJA,GAAO,EACHmjB,GACAI,aAAaJ,IAEV,GAEP7K,EAAQgK,UACRa,EAAQ1c,WAAW,KACX6c,KACA5jB,EAAO,IAAItc,MAAM,aAEtBk1B,EAAQgK,UAEf,MAAMmC,EAAanM,EAAQmM,WAC3B,IAAIhB,EAAU,EACd,SAAS3f,IACL,OAAOzQ,IAAO4M,MAAK,SAAUrc,GAEzB,QAAeqO,IAAXrO,EACI0/B,KACA9jB,EAAQ5b,QAGX,GAAI00B,EAAQoM,SACbpM,EAAQoM,SAASre,KAAK,OAAQvC,QAE7B,GAAIwU,EAAQqM,UACbrM,EAAQqM,UAAUte,KAAK,QAASvC,QAG/B,IAAK9D,EAAM,CAEZ,GADAyjB,IACIA,EAAUgB,EAIV,YAHInB,KACA5jB,EAAO,IAAItc,MAAM,yBAIzB,IAAIk/B,EAAUhK,EAAQkM,SAAWhgC,SAASiC,OAAO6K,KAAKknB,SAAWlnB,KAAKwyB,IAAI,EAAGL,KACzEnB,EAAUhK,EAAQpM,QAClBoW,EAAUhK,EAAQpM,OAElBoW,EAAUhK,EAAQiM,UAClBjC,EAAUhK,EAAQiM,SAEtB9d,WAAW3C,EAAOwe,GAEtB,OAAO,QACR,SAAUj/B,GACLigC,KACA5jB,EAAOrc,MAInBygB,O,4BCpYD,MAAM,GAAU,kB,iBCSvB,MAAM,GAAS,IAAI,OAAO,IACnB,MAAM,GACT,cACI,GAAOhJ,oBAAqB,IAC5BzS,KAAKu8B,QAAUv8B,KAAKw8B,oBAExB,oBACI,MAAMD,EAAU,GACVzoB,EAAU9T,KAAK8T,QAAQ0I,KAAKxc,MAC5By8B,EAAYz8B,KAAKy8B,UAAUjgB,KAAKxc,MAChCgZ,EAAWhZ,KAAKgZ,SAASwD,KAAKxc,MAC9B+C,EAAO/C,KAAK+C,KAAKyZ,KAAKxc,MACtBqW,EAAOrW,KAAKqW,KAAKmG,KAAKxc,MACtB0D,EAAM1D,KAAK0D,IAAI8Y,KAAKxc,MACpB08B,EAAS18B,KAAK08B,OAAOlgB,KAAKxc,MAC1ByH,EAAOzH,KAAKyH,KAAK+U,KAAKxc,MACtB28B,EAAcl+B,GAAeuB,KAAK+C,KAAKtE,GAAG,GAsGhD,OArGA89B,EAAQjjB,YAAc,CAClBjD,KAAMA,EACN5O,KAAMA,EACNqT,WAAY,GAAU8hB,UAAU58B,KAAK8a,WAAW0B,KAAKxc,MAAO,MAC5Did,UAAW,GAAU2f,UAAUvmB,EAAM,MACrCwmB,YAAa,GAAUD,UAAUF,EAAQ,MACzCI,iBAAkB,GAAUF,UAAUF,EAAQ,MAC9CjgB,cAAe,GAAUmgB,UAAUF,EAAQ,MAC3Ct0B,KAAM0L,EAGNkE,SAAU,GAAU4kB,UAAUH,GAC9BpkB,qBAAsB,GAAUukB,UAAUH,GAC1CrkB,aAAc,GAAUwkB,UAAUH,GAClCliB,SAAUkiB,EACVtiB,GAAI,GAAUyiB,UAAU9oB,EAAS,MACjC5X,MAAOugC,EACPniB,MAAOoiB,EACP35B,KAAMA,EACNjC,EAAG,GAAU87B,UAAU58B,KAAK+8B,SAC5BpG,EAAG,GAAUiG,UAAU58B,KAAK+8B,SAC5Bt+B,EAAG,GAAUm+B,UAAUF,GACvBM,QAAS,GAAUJ,UAAU9oB,EAAS,MACtCmpB,IAAK,GAAUL,UAAU75B,IAE7Bw5B,EAAQW,mBAAqB,CACzB90B,KAAM,GAAUw0B,UAAU9oB,GAC1BwG,MAAO,GAAUsiB,UAAUF,GAC3BniB,SAAU,GAAUqiB,UAAUH,GAC9BzkB,SAAU,GAAU4kB,UAAUH,GAC9BpkB,qBAAsB,GAAUukB,UAAUH,GAC1CrkB,aAAc,GAAUwkB,UAAUH,GAClCtiB,GAAI,GAAUyiB,UAAU9oB,GACxB5X,MAAO,GAAU0gC,UAAUH,GAC3B15B,KAAM,GAAU65B,UAAUD,GAC1Bl1B,KAAM,GAAUm1B,UAAUF,GAC1B5hB,WAAY,GAAU8hB,UAAU58B,KAAK8a,WAAW0B,KAAKxc,MAAO,OAEhEu8B,EAAQY,WAAa,CACjBL,iBAAkBJ,EAClBG,YAAaH,EACbvf,gBAAiB9G,EACjBvC,QAASA,EACT2B,OAAQ,GAAU2nB,QAAQ/mB,GAC1BtT,KAAMA,EACNs6B,SAAUX,EACVzf,UAAW5G,GAEfkmB,EAAQ7f,QAAU,CACdvC,GAAI,GAAUyiB,UAAU58B,KAAK8T,QAAS,MACtC1L,KAAM,GAAUw0B,UAAU58B,KAAK8T,QAAS,MACxCwL,gBAAiB,GAAUsd,UAAU9oB,EAAS,MAC9CgpB,iBAAkBJ,EAElB1gC,KAAM,GAAU4gC,UAAUl5B,GAC1B45B,QAASb,EACTc,UAAW,GAAUX,UAAU75B,GAC/Bka,UAAW5G,EACX8G,gBAAiB9G,EACjBsG,KAAM,GAAUygB,QAAQp9B,KAAKm9B,WAAW3gB,KAAKxc,OAC7C68B,YAAaH,EACbjgB,cAAe,GAAUmgB,UAAUF,EAAQ,MAC3Cc,kBAAmBf,EACnBgB,kBAAmB,GAAUb,UAAUH,GACvCvD,OAAQ,GAAU0D,UAAUF,GAC5Bj1B,KAAMA,GAEV80B,EAAQh7B,MAAQ,CACZ8U,KAAMA,EACNqnB,WAAYrnB,EACZqmB,OAAQA,EACR1L,UAAW0L,EACXpiB,MAAO,GAAUsiB,UAAUl5B,GAC3Bi6B,WAAY39B,KAAK29B,WAAWnhB,KAAKxc,MACjCua,SAAUkiB,EACVa,QAASb,EACTmB,MAAO9pB,EACP+pB,UAAW96B,EACX+6B,aAAc,GAAUlB,UAAU,GAAUQ,QAAQ/mB,IACpDiC,cAAe,GAAUskB,UAAUH,IAEvCF,EAAQwB,sBAAwB,eAAYxB,EAAQh7B,OACpDg7B,EAAQwB,sBAAsBD,aAAe,GAAUlB,UAAU,GAAUQ,QAAQp9B,KAAKg+B,oBAAoBxhB,KAAKxc,QACjHu8B,EAAQ9oB,OAAS,CACb6M,UAAW,GAAUsc,UAAU5jB,OAAUpP,GACzCwW,QAAS,GAAUwc,UAAU5jB,OAAUpP,GACvCqT,UAAW,GAAU2f,UAAUvmB,OAAMzM,GACrCkK,QAAS,GAAU8oB,UAAU9oB,OAASlK,GACtC6L,OAAQ,GAAUmnB,UAAU58B,KAAKyV,OAAO+G,KAAKxc,WAAO4J,IAExD2yB,EAAQ0B,UAAY,CAChBpB,YAAa,GAAUD,UAAUF,GACjCzf,UAAW,GAAU2f,UAAUvmB,GAC/BymB,iBAAkBJ,EAClBwB,QAAS,GAAUtB,UAAU58B,KAAKm+B,QAAQ3hB,KAAKxc,OAC/C8T,QAASA,EACT/Q,KAAM,GAAUq7B,aAAar7B,EAAM,MACnC0S,OAAQ,GAAU2nB,QAAQ/mB,GAC1B8G,gBAAiB9G,EACjBgnB,SAAUX,GAEPH,EAEX,WAAWzhB,GACP,OAAO,4BAAcA,GAAc,IAIvC,OAAO4hB,GACH,MAAe,OAAXA,EACO,EAEJ,OAAUt0B,KAAKs0B,GAAQ9zB,WAElC,KAAK8zB,GACD,MAAe,OAAXA,GAA6B,MAAVA,EACZ,EAEJ,OAAUt0B,KAAKs0B,GAAQ9zB,WAGlC,UAAU1M,GACN,OAAO,OAAUkM,KAAKlM,GAG1B,QAAQA,GACJ,GAAuB,mBAAZ,EACP,OAAOA,EAEX,GAAuB,kBAAZ,EAAsB,CAE7B,GADAA,EAAQA,EAAMoY,cACA,SAAVpY,EACA,OAAO,EAEX,GAAc,UAAVA,EACA,OAAO,EAGf,MAAM,IAAInB,MAAM,qBAAuBmB,GAE3C,IAAIA,EAAOmiC,GACP,MAAuB,kBAAZ,IACFA,GAAoC,OAA1BniC,EAAMiQ,UAAU,EAAG,KAC9BjQ,EAAQ,KAAOA,GAEf,eAAYA,IACLA,EAAMoY,cAGd,GAAOhZ,mBAAmB,eAAgB,QAASY,GAE9D,KAAKA,EAAOmiC,GACR,MAAM9iC,EAASyE,KAAK0D,IAAIxH,EAAOmiC,GAC/B,GAAK9iC,EAAOF,OAAS,IAAO,EACxB,MAAM,IAAIN,MAAM,8BAAgCmB,GAEpD,OAAOX,EAIX,QAAQW,GACJ,OAAO,eAAWA,GAEtB,YAAYA,GACR,IAAK,eAAYA,EAAO,IACpB,OAAO,KAEX,MAAM4X,EAAU,eAAW,eAAa5X,EAAO,KAC/C,OAAQ4X,IAAY,QAAe,KAAOA,EAE9C,gBAAgB5X,GACZ,OAAO,eAAmBA,GAG9B,SAAS8c,GACL,GAAgB,MAAZA,EACA,MAAO,SAEX,GAAiB,aAAbA,EACA,MAAO,MAEX,GAAiB,WAAbA,GAAsC,YAAbA,EACzB,OAAOA,EAEX,GAA0B,kBAAf,GAA2B,eAAYA,GAC9C,OAAO,eAASA,GAEpB,MAAM,IAAIje,MAAM,oBAGpB,KAAKmB,EAAOmiC,GACR,MAAM9iC,EAASyE,KAAK0D,IAAIxH,EAAOmiC,GAC/B,OAA8B,KAA1B,eAAc9iC,GACP,GAAOD,mBAAmB,eAAgB,QAASY,GAEvDX,EAGX,WAAWW,GACP,GAAa,MAATA,EACA,OAAO,KAEX,MAAMuC,EAAI,OAAU2J,KAAKlM,GACzB,IACI,OAAOuC,EAAEmK,WAEb,MAAO5N,IACP,OAAO,KAEX,QAAQkB,GACJ,IAAK,eAAYA,GACb,MAAM,IAAInB,MAAM,mBAEpB,OAAO,eAAWmB,EAAO,IAE7B,OAAOA,EAAOsT,GACU,MAAhBtT,EAAMoiC,QAAiC,MAAfpiC,EAAM0hC,QAC9B1hC,EAAM0hC,MAAQ1hC,EAAMoiC,QAGxB,MAAMX,EAAmC,MAArBzhC,EAAMqiC,YAAuBriC,EAAMqiC,YAAcriC,EAAMyhC,WACrEpiC,EAAS,GAAUkgB,MAAMjM,EAAQtT,GAEvC,OADAX,EAAOgjC,YAA8B,MAAdZ,EAAsB,KAAO,OAAUv1B,KAAKu1B,GAC5DpiC,EAEX,MAAMW,GACF,OAAO8D,KAAKw+B,OAAOtiC,EAAO8D,KAAKu8B,QAAQh7B,OAE3C,sBAAsBrF,GAClB,OAAO8D,KAAKw+B,OAAOtiC,EAAO8D,KAAKu8B,QAAQwB,uBAG3C,mBAAmB7hC,GACf,OAAO,GAAUuf,MAAMzb,KAAKu8B,QAAQW,mBAAoBhhC,GAE5D,oBAAoBod,GAEO,MAAnBA,EAAYrI,KAAuC,MAAxBqI,EAAYiB,WACvCjB,EAAYiB,SAAWjB,EAAYrI,KAInCqI,EAAYa,IAAM,OAAU/R,KAAKkR,EAAYa,IAAInO,WACjDsN,EAAYa,GAAK,8CAGI,MAArBb,EAAY3I,OAAqC,MAApB2I,EAAYvW,OACzCuW,EAAYvW,KAAOuW,EAAY3I,OAGb,MAAlB2I,EAAYa,IAAqC,MAAvBb,EAAY0jB,UACtC1jB,EAAY0jB,QAAUh9B,KAAKsf,gBAAgBhG,IAErB,IAArBA,EAAY7R,MAAmC,IAArB6R,EAAY7R,MAAyC,MAA1B6R,EAAYwB,aAClExB,EAAYwB,WAAa,IAE7B,MAAMvf,EAAS,GAAUkgB,MAAMzb,KAAKu8B,QAAQjjB,YAAaA,GACzD,GAA2B,MAAvBA,EAAYS,QAAiB,CAC7B,IAAIA,EAAUT,EAAYS,QACtB,eAAYA,KACZA,EAAU,OAAU3R,KAAK2R,GAASnR,YAEtCrN,EAAOwe,QAAUA,MAEhB,CACD,IAAIA,EAAUT,EAAYmlB,UAEX,MAAX1kB,GAA+B,MAAZxe,EAAOkD,IAC1Bsb,EAAUT,EAAYS,SAEtB,eAAYA,KACZA,EAAU,OAAU3R,KAAK2R,GAASnR,YAEb,kBAAd,GAAsC,MAAZrN,EAAOkD,IACxCsb,GAAWxe,EAAOkD,EAAI,IAAM,EACxBsb,EAAU,IACVA,EAAU,GAEdA,EAAU5d,SAAS4d,IAEE,kBAAd,IACPA,EAAU,GAEdxe,EAAOwe,QAAUA,EAMrB,OAHIxe,EAAO0hB,WAAoD,MAAvC1hB,EAAO0hB,UAAUhP,QAAQ,KAAM,MACnD1S,EAAO0hB,UAAY,MAEhB1hB,EAEX,YAAYW,GACR,OAAO,oBAAiBA,GAE5B,WAAWA,GACP,OAAO,GAAUuf,MAAMzb,KAAKu8B,QAAQY,WAAYjhC,GAEpD,QAAQA,GACJ,MAAMX,EAAS,GAAUkgB,MAAMzb,KAAKu8B,QAAQ7f,QAASxgB,GAErD,GAAmB,MAAfX,EAAOS,KACP,GAAIT,EAAOS,KAAKX,QAAU,EAAG,CAEzB,MAAMa,EAAQ,OAAUkM,KAAK7M,EAAOS,MAAM4M,WAC5B,IAAV1M,GAAyB,IAAVA,GAEM,MAAjBX,EAAO29B,QAAmB39B,EAAO29B,SAAWh9B,GAC5C,GAAOZ,mBAAmB,kCAAmC,QAAS,CAAEU,KAAMT,EAAOS,KAAMk9B,OAAQ39B,EAAO29B,SAE9G39B,EAAO29B,OAASh9B,SACTX,EAAOS,MAGd,GAAOV,mBAAmB,0BAA2B,aAAcC,EAAOS,WAGlD,KAAvBT,EAAOS,KAAKX,QAEjB,GAAOC,mBAAmB,oBAAqB,aAAcC,EAAOS,MAM5E,OAHqB,MAAjBT,EAAO29B,SACP39B,EAAOmjC,WAAY,GAEhBnjC,EAEX,OAAOW,GACH,OAAIY,MAAMG,QAAQf,GACPA,EAAMmO,IAAK5L,GAAMuB,KAAKyV,OAAOhX,IAEtB,MAATvC,EACE8D,KAAKqW,KAAKna,GAAO,GAErB,KAEX,OAAOA,GACH,OAAO,GAAUuf,MAAMzb,KAAKu8B,QAAQ9oB,OAAQvX,GAEhD,UAAUA,GACN,OAAO,GAAUuf,MAAMzb,KAAKu8B,QAAQ0B,UAAW/hC,GAEnD,aAAasT,EAAQlI,GACjB,MAAM/L,EAAS,GACf,IAAK,MAAMwE,KAAOyP,EACd,IACI,MAAMtT,EAAQsT,EAAOzP,GAAKuH,EAAOvH,SACnB6J,IAAV1N,IACAX,EAAOwE,GAAO7D,GAGtB,MAAOlB,GAGH,MAFAA,EAAM2jC,SAAW5+B,EACjB/E,EAAM4jC,WAAat3B,EAAOvH,GACpB/E,EAGd,OAAOO,EAGX,iBAAiBiU,EAAQqvB,GACrB,OAAO,SAAW3iC,GACd,OAAa,MAATA,EACO2iC,EAEJrvB,EAAOtT,IAItB,oBAAoBsT,EAAQsvB,GACxB,OAAO,SAAW5iC,GACd,OAAKA,EAGEsT,EAAOtT,GAFH4iC,GAMnB,eAAetvB,GACX,OAAO,SAAWuvB,GACd,IAAKjiC,MAAMG,QAAQ8hC,GACf,MAAM,IAAIhkC,MAAM,gBAEpB,MAAMQ,EAAS,GAIf,OAHAwjC,EAAMp0B,SAAQ,SAAUzO,GACpBX,EAAOyC,KAAKwR,EAAOtT,OAEhBX,IAIZ,SAASyjC,GAAuB9iC,GACnC,OAAQA,GAAgD,oBAA/BA,EAAyB,oBAE/C,SAAS+iC,GAAoB/iC,GAChC,OAAQ8iC,GAAuB9iC,IAAUA,EAAM+iC,sBAGnD,IAAIC,IAAkB,EACf,SAASC,KACRD,KAGJA,IAAkB,EAClB3tB,QAAQC,IAAI,8BACZD,QAAQC,IAAI,8DACZD,QAAQC,IAAI,IACZD,QAAQC,IAAI,6EACZD,QAAQC,IAAI,sEACZD,QAAQC,IAAI,IACZD,QAAQC,IAAI,2EACZD,QAAQC,IAAI,0EACZD,QAAQC,IAAI,iFACZD,QAAQC,IAAI,IACZD,QAAQC,IAAI,sDACZD,QAAQC,IAAI,+BCvbhB,IAAI,GAAwC,SAAUsF,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMhb,GAAS,OAAOA,aAAiB8a,EAAI9a,EAAQ,IAAI8a,GAAE,SAAUG,GAAWA,EAAQjb,MAC/F,OAAO,IAAK8a,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAUpb,GAAS,IAAMqb,EAAKN,EAAUO,KAAKtb,IAAW,MAAOub,GAAKJ,EAAOI,IACpF,SAASC,EAASxb,GAAS,IAAMqb,EAAKN,EAAU,SAAS/a,IAAW,MAAOub,GAAKJ,EAAOI,IACvF,SAASF,EAAKhc,GAAUA,EAAOoc,KAAOR,EAAQ5b,EAAOW,OAASgb,EAAM3b,EAAOW,OAAO0b,KAAKN,EAAWI,GAClGH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,YAiBtE,MAAM,GAAS,IAAI,OAAO,IAI1B,SAAS4nB,GAAW5oB,GAChB,OAAa,MAATA,EACO,QAEkB,KAAzB,eAAcA,IACd,GAAOlb,mBAAmB,gBAAiB,QAASkb,GAEjDA,EAAMlC,eAEjB,SAAS+qB,GAAgB5pB,GAErBA,EAASA,EAAO5Y,QAChB,MAAO4Y,EAAOpa,OAAS,GAAkC,MAA7Boa,EAAOA,EAAOpa,OAAS,GAC/Coa,EAAOE,MAEX,OAAOF,EAAOpL,IAAKmM,IACf,GAAI1Z,MAAMG,QAAQuZ,GAAQ,CAEtB,MAAMpM,EAAS,GACfoM,EAAM7L,QAAS6L,IACXpM,EAAOg1B,GAAW5oB,KAAU,IAGhC,MAAM8oB,EAASr/B,OAAOkU,KAAK/J,GAE3B,OADAk1B,EAAOlZ,OACAkZ,EAAOhhC,KAAK,KAGnB,OAAO8gC,GAAW5oB,KAEvBlY,KAAK,KAEZ,SAASihC,GAAkBx8B,GACvB,MAAa,KAATA,EACO,GAEJA,EAAKyN,MAAM,MAAMnG,IAAKmM,IACzB,GAAc,KAAVA,EACA,MAAO,GAEX,MAAMtF,EAAQsF,EAAMhG,MAAM,KAAKnG,IAAKmM,GACb,SAAVA,EAAoB,KAAOA,GAExC,OAA0B,IAAjBtF,EAAM7V,OAAgB6V,EAAM,GAAKA,IAGlD,SAAS,GAAYqH,GACjB,GAA2B,kBAAhB,EAA0B,CAEjC,GADAA,EAAYA,EAAUjE,cACW,KAA7B,eAAciE,GACd,MAAO,MAAQA,EAEnB,IAAgC,IAA5BA,EAAUjL,QAAQ,KAClB,OAAOiL,MAGV,IAAIzb,MAAMG,QAAQsb,GACnB,MAAO,YAAc8mB,GAAgB9mB,GAEpC,GAAI,GAAUinB,YAAYjnB,GAE3B,MADA,GAAO7c,KAAK,mBACN,IAAIX,MAAM,mBAEf,GAAIwd,GAAoC,kBAAhB,EACzB,MAAO,WAAaA,EAAUzE,SAAW,KAAO,IAAMurB,GAAgB9mB,EAAU9C,QAAU,IAE9F,MAAM,IAAI1a,MAAM,mBAAqBwd,GAIzC,SAASknB,KACL,OAAO,IAAK1O,MAAQ0O,UAExB,SAASlE,GAAMjC,GACX,OAAO,IAAIliB,QAASD,IAChBiH,WAAWjH,EAASmiB,KAiB5B,MAAMoG,GAAiB,CAAC,QAAS,UAAW,UAAW,QAChD,MAAM,GACT,YAAY5hB,EAAKtF,EAAUwF,GACvB,eAAehe,KAAM,MAAO8d,GAC5B,eAAe9d,KAAM,WAAYwY,GACjC,eAAexY,KAAM,OAAQge,GAEjC,YACI,OAAQhe,KAAKyH,MACT,IAAK,KACD,OAAOzH,KAAKqW,KAChB,IAAK,SACD,OAAOrW,KAAKyT,OAEpB,OAAOzT,KAAK8d,IAEhB,WACI,OAAO9d,KAAK8d,IAAItN,MAAM,KAAK,GAE/B,WACI,MAAMU,EAAQlR,KAAK8d,IAAItN,MAAM,KAC7B,MAAiB,OAAbU,EAAM,GACC,KAEJA,EAAM,GAEjB,aACI,MAAMA,EAAQlR,KAAK8d,IAAItN,MAAM,KAC7B,GAAiB,WAAbU,EAAM,GACN,OAAO,KAEX,MAAM4C,EAAU5C,EAAM,GAChBuE,EAAS8pB,GAAkBruB,EAAM,IACjCuC,EAAS,GAOf,OANIgC,EAAOpa,OAAS,IAChBoY,EAAOgC,OAASA,GAEhB3B,GAAuB,MAAZA,IACXL,EAAOK,QAAUA,GAEdL,EAEX,WACI,OAAQzT,KAAK8d,IAAIxQ,QAAQ,MAAQ,GAAKoyB,GAAepyB,QAAQtN,KAAK8d,MAAQ,GAKlF,MAAM6hB,GAAY,CACd,EAAK,CAAEC,OAAQ,MAAOC,MAAO,EAAMC,KAAM,EAAMC,OAAQ,MACvD,EAAK,CAAEH,OAAQ,MAAOC,MAAO,GAAMC,KAAM,GAAMC,OAAQ,OACvD,EAAK,CAAEH,OAAQ,OAAQC,MAAO,GAAMC,KAAM,IAC1C,GAAM,CAAEF,OAAQ,MAAOI,IAAK,OAC5B,GAAM,CAAEJ,OAAQ,MAAOI,IAAK,OAC5B,IAAO,CAAEJ,OAAQ,OAAQI,IAAK,QAElC,SAASC,GAAW/jC,GAChB,OAAO,eAAW,OAAUkM,KAAKlM,GAAOwN,cAAe,IAG3D,SAASw2B,GAAan9B,GAClB,OAAOulB,GAAOxe,OAAO,eAAO,CAAC/G,EAAM,eAAa4lB,GAAOA,GAAO5lB,IAAQ,EAAG,MAE7E,MAAMo9B,GAAW,CACb,IAAIjxB,OAAO,mBAAqB,KAChC,IAAIA,OAAO,gBAAiB,KAC5B,IAAIA,OAAO,kBAAoB,KAC/B,IAAIA,OAAO,mCAAoC,MAEnD,SAASkxB,GAAa7kC,GAClB,IACI,OAAO,eAAa8kC,GAAY9kC,IAEpC,MAAOP,IACP,OAAO,KAEX,SAASqlC,GAAY9kC,GACjB,GAAe,OAAXA,EACA,OAAO,KAEX,MAAM+M,EAAS,OAAUF,KAAK,eAAa7M,EAAQ,EAAG,KAAKqN,WACrDvN,EAAS,OAAU+M,KAAK,eAAa7M,EAAQ+M,EAAQA,EAAS,KAAKM,WACzE,OAAO,eAAarN,EAAQ+M,EAAS,GAAIA,EAAS,GAAKjN,GAEpD,MAAM,GAET,YAAY6d,EAAUpF,EAASlX,EAAM+e,GACjC,eAAe3b,KAAM,WAAYkZ,GACjC,eAAelZ,KAAM,OAAQpD,GAC7B,eAAeoD,KAAM,UAAWkZ,EAASonB,UAAUxsB,QAAQA,IAC3D,eAAe9T,KAAM,mBAAoB2b,GAE7C,YAAYvG,EAAUmrB,GAClB,OAAO,GAAUvgC,UAAM,OAAQ,GAAQ,YAEnC,MAAMsW,EAAK,CACP6D,GAAIna,KAAK8T,QACT/Q,KAAM,eAAU,CAACqS,EAAUwiB,GAAS53B,KAAKpD,MAAQ2jC,GAAc,QAEnE,IACI,OAAOF,SAAkBrgC,KAAKkZ,SAASlc,KAAKsZ,IAEhD,MAAOtb,GACH,OAAIA,EAAMsQ,KAAS,OAAOzP,OAAOyZ,eACtB,SAMvB,YAAYkrB,EAAUC,GAClB,MAAMC,EAAWf,GAAUvhC,OAAOoiC,IAMlC,GALgB,MAAZE,GACA,GAAO9kC,WAAW,0BAA0B4kC,EAAY,OAAO3kC,OAAOC,sBAAuB,CACzFC,UAAW,cAAcykC,OAGZ,QAAjBE,EAASV,IACT,OAAOhgC,KAAKkZ,SAASonB,UAAUxsB,QAAQ2sB,GAE3C,MAAMtiC,EAAQ,eAASsiC,GAEvB,GAAsB,MAAlBC,EAASb,MAAe,CACxB,MAAMA,EAAQY,EAAS93B,MAAM,6CAC7B,GAAIk3B,EAAO,CACP,MAAMxkC,EAASc,SAAS0jC,EAAM,GAAI,IAClC,GAAIA,EAAM,GAAGxkC,SAAoB,EAATA,GAAcA,GAAU,GAAKA,GAAU,GAC3D,OAAO6kC,GAAa,eAAO,CAAC,CAACQ,EAASb,OAAS,KAAOA,EAAM,OAKxE,GAAqB,MAAjBa,EAASZ,KAAc,CACvB,MAAMA,EAAOW,EAAS93B,MAAM,yCAC5B,GAAIm3B,EAAM,CACN,MAAMzkC,EAASc,SAAS2jC,EAAK,GAAI,IACjC,GAAIA,EAAK,GAAGzkC,SAAoB,EAATA,GAAcA,GAAU,GAAKA,GAAU,GAC1D,OAAO6kC,GAAa,eAAO,CAAC,CAACQ,EAASZ,MAAQ,KAAOA,EAAK,OAKtE,GAAuB,MAAnBY,EAASX,OAAgB,CACzB,MAAM1kC,EAAS8C,EAAM,GAErB,IAAI0mB,EAAU1mB,EAAM,GASpB,GARgB,IAAZ0mB,EACe,KAAXxpB,GAA4B,KAAXA,IACjBwpB,GAAW,GAIfA,GAAW,EAEXA,GAAW,GAAK1mB,EAAM9C,SAAW,EAAIA,GAAUA,GAAU,GAAKA,GAAU,GAAI,CAC5E,MAAM0uB,EAAQ,KAAO4W,QAAQxiC,EAAMtB,MAAM,IAEzC,OADAktB,EAAMpD,QAAQ9B,GACP,KAAO/a,OAAO42B,EAASX,OAAQhW,IAG9C,OAAO,KAEX,WAAWyW,GACP,OAAO,GAAUxgC,UAAM,OAAQ,GAAQ,YAKnC,GAJgB,MAAZwgC,IACAA,EAAW,IAGE,KAAbA,EACA,IAEI,MAAMlnB,EAAc,CAChBa,GAAIna,KAAK8T,QACT/Q,KAAO,aAAe60B,GAAS53B,KAAKpD,MAAMuP,UAAU,IAElDs0B,QAAiBzgC,KAAKkZ,SAASlc,KAAKsc,GAE1C,MAAiB,OAAbmnB,GAAqBA,IAAa,QAC3B,KAEJzgC,KAAKkZ,SAASonB,UAAUM,YAAYH,GAE/C,MAAOzlC,GACH,GAAIA,EAAMsQ,OAAS,OAAOzP,OAAOyZ,eAC7B,OAAO,KAEX,MAAMta,EAId,MAAMylC,QAAiBzgC,KAAK6gC,YAAY,aAAcZ,GAAWO,IAEjE,GAAgB,MAAZC,GAAiC,OAAbA,EACpB,OAAO,KAGX,MAAM3sB,EAAU9T,KAAK8gC,YAAYN,EAAUC,GAQ3C,OAPe,MAAX3sB,GACA,GAAOlY,WAAW,mCAAoC,OAAOC,OAAOC,sBAAuB,CACvFC,UAAW,cAAcykC,KACzBA,SAAUA,EACVz9B,KAAM09B,IAGP3sB,KAGf,YACI,OAAO,GAAU9T,UAAM,OAAQ,GAAQ,YACnC,MAAM+gC,EAAU,GAChB,IAGI,MAAMC,QAAehhC,KAAKihC,QAAQ,UAClC,GAAc,MAAVD,EACA,OAAO,KAEX,IAAK,IAAI1kC,EAAI,EAAGA,EAAI6jC,GAAS9kC,OAAQiB,IAAK,CACtC,MAAMqM,EAAQq4B,EAAOr4B,MAAMw3B,GAAS7jC,IACpC,GAAa,MAATqM,EAGJ,OAAQA,EAAM,IACV,IAAK,QAED,OADAo4B,EAAQ/iC,KAAK,CAAEyJ,KAAM,MAAOy5B,QAASF,IAC9B,CAAED,UAAS/M,IAAKgN,GAC3B,IAAK,OAED,OADAD,EAAQ/iC,KAAK,CAAEyJ,KAAM,OAAQy5B,QAASF,IAC/B,CAAED,UAAS/M,IAAKgN,GAC3B,IAAK,OAED,OADAD,EAAQ/iC,KAAK,CAAEyJ,KAAM,OAAQy5B,QAASF,IAC/B,CAAED,UAAS/M,IAAK,gCAAiCgN,EAAO70B,UAAU,IAC7E,IAAK,SACL,IAAK,UAAW,CAEZ,MAAMiJ,EAAyB,WAAbzM,EAAM,GAAmB,aAAe,aAC1Do4B,EAAQ/iC,KAAK,CAAEyJ,KAAMkB,EAAM,GAAIu4B,QAASF,IAExC,MAAMG,EAASnhC,KAAKohC,yBAA2BphC,KAAKoZ,cAC9ClI,GAASvI,EAAM,IAAM,IAAI6H,MAAM,KACrC,GAAqB,IAAjBU,EAAM7V,OACN,OAAO,KAEX,MAAMgmC,QAAarhC,KAAKkZ,SAASonB,UAAUxsB,QAAQ5C,EAAM,IACnDowB,EAAU,eAAW,OAAUl5B,KAAK8I,EAAM,IAAIxH,cAAe,IAEnE,GAAiB,WAAbf,EAAM,GAAiB,CAEvB,MAAM44B,EAAavhC,KAAKkZ,SAASonB,UAAUM,kBAAkB5gC,KAAKkZ,SAASlc,KAAK,CAC5Emd,GAAIknB,EAAMt+B,KAAM,eAAU,CAAC,aAAcu+B,OAE7C,GAAIH,IAAUI,EACV,OAAO,KAEXR,EAAQ/iC,KAAK,CAAEyJ,KAAM,QAASy5B,QAASK,SAEtC,GAAiB,YAAb54B,EAAM,GAAkB,CAE7B,MAAM64B,EAAU,OAAUp5B,WAAWpI,KAAKkZ,SAASlc,KAAK,CACpDmd,GAAIknB,EAAMt+B,KAAM,eAAU,CAAC,aAAc,eAAWo+B,EAAO,IAAKG,OAEpE,GAAIE,EAAQx1B,SACR,OAAO,KAEX+0B,EAAQ/iC,KAAK,CAAEyJ,KAAM,UAAWy5B,QAASM,EAAQ1vB,aAGrD,MAAMwE,EAAK,CACP6D,GAAIna,KAAKkZ,SAASonB,UAAUxsB,QAAQ5C,EAAM,IAC1CnO,KAAM,eAAU,CAACqS,EAAUksB,KAE/B,IAAIG,EAAcrB,SAAmBpgC,KAAKkZ,SAASlc,KAAKsZ,IACxD,GAAmB,MAAfmrB,EACA,OAAO,KAEXV,EAAQ/iC,KAAK,CAAEyJ,KAAM,eAAgBy5B,QAASO,IAE7B,YAAb94B,EAAM,KACN84B,EAAcA,EAAYxzB,QAAQ,OAAQqzB,EAAQn1B,UAAU,KAGhE,MAAMu1B,QAAiB7F,GAAU4F,GAEjC,OAAKC,GAAwC,kBAApBA,EAAc,OAAmBA,EAASC,MAAMh5B,MAAM,yBAG/Eo4B,EAAQ/iC,KAAK,CAAEyJ,KAAM,WAAYy5B,QAASxxB,KAAKE,UAAU8xB,KACzDX,EAAQ/iC,KAAK,CAAEyJ,KAAM,MAAOy5B,QAASQ,EAASC,QACvC,CAAEZ,UAAS/M,IAAK0N,EAASC,QAJrB,QAS3B,MAAO3mC,IACP,OAAO,QAGf,iBACI,OAAO,GAAUgF,UAAM,OAAQ,GAAQ,YAEnC,MAAMygC,QAAiBzgC,KAAK6gC,YAAY,cAExC,GAAgB,MAAZJ,GAAiC,OAAbA,EACpB,OAAO,KAGX,MAAMmB,EAAOnB,EAAS93B,MAAM,iEAC5B,GAAIi5B,EAAM,CACN,MAAMvmC,EAASc,SAASylC,EAAK,GAAI,IACjC,GAAIA,EAAK,GAAGvmC,SAAoB,EAATA,EACnB,MAAO,UAAaitB,GAAOxe,OAAO,KAAO83B,EAAK,IAItD,MAAMC,EAAQpB,EAAS93B,MAAM,iCAC7B,OAAIk5B,GACwB,KAApBA,EAAM,GAAGxmC,OACF,SAAYwmC,EAAM,GAG1B,GAAOjmC,WAAW,2CAA4C,OAAOC,OAAOC,sBAAuB,CACtGC,UAAW,mBACXgH,KAAM09B,OAIlB,QAAQ1gC,GACJ,OAAO,GAAUC,UAAM,OAAQ,GAAQ,YAEnC,IAAI8hC,EAAW,eAAY/hC,GAG3B+hC,EAAW,eAAO,CAAC7B,GAAW,IAAKA,GAAW6B,EAASzmC,QAASymC,IAE3DA,EAASzmC,OAAS,KAAQ,IAC3BymC,EAAW,eAAO,CAACA,EAAU,eAAW,KAAM,GAAM/hC,EAAI1E,OAAS,OAErE,MAAMolC,QAAiBzgC,KAAK6gC,YAAY,aAAc,eAAQiB,IAC9D,OAAgB,MAAZrB,GAAiC,OAAbA,EACb,KAEJ,eAAaA,OAIhC,IAAIsB,GAAmB,KACnBC,GAAa,EACV,MAAM,WAAqB,GAU9B,YAAYnoB,GAcR,GAbA,GAAOpH,oBAAqB,IAC5BpJ,QAEArJ,KAAKiiC,QAAU,GACfjiC,KAAKkiC,SAAW,CAAE3gC,OAAQ,GAC1BvB,KAAKsgC,qBAAuB6B,eAI5B,eAAeniC,KAAM,aAA2B,QAAZ6Z,GAChC7Z,KAAKoiC,aACLvoB,EAAU7Z,KAAKqiC,iBAEfxoB,aAAmBzC,QACnBpX,KAAKsiC,gBAAkBzoB,EAEvBA,EAAQ1B,MAAOnd,OAEfgF,KAAKuiC,SAASpqB,MAAOnd,WAEpB,CACD,MAAMwnC,EAAe,0BAAsB,aAAtB,CAAoC3oB,GACrD2oB,GACA,eAAexiC,KAAM,WAAYwiC,GACjCxiC,KAAK4f,KAAK,UAAW4iB,EAAc,OAGnC,GAAOlnC,mBAAmB,kBAAmB,UAAWue,GAGhE7Z,KAAKyiC,yBAA2B,KAChCziC,KAAK0iC,kBAAoB,EACzB1iC,KAAK2iC,iBAAmB,IACxB3iC,KAAK4iC,eAAiB,EAE1B,SACI,OAAO,GAAU5iC,UAAM,OAAQ,GAAQ,YACnC,GAAqB,MAAjBA,KAAK6iC,SAAkB,CACvB,IAAIhpB,EAAU,KACd,GAAI7Z,KAAKsiC,gBACL,IACIzoB,QAAgB7Z,KAAKsiC,gBAEzB,MAAOtnC,IAGI,MAAX6e,IACAA,QAAgB7Z,KAAKqiC,iBAIpBxoB,GACD,GAAOje,WAAW,sBAAuB,OAAOC,OAAOinC,cAAe,IAGrD,MAAjB9iC,KAAK6iC,WACD7iC,KAAKoiC,WACLpiC,KAAK6iC,SAAWhpB,EAGhB,eAAe7Z,KAAM,WAAY6Z,GAErC7Z,KAAK4f,KAAK,UAAW/F,EAAS,OAGtC,OAAO7Z,KAAK6iC,YAMpB,YACI,OAAO5G,GAAK,IACDj8B,KAAKuiC,SAAS3qB,KAAMiC,GAChBA,EACP7e,IAEA,GAAIA,EAAMsQ,OAAS,OAAOzP,OAAOknC,eAAiC,cAAhB/nC,EAAM4hB,MAGxD,MAAM5hB,KAKlB,sBAII,OAHwB,MAApB+mC,KACAA,GAAmB,IAAI,IAEpBA,GAGX,kBAAkBloB,GACd,OAAO,GAAuB,MAAXA,EAAmB,YAAcA,GAIxD,wBAAwBmpB,GACpB,OAAO,GAAUhjC,UAAM,OAAQ,GAAQ,YAGnC,SAFMA,KAAKuiC,SAEPS,EAAS,EAET,MAAOhjC,KAAKijC,qBAAsB,CAE9B,MAAMC,EAAsBljC,KAAKijC,qBACjC,IAEI,MAAM1nC,QAAe2nC,EACrB,GAAKzD,KAAYlkC,EAAO4nC,UAAaH,EACjC,OAAOznC,EAAOshC,YAGlB,MAEJ,MAAO7hC,GAKH,GAAIgF,KAAKijC,uBAAyBC,EAC9B,OAKhB,MAAME,EAAU3D,KACV4D,EAA2B,eAAkB,CAC/CxG,YAAa78B,KAAKsjC,QAAQ,iBAAkB,IAC5CC,aAAcvjC,KAAK8Z,aAAalC,KAAMiC,GAAY,KAAS7e,GAAU,KACtE4c,KAAK,EAAGilB,cAAa0G,mBACpB,GAAIA,EAKA,MAHIvjC,KAAKijC,uBAAyBI,IAC9BrjC,KAAKijC,qBAAuB,MAE1BM,EAEV,MAAMJ,EAAW1D,KAOjB,OANA5C,EAAc,OAAUz0B,KAAKy0B,GAAaj0B,WACtCi0B,EAAc78B,KAAKyiC,0BACnB5F,EAAc78B,KAAKyiC,yBAEvBziC,KAAKyiC,wBAA0B5F,EAC/B78B,KAAKwjC,oBAAoB3G,GAClB,CAAEA,cAAauG,UAASD,cAUnC,OARAnjC,KAAKijC,qBAAuBI,EAE5BA,EAAyBlrB,MAAOnd,IAExBgF,KAAKijC,uBAAyBI,IAC9BrjC,KAAKijC,qBAAuB,eAGtBI,GAA0BxG,eAGhD,OACI,OAAO,GAAU78B,UAAM,OAAQ,GAAQ,YACnC,MAAMyjC,EAASzB,KAET0B,EAAU,GAChB,IAAI7G,EAAc,KAClB,IACIA,QAAoB78B,KAAK2jC,wBAAwB,IAAM3jC,KAAK4jC,gBAAkB,GAElF,MAAO5oC,GAEH,YADAgF,KAAK4f,KAAK,QAAS5kB,GAOvB,GAJAgF,KAAKwjC,oBAAoB3G,GAEzB78B,KAAK4f,KAAK,OAAQ6jB,EAAQ5G,GAEtBA,IAAgB78B,KAAK0iC,iBAAzB,CAQA,IAH6B,IAAzB1iC,KAAKkiC,SAAS3gC,QACdvB,KAAKkiC,SAAS3gC,MAAQs7B,EAAc,GAEpC5zB,KAAK46B,IAAK7jC,KAAKkiC,SAAc,MAAIrF,GAAe,IAChD,GAAOnhC,KAAK,+DAA+DsE,KAAKkiC,SAAS3gC,oBAAoBs7B,MAC7G78B,KAAK4f,KAAK,QAAS,GAAOxE,UAAU,8BAA+B,OAAOvf,OAAOknC,cAAe,CAC5FlG,YAAaA,EACbjgB,MAAO,YACPknB,oBAAqB9jC,KAAKkiC,SAAS3gC,SAEvCvB,KAAK4f,KAAK,QAASid,QAInB,IAAK,IAAIvgC,EAAI0D,KAAKkiC,SAAS3gC,MAAQ,EAAGjF,GAAKugC,EAAavgC,IACpD0D,KAAK4f,KAAK,QAAStjB,GAIvB0D,KAAKkiC,SAAS3gC,QAAUs7B,IACxB78B,KAAKkiC,SAAS3gC,MAAQs7B,EACtB58B,OAAOkU,KAAKnU,KAAKkiC,UAAUv3B,QAAS5K,IAEhC,GAAY,UAARA,EACA,OAGJ,MAAMgkC,EAAmB/jC,KAAKkiC,SAASniC,GAId,YAArBgkC,GAKAlH,EAAckH,EAAmB,WAC1B/jC,KAAKkiC,SAASniC,OAKF,IAA3BC,KAAK0iC,mBACL1iC,KAAK0iC,iBAAmB7F,EAAc,GAG1C78B,KAAKiiC,QAAQt3B,QAASiS,IAClB,OAAQA,EAAMnV,MACV,IAAK,KAAM,CACP,MAAM4O,EAAOuG,EAAMvG,KACnB,IAAI2tB,EAAShkC,KAAKod,sBAAsB/G,GAAMuB,KAAM8E,GAC3CA,GAAkC,MAAvBA,EAAQmgB,aAGxB78B,KAAKkiC,SAAS,KAAO7rB,GAAQqG,EAAQmgB,YACrC78B,KAAK4f,KAAKvJ,EAAMqG,GACT,MAJI,MAKZvE,MAAOnd,IAAYgF,KAAK4f,KAAK,QAAS5kB,KACzC0oC,EAAQ1lC,KAAKgmC,GACb,MAEJ,IAAK,SAAU,CACX,MAAMvwB,EAASmJ,EAAMnJ,OACrBA,EAAO6M,UAAYtgB,KAAK0iC,iBAAmB,EAC3CjvB,EAAO2M,QAAUyc,EACjB,MAAMmH,EAAShkC,KAAKugB,QAAQ9M,GAAQmE,KAAM+E,IAClB,IAAhBA,EAAKthB,QAGTshB,EAAKhS,QAAS6G,IACVxR,KAAKkiC,SAAS,KAAO1wB,EAAIyL,WAAazL,EAAIqrB,YAC1C78B,KAAKkiC,SAAS,KAAO1wB,EAAI2L,iBAAmB3L,EAAIqrB,YAChD78B,KAAK4f,KAAKnM,EAAQjC,OAEvB2G,MAAOnd,IAAYgF,KAAK4f,KAAK,QAAS5kB,KACzC0oC,EAAQ1lC,KAAKgmC,GACb,UAIZhkC,KAAK0iC,iBAAmB7F,EAExBzlB,QAAQ8C,IAAIwpB,GAAS9rB,KAAK,KACtB5X,KAAK4f,KAAK,UAAW6jB,KACtBtrB,MAAOnd,IAAYgF,KAAK4f,KAAK,QAAS5kB,UAxFrCgF,KAAK4f,KAAK,UAAW6jB,MA6FjC,iBAAiB5G,GACb78B,KAAK0iC,iBAAmB7F,EAAc,EAClC78B,KAAKikC,SACLjkC,KAAKi8B,OAGb,cACI,OAAOj8B,KAAK6iC,SAIhB,gBACI,OAAO,GAAU7iC,UAAM,OAAQ,GAAQ,YACnC,OAAO,GAAOpE,WAAW,8CAA+C,OAAOC,OAAOC,sBAAuB,CACzGC,UAAW,8BAIvB,aACI,OAAO,GAAUiE,UAAM,OAAQ,GAAQ,YACnC,MAAM6Z,QAAgB7Z,KAAKuiC,SAIrB2B,QAAuBlkC,KAAKqiC,gBAClC,GAAIxoB,EAAQE,UAAYmqB,EAAenqB,QAAS,CAG5C,GAAI/Z,KAAKoiC,WAeL,OAdApiC,KAAK6iC,SAAWqB,EAEhBlkC,KAAK0iC,kBAAoB,EACzB1iC,KAAKmkC,iBAAmB,KACxBnkC,KAAKokC,wBAA0B,KAC/BpkC,KAAK4iC,eAAiB,EACtB5iC,KAAKkiC,SAAS3gC,OAAS,EACvBvB,KAAKyiC,yBAA2B,KAChCziC,KAAKijC,qBAAuB,KAI5BjjC,KAAK4f,KAAK,UAAWskB,EAAgBrqB,SAC/B0hB,GAAM,GACLv7B,KAAK6iC,SAEhB,MAAM7nC,EAAQ,GAAOogB,UAAU,6BAA8B,OAAOvf,OAAOknC,cAAe,CACtFnmB,MAAO,UACP/C,QAASA,EACTwqB,gBAAiBH,IAGrB,MADAlkC,KAAK4f,KAAK,QAAS5kB,GACbA,EAEV,OAAO6e,KAGf,kBAII,OAHA7Z,KAAK2jC,wBAAwB,IAAM3jC,KAAK4jC,gBAAkB,GAAGhsB,KAAMilB,IAC/D78B,KAAKwjC,oBAAoB3G,IACzB7hC,OAC6B,MAAzBgF,KAAKmkC,iBAA4BnkC,KAAKmkC,kBAAoB,EAEtE,cACI,OAAwB,MAAhBnkC,KAAKskC,QAEjB,YAAYpoC,GACJA,IAAU8D,KAAKskC,SACftkC,KAAKskC,QAAUC,YAAY,KAAQvkC,KAAKi8B,QAAWj8B,KAAK4jC,iBACnD5jC,KAAKwkC,iBACNxkC,KAAKwkC,eAAiBpmB,WAAW,KAC7Bpe,KAAKi8B,OAGLj8B,KAAKwkC,eAAiBpmB,WAAW,KAGxBpe,KAAKskC,SACNtkC,KAAKi8B,OAGTj8B,KAAKwkC,eAAiB,MACvBxkC,KAAK4jC,kBACT,MAGD1nC,GAAS8D,KAAKskC,UACpBG,cAAczkC,KAAKskC,SACnBtkC,KAAKskC,QAAU,MAGvB,sBACI,OAAOtkC,KAAK2iC,iBAEhB,oBAAoBzmC,GAChB,GAAuB,kBAAZ,GAAwBA,GAAS,GAAKC,SAASiC,OAAOlC,KAAWA,EACxE,MAAM,IAAInB,MAAM,4BAEpBiF,KAAK2iC,iBAAmBzmC,EACpB8D,KAAKskC,UACLG,cAAczkC,KAAKskC,SACnBtkC,KAAKskC,QAAUC,YAAY,KAAQvkC,KAAKi8B,QAAWj8B,KAAK2iC,mBAGhE,sBACI,MAAM7R,EAAM2O,KAWZ,OATK3O,EAAM9wB,KAAK4iC,eAAkB,EAAI5iC,KAAK2iC,mBACvC3iC,KAAK4iC,eAAiB9R,EACtB9wB,KAAKokC,wBAA0BpkC,KAAK0kC,iBAAiB9sB,KAAMilB,KAC1B,MAAzB78B,KAAKmkC,kBAA4BtH,EAAc78B,KAAKmkC,oBACpDnkC,KAAKmkC,iBAAmBtH,GAErB78B,KAAKmkC,oBAGbnkC,KAAKokC,wBAEhB,oBAAoBvH,GAEa,MAAzB78B,KAAKmkC,kBAA4BtH,EAAc78B,KAAKmkC,mBAIxDnkC,KAAK4iC,eAAiBnD,MAEO,MAAzBz/B,KAAKmkC,kBAA4BtH,EAAc78B,KAAKmkC,oBACpDnkC,KAAKmkC,iBAAmBtH,EACxB78B,KAAKokC,wBAA0BhtB,QAAQD,QAAQ0lB,KAGvD,mBAAmB1f,EAAiBV,EAAewd,GAC/C,OAAO,GAAUj6B,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAK2kC,oBAAoBxnB,EAAmC,MAAjBV,EAAyB,EAAIA,EAAewd,GAAW,EAAG,SAGpH,oBAAoB9c,EAAiBV,EAAewd,EAAS2K,GACzD,OAAO,GAAU5kC,UAAM,OAAQ,GAAQ,YACnC,MAAM0c,QAAgB1c,KAAKod,sBAAsBD,GAEjD,OAAKT,EAAUA,EAAQD,cAAgB,IAAMA,EAClCC,EAGJ,IAAItF,QAAQ,CAACD,EAASE,KACzB,MAAMwtB,EAAc,GACpB,IAAIltB,GAAO,EACX,MAAMmtB,EAAc,WAChB,QAAIntB,IAGJA,GAAO,EACPktB,EAAYl6B,QAASK,IAAWA,OACzB,IAEL+5B,EAAgBroB,IACdA,EAAQD,cAAgBA,GAGxBqoB,KAGJ3tB,EAAQuF,IAIZ,GAFA1c,KAAKyF,GAAG0X,EAAiB4nB,GACzBF,EAAY7mC,KAAK,KAAQgC,KAAKgd,eAAeG,EAAiB4nB,KAC1DH,EAAa,CACb,IAAII,EAAkBJ,EAAYK,WAC9BC,EAAe,KACnB,MAAMC,EAAkBtI,GAAgB,GAAU78B,UAAM,OAAQ,GAAQ,YAChE2X,UAME4jB,GAAM,KACZv7B,KAAKqZ,oBAAoBurB,EAAYx8B,MAAMwP,KAAM0C,GAAU,GAAUta,UAAM,OAAQ,GAAQ,YACvF,IAAI2X,EAAJ,CAGA,GAAI2C,GAASsqB,EAAYtqB,MACrB0qB,EAAkBnI,MAEjB,CAED,CACI,MAAMuI,QAAcplC,KAAKkd,eAAeC,GACxC,GAAIioB,GAA8B,MAArBA,EAAMvI,YACf,OAOY,MAAhBqI,IACAA,EAAeF,EAAkB,EAC7BE,EAAeN,EAAYK,aAC3BC,EAAeN,EAAYK,aAGnC,MAAOC,GAAgBrI,EAAa,CAChC,GAAIllB,EACA,OAEJ,MAAMpW,QAAcvB,KAAKqlC,yBAAyBH,GAClD,IAAK,IAAII,EAAK,EAAGA,EAAK/jC,EAAMu8B,aAAaziC,OAAQiqC,IAAM,CACnD,MAAMhvB,EAAK/U,EAAMu8B,aAAawH,GAE9B,GAAIhvB,EAAGD,OAAS8G,EACZ,OAGJ,GAAI7G,EAAGlO,OAASw8B,EAAYx8B,MAAQkO,EAAGgE,QAAUsqB,EAAYtqB,MAAO,CAChE,GAAI3C,EACA,OAGJ,MAAM+E,QAAgB1c,KAAKulC,mBAAmBjvB,EAAGD,KAAMoG,GAEvD,GAAIqoB,IACA,OAGJ,IAAI3xB,EAAS,WAeb,OAdImD,EAAGvT,OAAS6hC,EAAY7hC,MAAQuT,EAAG6D,KAAOyqB,EAAYzqB,IAAM7D,EAAGpa,MAAMspC,GAAGZ,EAAY1oC,OACpFiX,EAAS,WAEQ,OAAZmD,EAAGvT,MAAiBuT,EAAGlO,OAASkO,EAAG6D,IAAM7D,EAAGpa,MAAM8P,WACvDmH,EAAS,kBAGbkE,EAAO,GAAO+D,UAAU,2BAA4B,OAAOvf,OAAO4pC,qBAAsB,CACpFC,UAAuB,aAAXvyB,GAAoC,cAAXA,EACrCA,SACAwyB,YAAa3lC,KAAK4lC,iBAAiBtvB,GACnCD,KAAM8G,EACNT,cAKZwoB,KAGJvtB,GAGJ3X,KAAKge,KAAK,QAASmnB,OAClBnqC,IACG2c,GAGJ3X,KAAKge,KAAK,QAASmnB,SAG3B,GAAIxtB,EACA,OAEJ3X,KAAKge,KAAK,QAASmnB,GACnBN,EAAY7mC,KAAK,KACbgC,KAAKgd,eAAe,QAASmoB,KAGrC,GAAyB,kBAAd,GAA0BlL,EAAU,EAAG,CAC9C,MAAMa,EAAQ1c,WAAW,KACjB0mB,KAGJztB,EAAO,GAAO+D,UAAU,mBAAoB,OAAOvf,OAAOm/B,QAAS,CAAEf,QAASA,MAC/EA,GACCa,EAAM+K,OACN/K,EAAM+K,QAEVhB,EAAY7mC,KAAK,KAAQk9B,aAAaJ,WAKtD,iBACI,OAAO,GAAU96B,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAK2jC,wBAAwB,MAG5C,cACI,OAAO,GAAU3jC,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK8Z,aACX,MAAMve,QAAeyE,KAAKsjC,QAAQ,cAAe,IACjD,IACI,OAAO,OAAUl7B,KAAK7M,GAE1B,MAAOP,GACH,OAAO,GAAOY,WAAW,0BAA2B,OAAOC,OAAO2+B,aAAc,CAC5EjlB,OAAQ,cACRha,SAAQP,cAKxB,WAAWyjB,EAAezF,GACtB,OAAO,GAAUhZ,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK8Z,aACX,MAAMnL,QAAe,eAAkB,CACnCmF,QAAS9T,KAAK8gC,YAAYriB,GAC1BzF,SAAUhZ,KAAK8lC,aAAa9sB,KAE1Bzd,QAAeyE,KAAKsjC,QAAQ,aAAc30B,GAChD,IACI,OAAO,OAAUvG,KAAK7M,GAE1B,MAAOP,GACH,OAAO,GAAOY,WAAW,0BAA2B,OAAOC,OAAO2+B,aAAc,CAC5EjlB,OAAQ,aACR5G,SAAQpT,SAAQP,cAKhC,oBAAoByjB,EAAezF,GAC/B,OAAO,GAAUhZ,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK8Z,aACX,MAAMnL,QAAe,eAAkB,CACnCmF,QAAS9T,KAAK8gC,YAAYriB,GAC1BzF,SAAUhZ,KAAK8lC,aAAa9sB,KAE1Bzd,QAAeyE,KAAKsjC,QAAQ,sBAAuB30B,GACzD,IACI,OAAO,OAAUvG,KAAK7M,GAAQqN,WAElC,MAAO5N,GACH,OAAO,GAAOY,WAAW,0BAA2B,OAAOC,OAAO2+B,aAAc,CAC5EjlB,OAAQ,sBACR5G,SAAQpT,SAAQP,cAKhC,QAAQyjB,EAAezF,GACnB,OAAO,GAAUhZ,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK8Z,aACX,MAAMnL,QAAe,eAAkB,CACnCmF,QAAS9T,KAAK8gC,YAAYriB,GAC1BzF,SAAUhZ,KAAK8lC,aAAa9sB,KAE1Bzd,QAAeyE,KAAKsjC,QAAQ,UAAW30B,GAC7C,IACI,OAAO,eAAQpT,GAEnB,MAAOP,GACH,OAAO,GAAOY,WAAW,0BAA2B,OAAOC,OAAO2+B,aAAc,CAC5EjlB,OAAQ,UACR5G,SAAQpT,SAAQP,cAKhC,aAAayjB,EAAesnB,EAAU/sB,GAClC,OAAO,GAAUhZ,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK8Z,aACX,MAAMnL,QAAe,eAAkB,CACnCmF,QAAS9T,KAAK8gC,YAAYriB,GAC1BzF,SAAUhZ,KAAK8lC,aAAa9sB,GAC5B+sB,SAAU3uB,QAAQD,QAAQ4uB,GAAUnuB,KAAMgY,GAAM,eAASA,MAEvDr0B,QAAeyE,KAAKsjC,QAAQ,eAAgB30B,GAClD,IACI,OAAO,eAAQpT,GAEnB,MAAOP,GACH,OAAO,GAAOY,WAAW,0BAA2B,OAAOC,OAAO2+B,aAAc,CAC5EjlB,OAAQ,eACR5G,SAAQpT,SAAQP,cAMhC,iBAAiBsb,EAAID,EAAM4uB,GACvB,GAAY,MAAR5uB,GAAwC,KAAxB,eAAcA,GAC9B,MAAM,IAAItb,MAAM,sCAEpB,MAAMQ,EAAS+a,EAuCf,OArCY,MAARD,GAAgBC,EAAGD,OAASA,GAC5B,GAAOza,WAAW,2DAA4D,OAAOC,OAAOinC,cAAe,CAAEkD,aAAc1vB,EAAGD,KAAM4vB,aAAc5vB,IAEtJ9a,EAAOghB,KAAO,CAAC2pB,EAAUjM,IAAY,GAAUj6B,UAAM,OAAQ,GAAQ,YACjD,MAAZkmC,IACAA,EAAW,GAEA,MAAXjM,IACAA,EAAU,GAGd,IAAI0L,OAAc/7B,EACD,IAAbs8B,GAAgC,MAAdjB,IAClBU,EAAc,CACV5iC,KAAMuT,EAAGvT,KACTqF,KAAMkO,EAAGlO,KACTkS,MAAOhE,EAAGgE,MACVH,GAAI7D,EAAG6D,GACPje,MAAOoa,EAAGpa,MACV+oC,eAGR,MAAMvoB,QAAgB1c,KAAK2kC,oBAAoBruB,EAAGD,KAAM6vB,EAAUjM,EAAS0L,GAC3E,OAAe,MAAXjpB,GAAgC,IAAbwpB,EACZ,MAGXlmC,KAAKkiC,SAAS,KAAO5rB,EAAGD,MAAQqG,EAAQmgB,YACjB,IAAnBngB,EAAQwc,QACR,GAAOt9B,WAAW,qBAAsB,OAAOC,OAAOyZ,eAAgB,CAClE6H,gBAAiB7G,EAAGD,KACpBiD,YAAahD,EACboG,QAASA,IAGVA,MAEJnhB,EAEX,gBAAgB4qC,GACZ,OAAO,GAAUnmC,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK8Z,aACX,MAAMssB,QAAchvB,QAAQD,QAAQgvB,GAAmBvuB,KAAK/W,GAAK,eAAQA,IACnEyV,EAAKtW,KAAKsgC,UAAUhnB,YAAY6sB,GACd,MAApB7vB,EAAGmG,gBACHnG,EAAGmG,cAAgB,GAEvB,MAAMogB,QAAoB78B,KAAK2jC,wBAAwB,IAAM,EAAI3jC,KAAK4jC,iBACtE,IACI,MAAMvtB,QAAarW,KAAKsjC,QAAQ,kBAAmB,CAAE6C,kBAAmBC,IACxE,OAAOpmC,KAAK4lC,iBAAiBtvB,EAAID,EAAMwmB,GAE3C,MAAO7hC,GAGH,MAFAA,EAAMse,YAAchD,EACpBtb,EAAMmiB,gBAAkB7G,EAAGD,KACrBrb,MAIlB,uBAAuBse,GACnB,OAAO,GAAUtZ,UAAM,OAAQ,GAAQ,YACnC,MAAMkK,QAAeoP,EACfhD,EAAK,GA4BX,MA3BA,CAAC,OAAQ,MAAM3L,QAAS5K,IACD,MAAfmK,EAAOnK,KAGXuW,EAAGvW,GAAOqX,QAAQD,QAAQjN,EAAOnK,IAAM6X,KAAMnZ,GAAOA,EAAIuB,KAAK8gC,YAAYriC,GAAK,SAElF,CAAC,WAAY,WAAY,eAAgB,uBAAwB,SAASkM,QAAS5K,IAC5D,MAAfmK,EAAOnK,KAGXuW,EAAGvW,GAAOqX,QAAQD,QAAQjN,EAAOnK,IAAM6X,KAAMnZ,GAAOA,EAAI,OAAU2J,KAAK3J,GAAK,SAEhF,CAAC,QAAQkM,QAAS5K,IACK,MAAfmK,EAAOnK,KAGXuW,EAAGvW,GAAOqX,QAAQD,QAAQjN,EAAOnK,IAAM6X,KAAMnZ,GAAa,MAALA,EAAaA,EAAI,SAEtEyL,EAAO4Q,aACPxE,EAAGwE,WAAa9a,KAAKsgC,UAAUxlB,WAAW5Q,EAAO4Q,aAErD,CAAC,QAAQnQ,QAAS5K,IACK,MAAfmK,EAAOnK,KAGXuW,EAAGvW,GAAOqX,QAAQD,QAAQjN,EAAOnK,IAAM6X,KAAMnZ,GAAOA,EAAI,eAAQA,GAAK,SAElEuB,KAAKsgC,UAAUpD,yBAAyB,eAAkB5mB,OAGzE,WAAW7C,GACP,OAAO,GAAUzT,UAAM,OAAQ,GAAQ,YACnCyT,QAAeA,EACf,MAAMlY,EAAS,GAgBf,OAfsB,MAAlBkY,EAAOK,UACPvY,EAAOuY,QAAU9T,KAAK8gC,YAAYrtB,EAAOK,UAE7C,CAAC,YAAa,UAAUnJ,QAAS5K,IACV,MAAf0T,EAAO1T,KAGXxE,EAAOwE,GAAO0T,EAAO1T,MAEzB,CAAC,YAAa,WAAW4K,QAAS5K,IACX,MAAf0T,EAAO1T,KAGXxE,EAAOwE,GAAOC,KAAK8lC,aAAaryB,EAAO1T,OAEpCC,KAAKsgC,UAAU7sB,aAAa,eAAkBlY,OAG7D,KAAK+d,EAAaN,GACd,OAAO,GAAUhZ,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK8Z,aACX,MAAMnL,QAAe,eAAkB,CACnC2K,YAAatZ,KAAKqmC,uBAAuB/sB,GACzCN,SAAUhZ,KAAK8lC,aAAa9sB,KAE1Bzd,QAAeyE,KAAKsjC,QAAQ,OAAQ30B,GAC1C,IACI,OAAO,eAAQpT,GAEnB,MAAOP,GACH,OAAO,GAAOY,WAAW,0BAA2B,OAAOC,OAAO2+B,aAAc,CAC5EjlB,OAAQ,OACR5G,SAAQpT,SAAQP,cAKhC,YAAYse,GACR,OAAO,GAAUtZ,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK8Z,aACX,MAAMnL,QAAe,eAAkB,CACnC2K,YAAatZ,KAAKqmC,uBAAuB/sB,KAEvC/d,QAAeyE,KAAKsjC,QAAQ,cAAe30B,GACjD,IACI,OAAO,OAAUvG,KAAK7M,GAE1B,MAAOP,GACH,OAAO,GAAOY,WAAW,0BAA2B,OAAOC,OAAO2+B,aAAc,CAC5EjlB,OAAQ,cACR5G,SAAQpT,SAAQP,cAKhC,YAAYyjB,GACR,OAAO,GAAUze,UAAM,OAAQ,GAAQ,YACnCye,QAAsBA,EACS,kBAApB,GACP,GAAOnjB,mBAAmB,8BAA+B,OAAQmjB,GAErE,MAAM3K,QAAgB9T,KAAKia,YAAYwE,GAMvC,OALe,MAAX3K,GACA,GAAOlY,WAAW,0BAA2B,OAAOC,OAAOC,sBAAuB,CAC9EC,UAAW,eAAe2T,KAAKE,UAAU6O,QAG1C3K,KAGf,UAAUwyB,EAAqBC,GAC3B,OAAO,GAAUvmC,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK8Z,aACXwsB,QAA4BA,EAE5B,IAAIzJ,GAAe,IACnB,MAAMluB,EAAS,CACX43B,sBAAuBA,GAE3B,GAAI,eAAYD,EAAqB,IACjC33B,EAAOsO,UAAYqpB,OAGnB,IACI33B,EAAOqK,eAAiBhZ,KAAK8lC,aAAaQ,GACtC,eAAY33B,EAAOqK,YACnB6jB,EAAc1gC,SAASwS,EAAOqK,SAAS7M,UAAU,GAAI,KAG7D,MAAOnR,GACH,GAAOM,mBAAmB,kCAAmC,sBAAuBgrC,GAG5F,OAAOrK,GAAK,IAAM,GAAUj8B,UAAM,OAAQ,GAAQ,YAC9C,MAAMuB,QAAcvB,KAAKsjC,QAAQ,WAAY30B,GAE7C,GAAa,MAATpN,EAIA,OAAwB,MAApBoN,EAAOsO,WACuC,MAA1Cjd,KAAKkiC,SAAS,KAAOvzB,EAAOsO,YAKb,MAAnBtO,EAAOqK,UACH6jB,EAAc78B,KAAKkiC,SAAS3gC,MALrB,UAUf,EAGJ,GAAIglC,EAAqB,CACrB,IAAI1J,EAAc,KAClB,IAAK,IAAIvgC,EAAI,EAAGA,EAAIiF,EAAMu8B,aAAaziC,OAAQiB,IAAK,CAChD,MAAMga,EAAK/U,EAAMu8B,aAAaxhC,GAC9B,GAAsB,MAAlBga,EAAGumB,YACHvmB,EAAGmG,cAAgB,OAElB,GAAwB,MAApBnG,EAAGmG,cAAuB,CACZ,MAAfogB,IACAA,QAAoB78B,KAAK2jC,wBAAwB,IAAM,EAAI3jC,KAAK4jC,kBAGpE,IAAInnB,EAAiBogB,EAAcvmB,EAAGumB,YAAe,EACjDpgB,GAAiB,IACjBA,EAAgB,GAEpBnG,EAAGmG,cAAgBA,GAG3B,MAAM+pB,EAAexmC,KAAKsgC,UAAUvC,sBAAsBx8B,GAE1D,OADAilC,EAAa1I,aAAe0I,EAAa1I,aAAazzB,IAAKiM,GAAOtW,KAAK4lC,iBAAiBtvB,IACjFkwB,EAEX,OAAOxmC,KAAKsgC,UAAU/+B,MAAMA,MAC5B,CAAE86B,SAAUr8B,UAGxB,SAASsmC,GACL,OAAQtmC,KAAKymC,UAAUH,GAAqB,GAEhD,yBAAyBA,GACrB,OAAQtmC,KAAKymC,UAAUH,GAAqB,GAEhD,eAAenpB,GACX,OAAO,GAAUnd,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK8Z,aACXqD,QAAwBA,EACxB,MAAMxO,EAAS,CAAEwO,gBAAiBnd,KAAKsgC,UAAUjqB,KAAK8G,GAAiB,IACvE,OAAO8e,GAAK,IAAM,GAAUj8B,UAAM,OAAQ,GAAQ,YAC9C,MAAMzE,QAAeyE,KAAKsjC,QAAQ,iBAAkB30B,GACpD,GAAc,MAAVpT,EACA,OAA6C,MAAzCyE,KAAKkiC,SAAS,KAAO/kB,GACd,UAEX,EAEJ,MAAM7G,EAAKtW,KAAKsgC,UAAUtC,oBAAoBziC,GAC9C,GAAsB,MAAlB+a,EAAGumB,YACHvmB,EAAGmG,cAAgB,OAElB,GAAwB,MAApBnG,EAAGmG,cAAuB,CAC/B,MAAMogB,QAAoB78B,KAAK2jC,wBAAwB,IAAM,EAAI3jC,KAAK4jC,iBAEtE,IAAInnB,EAAiBogB,EAAcvmB,EAAGumB,YAAe,EACjDpgB,GAAiB,IACjBA,EAAgB,GAEpBnG,EAAGmG,cAAgBA,EAEvB,OAAOzc,KAAK4lC,iBAAiBtvB,MAC7B,CAAE+lB,SAAUr8B,UAGxB,sBAAsBmd,GAClB,OAAO,GAAUnd,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK8Z,aACXqD,QAAwBA,EACxB,MAAMxO,EAAS,CAAEwO,gBAAiBnd,KAAKsgC,UAAUjqB,KAAK8G,GAAiB,IACvE,OAAO8e,GAAK,IAAM,GAAUj8B,UAAM,OAAQ,GAAQ,YAC9C,MAAMzE,QAAeyE,KAAKsjC,QAAQ,wBAAyB30B,GAC3D,GAAc,MAAVpT,EACA,OAA6C,MAAzCyE,KAAKkiC,SAAS,KAAO/kB,GACd,UAEX,EAGJ,GAAwB,MAApB5hB,EAAO0hB,UACP,OAEJ,MAAMP,EAAU1c,KAAKsgC,UAAU5jB,QAAQnhB,GACvC,GAA2B,MAAvBmhB,EAAQmgB,YACRngB,EAAQD,cAAgB,OAEvB,GAA6B,MAAzBC,EAAQD,cAAuB,CACpC,MAAMogB,QAAoB78B,KAAK2jC,wBAAwB,IAAM,EAAI3jC,KAAK4jC,iBAEtE,IAAInnB,EAAiBogB,EAAcngB,EAAQmgB,YAAe,EACtDpgB,GAAiB,IACjBA,EAAgB,GAEpBC,EAAQD,cAAgBA,EAE5B,OAAOC,KACP,CAAE2f,SAAUr8B,UAGxB,QAAQyT,GACJ,OAAO,GAAUzT,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK8Z,aACX,MAAMnL,QAAe,eAAkB,CAAE8E,OAAQzT,KAAK0mC,WAAWjzB,KAC3DkJ,QAAa3c,KAAKsjC,QAAQ,UAAW30B,GAM3C,OALAgO,EAAKhS,QAAS6G,IACS,MAAfA,EAAI0sB,UACJ1sB,EAAI0sB,SAAU,KAGf,GAAUd,QAAQp9B,KAAKsgC,UAAUrC,UAAUzhB,KAAKxc,KAAKsgC,WAArD,CAAiE3jB,MAGhF,gBACI,OAAO,GAAU3c,UAAM,OAAQ,GAAQ,YAEnC,aADMA,KAAK8Z,aACJ9Z,KAAKsjC,QAAQ,gBAAiB,OAG7C,aAAatqB,GACT,OAAO,GAAUhZ,UAAM,OAAQ,GAAQ,YAEnC,GADAgZ,QAAiBA,EACS,kBAAf,GAA2BA,EAAW,EAAG,CAC5CA,EAAW,GACX,GAAO1d,mBAAmB,mBAAoB,WAAY0d,GAE9D,IAAI6jB,QAAoB78B,KAAK2jC,wBAAwB,IAAM,EAAI3jC,KAAK4jC,iBAKpE,OAJA/G,GAAe7jB,EACX6jB,EAAc,IACdA,EAAc,GAEX78B,KAAKsgC,UAAUtnB,SAAS6jB,GAEnC,OAAO78B,KAAKsgC,UAAUtnB,SAASA,MAGvC,YAAYpc,GACR,OAAO,GAAUoD,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAM8T,QAAgB9T,KAAK2mC,aAAa/pC,GACxC,OAAe,MAAXkX,EACO,KAEJ,IAAI,GAAS9T,KAAM8T,EAASlX,GAEvC,MAAO5B,GACH,OAAIA,EAAMsQ,KAAS,OAAOzP,OAAOyZ,eACtB,SAMvB,aAAa1Y,GACT,OAAO,GAAUoD,UAAM,OAAQ,GAAQ,YAEnC,MAAM6Z,QAAgB7Z,KAAK8Z,aAEtBD,EAAQsa,YACT,GAAOv4B,WAAW,+BAAgC,OAAOC,OAAOC,sBAAuB,CAAEC,UAAW,MAAO8d,QAASA,EAAQjd,OAGhI,MAAM0c,EAAc,CAChBa,GAAIN,EAAQsa,WACZpxB,KAAO,aAAe60B,GAASh7B,GAAMuP,UAAU,IAEnD,IACI,OAAOnM,KAAKsgC,UAAUM,kBAAkB5gC,KAAKhD,KAAKsc,IAEtD,MAAOte,GACH,GAAIA,EAAMsQ,OAAS,OAAOzP,OAAOyZ,eAC7B,OAAO,KAEX,MAAMta,MAIlB,YAAY4B,GACR,OAAO,GAAUoD,UAAM,OAAQ,GAAQ,YACnCpD,QAAaA,EAEb,IACI,OAAOwa,QAAQD,QAAQnX,KAAKsgC,UAAUxsB,QAAQlX,IAElD,MAAO5B,GAEH,GAAI,eAAY4B,GACZ,MAAM5B,EAGQ,kBAAX,GACP,GAAOM,mBAAmB,mBAAoB,OAAQsB,GAG1D,MAAMoe,QAAiBhb,KAAK4mC,YAAYhqC,GACxC,OAAKoe,QAGQA,EAAS5B,aAFX,QAKnB,cAActF,GACV,OAAO,GAAU9T,UAAM,OAAQ,GAAQ,YACnC8T,QAAgBA,EAChBA,EAAU9T,KAAKsgC,UAAUxsB,QAAQA,GACjC,MAAM+yB,EAAc/yB,EAAQ3H,UAAU,GAAGmI,cAAgB,gBACnDwyB,QAAwB9mC,KAAK2mC,aAAaE,GAChD,IAAKC,EACD,OAAO,KAGX,IAAI3oC,EAAQ,qBAAe6B,KAAKhD,KAAK,CACjCmd,GAAI2sB,EACJ/jC,KAAO,aAAe60B,GAASiP,GAAa16B,UAAU,MAG1D,GAAIhO,EAAM9C,OAAS,KAAO,OAAU+M,KAAKjK,EAAMtB,MAAM,EAAG,KAAK2oC,GAAG,IAC5D,OAAO,KAIX,GAFArnC,EAAQA,EAAMtB,MAAM,IAEhBsB,EAAM9C,OAAS,GACf,OAAO,KAGX,MAAMA,EAAS,OAAU+M,KAAKjK,EAAMtB,MAAM,EAAG,KAAK+L,WAGlD,GAFAzK,EAAQA,EAAMtB,MAAM,IAEhBxB,EAAS8C,EAAM9C,OACf,OAAO,KAEX,MAAMuB,EAAO,eAAauB,EAAMtB,MAAM,EAAGxB,IAEnCgmC,QAAarhC,KAAKia,YAAYrd,GACpC,OAAIykC,GAAQvtB,EACD,KAEJlX,KAGf,UAAUmqC,GACN,OAAO,GAAU/mC,UAAM,OAAQ,GAAQ,YACnC,IAAIgb,EAAW,KACf,GAAI,eAAY+rB,GAAgB,CAE5B,MAAMjzB,EAAU9T,KAAKsgC,UAAUxsB,QAAQizB,GACjCF,EAAc/yB,EAAQ3H,UAAU,GAAGmI,cAAgB,gBACnDwyB,QAAwB9mC,KAAK2mC,aAAaE,GAChD,IAAKC,EACD,OAAO,KAEX9rB,EAAW,IAAI,GAAShb,KAAM8mC,EAAiB,IAAKhzB,QAKpD,GADAkH,QAAiBhb,KAAK4mC,YAAYG,IAC7B/rB,EACD,OAAO,KAGf,MAAMgmB,QAAehmB,EAASgsB,YAC9B,OAAc,MAAVhG,EACO,KAEJA,EAAOhN,OAGtB,QAAQze,EAAQ5G,GACZ,OAAO,GAAO/S,WAAW2Z,EAAS,mBAAoB,OAAO1Z,OAAOorC,gBAAiB,CAAElrC,UAAWwZ,IAEtG,YAAYqH,GACR5c,KAAKikC,QAAWjkC,KAAKiiC,QAAQxuB,OAAQgE,GAAMA,EAAEyvB,YAAY7rC,OAAS,EAEtE,WAAWuhB,GACP5c,KAAKikC,QAAWjkC,KAAKiiC,QAAQxuB,OAAQgE,GAAMA,EAAEyvB,YAAY7rC,OAAS,EAEtE,kBAAkBkd,EAAWC,EAAUwF,GACnC,MAAMpB,EAAQ,IAAI,GAAM,GAAYrE,GAAYC,EAAUwF,GAG1D,OAFAhe,KAAKiiC,QAAQjkC,KAAK4e,GAClB5c,KAAKmnC,YAAYvqB,GACV5c,KAEX,GAAGuY,EAAWC,GACV,OAAOxY,KAAKwgB,kBAAkBjI,EAAWC,GAAU,GAEvD,KAAKD,EAAWC,GACZ,OAAOxY,KAAKwgB,kBAAkBjI,EAAWC,GAAU,GAEvD,KAAKD,KAAchC,GACf,IAAIhb,GAAS,EACT6rC,EAAU,GACVC,EAAW,GAAY9uB,GAgB3B,OAfAvY,KAAKiiC,QAAUjiC,KAAKiiC,QAAQxuB,OAAQmJ,GAC5BA,EAAMkB,MAAQupB,IAGlBjpB,WAAW,KACPxB,EAAMpE,SAASX,MAAM7X,KAAMuW,IAC5B,GACHhb,GAAS,GACLqhB,EAAMoB,OACNopB,EAAQppC,KAAK4e,IACN,KAIfwqB,EAAQz8B,QAASiS,IAAY5c,KAAKsnC,WAAW1qB,KACtCrhB,EAEX,cAAcgd,GACV,IAAKA,EACD,OAAOvY,KAAKiiC,QAAQ5mC,OAExB,IAAIgsC,EAAW,GAAY9uB,GAC3B,OAAOvY,KAAKiiC,QAAQxuB,OAAQmJ,GAChBA,EAAMkB,MAAQupB,GACvBhsC,OAEP,UAAUkd,GACN,GAAiB,MAAbA,EACA,OAAOvY,KAAKiiC,QAAQ53B,IAAKuS,GAAUA,EAAMpE,UAE7C,IAAI6uB,EAAW,GAAY9uB,GAC3B,OAAOvY,KAAKiiC,QACPxuB,OAAQmJ,GAAWA,EAAMkB,MAAQupB,GACjCh9B,IAAKuS,GAAUA,EAAMpE,UAE9B,IAAID,EAAWC,GACX,GAAgB,MAAZA,EACA,OAAOxY,KAAK2gB,mBAAmBpI,GAEnC,MAAM6uB,EAAU,GAChB,IAAIphB,GAAQ,EACRqhB,EAAW,GAAY9uB,GAa3B,OAZAvY,KAAKiiC,QAAUjiC,KAAKiiC,QAAQxuB,OAAQmJ,GAC5BA,EAAMkB,MAAQupB,GAAYzqB,EAAMpE,UAAYA,MAG5CwN,IAGJA,GAAQ,EACRohB,EAAQppC,KAAK4e,IACN,KAEXwqB,EAAQz8B,QAASiS,IAAY5c,KAAKsnC,WAAW1qB,KACtC5c,KAEX,mBAAmBuY,GACf,IAAI6uB,EAAU,GACd,GAAiB,MAAb7uB,EACA6uB,EAAUpnC,KAAKiiC,QACfjiC,KAAKiiC,QAAU,OAEd,CACD,MAAMoF,EAAW,GAAY9uB,GAC7BvY,KAAKiiC,QAAUjiC,KAAKiiC,QAAQxuB,OAAQmJ,GAC5BA,EAAMkB,MAAQupB,IAGlBD,EAAQppC,KAAK4e,IACN,IAIf,OADAwqB,EAAQz8B,QAASiS,IAAY5c,KAAKsnC,WAAW1qB,KACtC5c,MCvqDf,IAAI,GAAwC,SAAU8W,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMhb,GAAS,OAAOA,aAAiB8a,EAAI9a,EAAQ,IAAI8a,GAAE,SAAUG,GAAWA,EAAQjb,MAC/F,OAAO,IAAK8a,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAUpb,GAAS,IAAMqb,EAAKN,EAAUO,KAAKtb,IAAW,MAAOub,GAAKJ,EAAOI,IACpF,SAASC,EAASxb,GAAS,IAAMqb,EAAKN,EAAU,SAAS/a,IAAW,MAAOub,GAAKJ,EAAOI,IACvF,SAASF,EAAKhc,GAAUA,EAAOoc,KAAOR,EAAQ5b,EAAOW,OAASgb,EAAM3b,EAAOW,OAAO0b,KAAKN,EAAWI,GAClGH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,YAatE,MAAM,GAAS,IAAI,OAAO,IAEpB+vB,GAAW,CAAC,OAAQ,eAC1B,SAASC,GAAWjyB,EAAQva,EAAO2T,GAG/B,GAAe,SAAX4G,GAAqBva,EAAMsQ,OAAS,OAAOzP,OAAO2+B,aAAc,CAChE,MAAM/iB,EAAIzc,EAAMA,MAChB,GAAIyc,GAAKA,EAAE7P,QAAQe,MAAM,aAAe,eAAY8O,EAAE1U,MAClD,OAAO0U,EAAE1U,KAEb,GAAOnH,WAAW,wCAAyC,OAAOC,OAAOyZ,eAAgB,CACrFta,QAAO+H,KAAM,OAGrB,IAAI6E,EAAU5M,EAAM4M,QAChB5M,EAAMsQ,OAAS,OAAOzP,OAAO2+B,cAAgBx/B,EAAMA,OAA0C,kBAAzBA,EAAMA,MAAa,QACvF4M,EAAU5M,EAAMA,MAAM4M,QAEO,kBAAhB5M,EAAU,KACvB4M,EAAU5M,EAAMu9B,KAEqB,kBAAxBv9B,EAAkB,eAC/B4M,EAAU5M,EAAMysC,cAEpB7/B,GAAWA,GAAW,IAAI0M,cAC1B,MAAMgF,EAAc3K,EAAO2K,aAAe3K,EAAOw3B,kBA8BjD,MA5BIv+B,EAAQe,MAAM,kDACd,GAAO/M,WAAW,oDAAqD,OAAOC,OAAOgd,mBAAoB,CACrG7d,QAAOua,SAAQ+D,gBAInB1R,EAAQe,MAAM,kBACd,GAAO/M,WAAW,8BAA+B,OAAOC,OAAOid,cAAe,CAC1E9d,QAAOua,SAAQ+D,gBAInB1R,EAAQe,MAAM,wCACd,GAAO/M,WAAW,0BAA2B,OAAOC,OAAOkd,wBAAyB,CAChF/d,QAAOua,SAAQ+D,gBAInB1R,EAAQe,MAAM,0BACd,GAAO/M,WAAW,gDAAiD,OAAOC,OAAOC,sBAAuB,CACpGd,QAAOua,SAAQ+D,gBAGnBiuB,GAASj6B,QAAQiI,IAAW,GAAK3N,EAAQe,MAAM,iFAC/C,GAAO/M,WAAW,4EAA6E,OAAOC,OAAO2e,wBAAyB,CAClIxf,QAAOua,SAAQ+D,gBAGjBte,EAEV,SAAS,GAAMi/B,GACX,OAAO,IAAI7iB,SAAQ,SAAUD,GACzBiH,WAAWjH,EAAS8iB,MAG5B,SAASyN,GAAUC,GACf,GAAIA,EAAQ3sC,MAAO,CAEf,MAAMA,EAAQ,IAAID,MAAM4sC,EAAQ3sC,MAAM4M,SAGtC,MAFA5M,EAAMsQ,KAAOq8B,EAAQ3sC,MAAMsQ,KAC3BtQ,EAAM+H,KAAO4kC,EAAQ3sC,MAAM+H,KACrB/H,EAEV,OAAO2sC,EAAQpsC,OAEnB,SAASqsC,GAAa1rC,GAClB,OAAIA,EACOA,EAAMoY,cAEVpY,EAEX,MAAM,GAAoB,GACnB,MAAM,WAAsB,GAC/B,YAAYiT,EAAkB+J,EAAU2uB,GAGpC,GAFA,GAAOp1B,oBAAqB,IAC5BpJ,QACI8F,IAAqB,GACrB,MAAM,IAAIpU,MAAM,8EAEpB,eAAeiF,KAAM,WAAYkZ,GACX,MAAlB2uB,IACAA,EAAiB,GAEW,kBAArB,GACP,eAAe7nC,KAAM,WAAYA,KAAKkZ,SAASonB,UAAUxsB,QAAQ+zB,IACjE,eAAe7nC,KAAM,SAAU,OAEE,kBAArB,GACZ,eAAeA,KAAM,SAAU6nC,GAC/B,eAAe7nC,KAAM,WAAY,OAGjC,GAAO1E,mBAAmB,2BAA4B,iBAAkBusC,GAGhF,QAAQ3uB,GACJ,OAAO,GAAOtd,WAAW,0CAA2C,OAAOC,OAAOC,sBAAuB,CACrGC,UAAW,YAGnB,mBACI,OAAO,IAAI+rC,GAAuB,GAAmB9nC,KAAKkZ,SAAUlZ,KAAK+nC,UAAY/nC,KAAKgoC,QAE9F,aACI,OAAIhoC,KAAK+nC,SACE3wB,QAAQD,QAAQnX,KAAK+nC,UAEzB/nC,KAAKkZ,SAAS+uB,KAAK,eAAgB,IAAIrwB,KAAMswB,IAC5CA,EAAS7sC,QAAU2E,KAAKgoC,QACxB,GAAOpsC,WAAW,oBAAsBoE,KAAKgoC,OAAQ,OAAOnsC,OAAOC,sBAAuB,CACtFC,UAAW,eAGZiE,KAAKkZ,SAASonB,UAAUxsB,QAAQo0B,EAASloC,KAAKgoC,WAG7D,yBAAyB1uB,GACrBA,EAAc,eAAYA,GAC1B,MAAM6uB,EAAcnoC,KAAKoZ,aAAaxB,KAAM9D,IACpCA,IACAA,EAAUA,EAAQQ,eAEfR,IAKX,GAA4B,MAAxBwF,EAAYiB,SAAkB,CAC9B,MAAM6tB,EAAW,eAAY9uB,GAC7B8uB,EAAShgC,KAAO+/B,EAChB7uB,EAAYiB,SAAWva,KAAKkZ,SAASM,YAAY4uB,GAcrD,OAZsB,MAAlB9uB,EAAYa,KACZb,EAAYa,GAAK/C,QAAQD,QAAQmC,EAAYa,IAAIvC,KAAMuC,GAAO,GAAUna,UAAM,OAAQ,GAAQ,YAC1F,GAAU,MAANma,EACA,OAAO,KAEX,MAAMrG,QAAgB9T,KAAKkZ,SAASe,YAAYE,GAIhD,OAHe,MAAXrG,GACA,GAAOxY,mBAAmB,qCAAsC,QAAS6e,GAEtErG,OAGR,eAAkB,CACrBwC,GAAI,eAAkBgD,GACtB+uB,OAAQF,IACTvwB,KAAK,EAAGtB,KAAI+xB,aACI,MAAX/xB,EAAGlO,KACCkO,EAAGlO,KAAKkM,gBAAkB+zB,GAC1B,GAAO/sC,mBAAmB,wBAAyB,cAAege,GAItEhD,EAAGlO,KAAOigC,EAEd,MAAMjC,EAAQpmC,KAAKkZ,SAAS1E,YAAY8zB,mBAAmBhyB,EAAI,CAAElO,MAAM,IACvE,OAAOpI,KAAKkZ,SAAS+uB,KAAK,sBAAuB,CAAC7B,IAAQxuB,KAAMvB,GACrDA,EACPrb,GACOwsC,GAAW,kBAAmBxsC,EAAOorC,MAIxD,gBAAgB9sB,GACZ,OAAO,GAAO1d,WAAW,sCAAuC,OAAOC,OAAOC,sBAAuB,CACjGC,UAAW,oBAGnB,gBAAgBud,GACZ,OAAO,GAAUtZ,UAAM,OAAQ,GAAQ,YAEnC,MAAM68B,QAAoB78B,KAAKkZ,SAASyqB,wBAAwB,IAAM,EAAI3jC,KAAKkZ,SAAS0qB,iBAElFvtB,QAAarW,KAAKuoC,yBAAyBjvB,GACjD,IAII,aAAa2iB,GAAK,IAAM,GAAUj8B,UAAM,OAAQ,GAAQ,YACpD,MAAMsW,QAAWtW,KAAKkZ,SAASgE,eAAe7G,GAC9C,GAAW,OAAPC,EAGJ,OAAOtW,KAAKkZ,SAAS0sB,iBAAiBtvB,EAAID,EAAMwmB,MAChD,CAAER,SAAUr8B,KAAKkZ,WAEzB,MAAOle,GAEH,MADAA,EAAMmiB,gBAAkB9G,EAClBrb,MAIlB,YAAY4M,GACR,OAAO,GAAU5H,UAAM,OAAQ,GAAQ,YACnC,MAAM+C,EAA8B,kBAAd,EAA0B,eAAY6E,GAAWA,EACjEkM,QAAgB9T,KAAKoZ,aAC3B,aAAapZ,KAAKkZ,SAAS+uB,KAAK,gBAAiB,CAAC,eAAQllC,GAAO+Q,EAAQQ,mBAGjF,mBAAmB1M,GACf,OAAO,GAAU5H,UAAM,OAAQ,GAAQ,YACnC,MAAM+C,EAA8B,kBAAd,EAA0B,eAAY6E,GAAWA,EACjEkM,QAAgB9T,KAAKoZ,aAE3B,aAAapZ,KAAKkZ,SAAS+uB,KAAK,WAAY,CAACn0B,EAAQQ,cAAe,eAAQvR,QAGpF,eAAe8X,EAAQ/N,EAAO5Q,GAC1B,OAAO,GAAU8D,UAAM,OAAQ,GAAQ,YAEnC,MAAM0yB,QAAkB,GAAkBC,aAAa9X,EAAQ/N,EAAO5Q,EAAQU,GACnEoD,KAAKkZ,SAASe,YAAYrd,IAE/BkX,QAAgB9T,KAAKoZ,aAC3B,aAAapZ,KAAKkZ,SAAS+uB,KAAK,uBAAwB,CACpDn0B,EAAQQ,cACR5E,KAAKE,UAAU,GAAkB44B,WAAW9V,EAAU7X,OAAQ/N,EAAO4lB,EAAUx2B,aAI3F,OAAO+sB,GACH,OAAO,GAAUjpB,UAAM,OAAQ,GAAQ,YACnC,MAAMkZ,EAAWlZ,KAAKkZ,SAChBpF,QAAgB9T,KAAKoZ,aAC3B,OAAOF,EAAS+uB,KAAK,yBAA0B,CAACn0B,EAAQQ,cAAe2U,EAAU,WAI7F,MAAM6e,WAA+B,GACjC,gBAAgBxuB,GACZ,OAAOtZ,KAAKuoC,yBAAyBjvB,GAAa1B,KAAMvB,IAC7C,CACHA,KAAMA,EACNiE,MAAO,KACPC,SAAU,KACVvC,SAAU,KACVjV,KAAM,KACN7G,MAAO,KACP6d,QAAS,KACT0C,cAAe,EACfrU,KAAM,KACNmU,KAAOE,GAA2Bzc,KAAKkZ,SAASqsB,mBAAmBlvB,EAAMoG,OAKzF,MAAM,GAAyB,CAC3B1C,SAAS,EAAMhX,MAAM,EAAMwX,UAAU,EAAMvC,UAAU,EAAMsC,OAAO,EAAMH,IAAI,EAAMje,OAAO,EACzFuL,MAAM,EAAMqT,YAAY,EACxB1C,cAAc,EAAMC,sBAAsB,GAEvC,MAAM,WAAwB,GACjC,YAAY2b,EAAKna,GACb,GAAOpH,oBAAqB,IAC5B,IAAIg2B,EAAiB5uB,EAEC,MAAlB4uB,IACAA,EAAiB,IAAIrxB,QAAQ,CAACD,EAASE,KACnC+G,WAAW,KACPpe,KAAKqiC,gBAAgBzqB,KAAMiC,IACvB1C,EAAQ0C,IACR7e,IACAqc,EAAOrc,MAEZ,MAGXqO,MAAMo/B,GAEDzU,IACDA,EAAM,eAAUh0B,KAAKwU,YAAa,aAA5B,IAEW,kBAAV,EACP,eAAexU,KAAM,aAAcC,OAAO2L,OAAO,CAC7CooB,IAAKA,KAIT,eAAeh0B,KAAM,aAAcC,OAAO2L,OAAO,eAAYooB,KAEjEh0B,KAAK0oC,QAAU,GAEnB,aAII,OAH4B,MAAxB1oC,KAAK2oC,kBACL3oC,KAAK2oC,gBAAkB,IAEpB3oC,KAAK2oC,gBAEhB,oBACI,MAAO,wBAEX,gBAQI,OAPK3oC,KAAK4oC,OAAO,mBACb5oC,KAAK4oC,OAAO,iBAAmB5oC,KAAK6oC,yBAEpCzqB,WAAW,KACPpe,KAAK4oC,OAAO,iBAAmB,MAChC,IAEA5oC,KAAK4oC,OAAO,iBAEvB,yBACI,OAAO,GAAU5oC,UAAM,OAAQ,GAAQ,kBAC7B,GAAM,GACZ,IAAI+Z,EAAU,KACd,IACIA,QAAgB/Z,KAAKioC,KAAK,cAAe,IAE7C,MAAOjtC,GACH,IACI+e,QAAgB/Z,KAAKioC,KAAK,cAAe,IAE7C,MAAOjtC,KAEX,GAAe,MAAX+e,EAAiB,CACjB,MAAMD,EAAa,eAAU9Z,KAAKwU,YAAa,cAC/C,IACI,OAAOsF,EAAW,OAAU1R,KAAK2R,GAASnR,YAE9C,MAAO5N,GACH,OAAO,GAAOY,WAAW,2BAA4B,OAAOC,OAAOknC,cAAe,CAC9EhpB,QAASA,EACT6C,MAAO,iBACP8e,YAAa1gC,KAIzB,OAAO,GAAOY,WAAW,2BAA4B,OAAOC,OAAOknC,cAAe,CAC9EnmB,MAAO,iBAInB,UAAUirB,GACN,OAAO,IAAI,GAAc,GAAmB7nC,KAAM6nC,GAEtD,mBAAmBA,GACf,OAAO7nC,KAAK8oC,UAAUjB,GAAgBkB,mBAE1C,eACI,OAAO/oC,KAAKioC,KAAK,eAAgB,IAAIrwB,KAAMswB,GAChCA,EAAS79B,IAAKpJ,GAAMjB,KAAKsgC,UAAUxsB,QAAQ7S,KAG1D,KAAKsU,EAAQ5G,GACT,MAAM0pB,EAAU,CACZ9iB,OAAQA,EACR5G,OAAQA,EACR8hB,GAAKzwB,KAAK0oC,UACVM,QAAS,OAEbhpC,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,UACR5Q,QAAS,eAASA,GAClBnf,SAAUlZ,OAId,MAAM04B,EAAS,CAAC,cAAe,mBAAmBprB,QAAQiI,IAAW,EACrE,GAAImjB,GAAS14B,KAAK4oC,OAAOrzB,GACrB,OAAOvV,KAAK4oC,OAAOrzB,GAEvB,MAAMha,EAASsgC,GAAU77B,KAAKy5B,WAAY/pB,KAAKE,UAAUyoB,GAAUqP,IAAW9vB,KAAMrc,IAChFyE,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,WACR5Q,QAASA,EACTS,SAAUv9B,EACV2d,SAAUlZ,OAEPzE,GACPP,IAOA,MANAgF,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,WACRjuC,MAAOA,EACPq9B,QAASA,EACTnf,SAAUlZ,OAERhF,IASV,OANI09B,IACA14B,KAAK4oC,OAAOrzB,GAAUha,EACtB6iB,WAAW,KACPpe,KAAK4oC,OAAOrzB,GAAU,MACvB,IAEAha,EAEX,eAAega,EAAQ5G,GACnB,OAAQ4G,GACJ,IAAK,iBACD,MAAO,CAAC,kBAAmB,IAC/B,IAAK,cACD,MAAO,CAAC,eAAgB,IAC5B,IAAK,aACD,MAAO,CAAC,iBAAkB,CAACqyB,GAAaj5B,EAAOmF,SAAUnF,EAAOqK,WACpE,IAAK,sBACD,MAAO,CAAC,0BAA2B,CAAC4uB,GAAaj5B,EAAOmF,SAAUnF,EAAOqK,WAC7E,IAAK,UACD,MAAO,CAAC,cAAe,CAAC4uB,GAAaj5B,EAAOmF,SAAUnF,EAAOqK,WACjE,IAAK,eACD,MAAO,CAAC,mBAAoB,CAAC4uB,GAAaj5B,EAAOmF,SAAUnF,EAAOo3B,SAAUp3B,EAAOqK,WACvF,IAAK,kBACD,MAAO,CAAC,yBAA0B,CAACrK,EAAOw3B,oBAC9C,IAAK,WACD,OAAIx3B,EAAOqK,SACA,CAAC,uBAAwB,CAACrK,EAAOqK,WAAYrK,EAAO43B,sBAEtD53B,EAAOsO,UACL,CAAC,qBAAsB,CAACtO,EAAOsO,YAAatO,EAAO43B,sBAEvD,KACX,IAAK,iBACD,MAAO,CAAC,2BAA4B,CAAC53B,EAAOwO,kBAChD,IAAK,wBACD,MAAO,CAAC,4BAA6B,CAACxO,EAAOwO,kBACjD,IAAK,OAAQ,CACT,MAAMmrB,EAAqB,eAAUtoC,KAAKwU,YAAa,sBACvD,MAAO,CAAC,WAAY,CAAC8zB,EAAmB35B,EAAO2K,YAAa,CAAElR,MAAM,IAASuG,EAAOqK,WAExF,IAAK,cAAe,CAChB,MAAMsvB,EAAqB,eAAUtoC,KAAKwU,YAAa,sBACvD,MAAO,CAAC,kBAAmB,CAAC8zB,EAAmB35B,EAAO2K,YAAa,CAAElR,MAAM,MAE/E,IAAK,UAID,OAHIuG,EAAO8E,QAAmC,MAAzB9E,EAAO8E,OAAOK,UAC/BnF,EAAO8E,OAAOK,QAAU8zB,GAAaj5B,EAAO8E,OAAOK,UAEhD,CAAC,cAAe,CAACnF,EAAO8E,SACnC,QACI,MAER,OAAO,KAEX,QAAQ8B,EAAQ5G,GACZ,OAAO,GAAU3O,UAAM,OAAQ,GAAQ,YAGnC,GAAe,SAAXuV,GAAgC,gBAAXA,EAA0B,CAC/C,MAAMe,EAAK3H,EAAO2K,YAClB,GAAIhD,GAAiB,MAAXA,EAAG7O,MAAgB,OAAUW,KAAKkO,EAAG7O,MAAMuE,UAE1B,MAAnBsK,EAAG8B,cAAmD,MAA3B9B,EAAG+B,qBAA8B,CAC5D,MAAMgC,QAAgBra,KAAKga,aACC,MAAxBK,EAAQjC,cAAwD,MAAhCiC,EAAQhC,uBAExC1J,EAAS,eAAYA,GACrBA,EAAO2K,YAAc,eAAYhD,UAC1B3H,EAAO2K,YAAY7R,OAK1C,MAAM8O,EAAOvW,KAAKkpC,eAAe3zB,EAAQ5G,GAC7B,MAAR4H,GACA,GAAO3a,WAAW2Z,EAAS,mBAAoB,OAAO1Z,OAAOorC,gBAAiB,CAAElrC,UAAWwZ,IAE/F,IACI,aAAavV,KAAKioC,KAAK1xB,EAAK,GAAIA,EAAK,IAEzC,MAAOvb,GACH,OAAOwsC,GAAWjyB,EAAQva,EAAO2T,OAI7C,YAAYiO,GACU,YAAdA,EAAMkB,KACN9d,KAAKmpC,gBAET9/B,MAAM89B,YAAYvqB,GAEtB,gBACI,GAA2B,MAAvB5c,KAAKopC,eACL,OAEJ,MAAMC,EAAOrpC,KACPspC,EAAgBtpC,KAAKioC,KAAK,kCAAmC,IACnEjoC,KAAKopC,eAAiBE,EACtBA,EAAc1xB,MAAK,SAAU2xB,GACzB,SAAStN,IACLoN,EAAKpB,KAAK,uBAAwB,CAACsB,IAAW3xB,MAAK,SAAU4xB,GACzD,GAAIH,EAAKD,gBAAkBE,EACvB,OAAO,KAEX,IAAIG,EAAMryB,QAAQD,UAWlB,OAVAqyB,EAAO7+B,SAAQ,SAAU0L,GAErBgzB,EAAKnH,SAAS,KAAO7rB,EAAK/B,eAAiB,UAC3Cm1B,EAAMA,EAAI7xB,MAAK,WACX,OAAOyxB,EAAKnsB,eAAe7G,GAAMuB,MAAK,SAAUtB,GAE5C,OADA+yB,EAAKzpB,KAAK,UAAWtJ,GACd,cAIZmzB,EAAI7xB,MAAK,WACZ,OAAO,GAAM,WAElBA,MAAK,WACJ,GAAIyxB,EAAKD,gBAAkBE,EAK3B,OADAlrB,YAAW,WAAc6d,MAAW,GAC7B,KAJHoN,EAAKpB,KAAK,sBAAuB,CAACsB,OAKvCpxB,MAAOnd,OAGd,OADAihC,IACOsN,KACRpxB,MAAOnd,OAEd,WAAW4hB,GACW,YAAdA,EAAMkB,KAAuD,IAAlC9d,KAAKke,cAAc,aAC9Cle,KAAKopC,eAAiB,MAE1B//B,MAAMi+B,WAAW1qB,GAWrB,0BAA0BtD,EAAaowB,GAEnC,MAAMC,EAAU,eAAY,IAC5B,GAAID,EACA,IAAK,MAAM3pC,KAAO2pC,EACVA,EAAW3pC,KACX4pC,EAAQ5pC,IAAO,GAI3B,eAAgBuZ,EAAaqwB,GAC7B,MAAMpuC,EAAS,GAqBf,MAnBA,CAAC,WAAY,WAAY,OAAQ,eAAgB,uBAAwB,QAAS,SAASoP,SAAQ,SAAU5K,GACzG,GAAwB,MAApBuZ,EAAYvZ,GACZ,OAEJ,MAAM7D,EAAQ,eAASod,EAAYvZ,IACvB,aAARA,IACAA,EAAM,OAEVxE,EAAOwE,GAAO7D,KAElB,CAAC,OAAQ,KAAM,QAAQyO,SAAQ,SAAU5K,GACb,MAApBuZ,EAAYvZ,KAGhBxE,EAAOwE,GAAO,eAAQuZ,EAAYvZ,QAElCuZ,EAAYwB,aACZvf,EAAO,cAAgB,4BAAc+d,EAAYwB,aAE9Cvf,GCvkBf,IAAIquC,GAAK,KACT,IAEI,GADAA,GAAKC,UACK,MAAND,GACA,MAAM,IAAI7uC,MAAM,iBAGxB,MAAOC,IACH,MAAMJ,EAAS,IAAI,OAAO,IAC1BgvC,GAAK,WACDhvC,EAAOgB,WAAW,+CAAgD,OAAOC,OAAOC,sBAAuB,CACnGC,UAAW,qBCbvB,IAAI,GAAwC,SAAU+a,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMhb,GAAS,OAAOA,aAAiB8a,EAAI9a,EAAQ,IAAI8a,GAAE,SAAUG,GAAWA,EAAQjb,MAC/F,OAAO,IAAK8a,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAUpb,GAAS,IAAMqb,EAAKN,EAAUO,KAAKtb,IAAW,MAAOub,GAAKJ,EAAOI,IACpF,SAASC,EAASxb,GAAS,IAAMqb,EAAKN,EAAU,SAAS/a,IAAW,MAAOub,GAAKJ,EAAOI,IACvF,SAASF,EAAKhc,GAAUA,EAAOoc,KAAOR,EAAQ5b,EAAOW,OAASgb,EAAM3b,EAAOW,OAAO0b,KAAKN,EAAWI,GAClGH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,YAStE,MAAM,GAAS,IAAI,OAAO,IAe1B,IAAIsyB,GAAS,EAGN,MAAM,WAA0B,GACnC,YAAY9V,EAAKna,GAEG,QAAZA,GACA,GAAOje,WAAW,uDAAwD,OAAOC,OAAOC,sBAAuB,CAC3GC,UAAW,gBAGnBsN,MAAM2qB,EAAKna,GACX7Z,KAAK2iC,kBAAoB,EACzB3iC,KAAK+pC,UAAW,EAChB,eAAe/pC,KAAM,aAAc,IAAI,GAAUA,KAAKy5B,WAAWzF,MACjE,eAAeh0B,KAAM,YAAa,IAClC,eAAeA,KAAM,QAAS,IAC9B,eAAeA,KAAM,UAAW,IAChC,eAAeA,KAAM,iBAAkBqJ,MAAMg5B,iBAE7CriC,KAAKgqC,WAAWC,OAAS,KACrBjqC,KAAK+pC,UAAW,EAChB9pC,OAAOkU,KAAKnU,KAAKkqC,WAAWv/B,QAAS8lB,IACjCzwB,KAAKgqC,WAAW/B,KAAKjoC,KAAKkqC,UAAUzZ,GAAIkX,YAGhD3nC,KAAKgqC,WAAWG,UAAaC,IACzB,MAAMrnC,EAAOqnC,EAAarnC,KACpBxH,EAASmU,KAAKC,MAAM5M,GAC1B,GAAiB,MAAbxH,EAAOk1B,GAAY,CACnB,MAAMA,EAAKryB,OAAO7C,EAAOk1B,IACnB4H,EAAUr4B,KAAKkqC,UAAUzZ,GAE/B,UADOzwB,KAAKkqC,UAAUzZ,QACA7mB,IAAlBrO,EAAOA,OACP88B,EAAQvR,SAAS,KAAMvrB,EAAOA,QAC9ByE,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,WACR5Q,QAAS3oB,KAAKC,MAAM0oB,EAAQsP,SAC5B7O,SAAUv9B,EAAOA,OACjB2d,SAAUlZ,WAGb,CACD,IAAIhF,EAAQ,KACRO,EAAOP,OACPA,EAAQ,IAAID,MAAMQ,EAAOP,MAAM4M,SAAW,iBAC1C,eAAe5M,EAAO,OAAQO,EAAOP,MAAMsQ,MAAQ,MACnD,eAAetQ,EAAO,WAAY+H,IAGlC/H,EAAQ,IAAID,MAAM,iBAEtBs9B,EAAQvR,SAAS9rB,OAAO4O,GACxB5J,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,WACRjuC,MAAOA,EACPq9B,QAAS3oB,KAAKC,MAAM0oB,EAAQsP,SAC5BzuB,SAAUlZ,aAIjB,GAAsB,qBAAlBzE,EAAOga,OAA+B,CAE3C,MAAM2N,EAAMljB,KAAKqqC,MAAM9uC,EAAOoT,OAAO27B,cACjCpnB,GAEAA,EAAIwW,YAAYn+B,EAAOoT,OAAOpT,aAIlCgW,QAAQ7V,KAAK,2BAMrB,MAAM6uC,EAAWhG,YAAY,KACzBvkC,KAAK4f,KAAK,SACX,KACC2qB,EAAS1E,OACT0E,EAAS1E,QAGjB,gBACI,OAAO7lC,KAAKwqC,eAEhB,sBACI,OAAO,EAEX,iBAAiB3N,GACb,GAAOjhC,WAAW,iDAAkD,OAAOC,OAAOC,sBAAuB,CACrGC,UAAW,oBAGnB,oBAAoBG,GAChB,GAAON,WAAW,mDAAoD,OAAOC,OAAOC,sBAAuB,CACvGC,UAAW,uBAGnB,OACI,OAAO,GAAUiE,UAAM,OAAQ,GAAQ,YACnC,OAAO,QAGf,YAAY9D,GACHA,GAGL,GAAON,WAAW,0CAA2C,OAAOC,OAAOC,sBAAuB,CAC9FC,UAAW,eAGnB,KAAKwZ,EAAQ5G,GACT,MAAM87B,EAAMX,KACZ,OAAO,IAAI1yB,QAAQ,CAACD,EAASE,KACzB,SAASyP,EAAS9rB,EAAOO,GACrB,OAAIP,EACOqc,EAAOrc,GAEXmc,EAAQ5b,GAEnB,MAAMosC,EAAUj4B,KAAKE,UAAU,CAC3B2F,OAAQA,EACR5G,OAAQA,EACR8hB,GAAIga,EACJzB,QAAS,QAEbhpC,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,UACR5Q,QAAS3oB,KAAKC,MAAMg4B,GACpBzuB,SAAUlZ,OAEdA,KAAKkqC,UAAU9rC,OAAOqsC,IAAQ,CAAE3jB,WAAU6gB,WACtC3nC,KAAK+pC,UACL/pC,KAAKgqC,WAAW/B,KAAKN,KAIjC,oBACI,MAAO,sBAEX,WAAW7pB,EAAKtQ,EAAOksB,GACnB,OAAO,GAAU15B,UAAM,OAAQ,GAAQ,YACnC,IAAI0qC,EAAe1qC,KAAK2qC,QAAQ7sB,GACZ,MAAhB4sB,IACAA,EAAetzB,QAAQ8C,IAAI1M,GAAOoK,KAAMpK,GAC7BxN,KAAKioC,KAAK,gBAAiBz6B,IAEtCxN,KAAK2qC,QAAQ7sB,GAAO4sB,GAExB,MAAME,QAAcF,EACpB1qC,KAAKqqC,MAAMO,GAAS,CAAE9sB,MAAK4b,kBAGnC,YAAY9c,GACR,OAAQA,EAAMnV,MACV,IAAK,QACDzH,KAAK6qC,WAAW,QAAS,CAAC,YAActvC,IACpC,MAAMshC,EAAc,OAAUz0B,KAAK7M,EAAOmhC,QAAQ9zB,WAClD5I,KAAKkiC,SAAS3gC,MAAQs7B,EACtB78B,KAAK4f,KAAK,QAASid,KAEvB,MACJ,IAAK,UACD78B,KAAK6qC,WAAW,UAAW,CAAC,0BAA4BtvC,IACpDyE,KAAK4f,KAAK,UAAWrkB,KAEzB,MACJ,IAAK,SACDyE,KAAK6qC,WAAWjuB,EAAMkB,IAAK,CAAC,OAAQ9d,KAAK0mC,WAAW9pB,EAAMnJ,SAAWlY,IAC3C,MAAlBA,EAAO2iC,UACP3iC,EAAO2iC,SAAU,GAErBl+B,KAAK4f,KAAKhD,EAAMnJ,OAAQzT,KAAKsgC,UAAUrC,UAAU1iC,MAErD,MACJ,IAAK,KAAM,CACP,MAAMuvC,EAAeluB,IACjB,MAAMvG,EAAOuG,EAAMvG,KACnBrW,KAAKod,sBAAsB/G,GAAMuB,KAAM8E,IAC9BA,GAGL1c,KAAK4f,KAAKvJ,EAAMqG,MAIxBouB,EAAYluB,GAKZ5c,KAAK6qC,WAAW,KAAM,CAAC,YAActvC,IACjCyE,KAAKiiC,QAAQxuB,OAAQgE,GAAkB,OAAXA,EAAEhQ,MAAgBkD,QAAQmgC,KAE1D,MAGJ,IAAK,QACL,IAAK,OACL,IAAK,WACL,IAAK,UACL,IAAK,QACD,MACJ,QACIv5B,QAAQC,IAAI,aAAcoL,GAC1B,OAGZ,WAAWA,GACP,IAAIkB,EAAMlB,EAAMkB,IAChB,GAAmB,OAAflB,EAAMnV,KAAe,CAErB,GAAIzH,KAAKiiC,QAAQxuB,OAAQgE,GAAkB,OAAXA,EAAEhQ,MAAgBpM,OAC9C,OAEJyiB,EAAM,UAEL,GAAI9d,KAAKke,cAActB,EAAMA,OAE9B,OAEJ,MAAMguB,EAAQ5qC,KAAK2qC,QAAQ7sB,GACtB8sB,WAGE5qC,KAAK2qC,QAAQ7sB,GACpB8sB,EAAMhzB,KAAMgzB,IACH5qC,KAAKqqC,MAAMO,YAGT5qC,KAAKqqC,MAAMO,GAClB5qC,KAAKioC,KAAK,kBAAmB,CAAC2C,QAGtC,UACI,OAAO,GAAU5qC,UAAM,OAAQ,GAAQ,YAE/BA,KAAKgqC,WAAWe,aAAe,GAAUC,mBACnC,IAAK5zB,QAASD,IAChBnX,KAAKgqC,WAAWC,OAAS,WACrB9yB,GAAQ,IAEZnX,KAAKgqC,WAAWiB,QAAU,WACtB9zB,GAAQ,OAMpBnX,KAAKgqC,WAAWkB,MAAM,SCxRlC,IAAI,GAAwC,SAAUp0B,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMhb,GAAS,OAAOA,aAAiB8a,EAAI9a,EAAQ,IAAI8a,GAAE,SAAUG,GAAWA,EAAQjb,MAC/F,OAAO,IAAK8a,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAUpb,GAAS,IAAMqb,EAAKN,EAAUO,KAAKtb,IAAW,MAAOub,GAAKJ,EAAOI,IACpF,SAASC,EAASxb,GAAS,IAAMqb,EAAKN,EAAU,SAAS/a,IAAW,MAAOub,GAAKJ,EAAOI,IACvF,SAASF,EAAKhc,GAAUA,EAAOoc,KAAOR,EAAQ5b,EAAOW,OAASgb,EAAM3b,EAAOW,OAAO0b,KAAKN,EAAWI,GAClGH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,YAMtE,MAAM,GAAS,IAAI,OAAO,IAanB,MAAM,WAA8B,GACvC,gBACI,MAAM2zB,EAASlrC,OAAOmrC,OAAO,KAAM,CAC/B/I,cAAe,CAAE12B,IAAK,IAAMtC,MAAMg5B,iBAEtC,OAAO,GAAUriC,UAAM,OAAQ,GAAQ,YACnC,IAAI6Z,EAAU7Z,KAAK6Z,QAanB,OAZe,MAAXA,IACAA,QAAgBsxB,EAAO9I,cAAcrlC,KAAKgD,MACrC6Z,GACD,GAAOje,WAAW,sBAAuB,OAAOC,OAAOinC,cAAe,IAGrD,MAAjB9iC,KAAK6iC,WAEL,eAAe7iC,KAAM,WAAY6Z,GACjC7Z,KAAK4f,KAAK,UAAW/F,EAAS,QAG/BA,MAIZ,MAAM,WAA2B,GACpC,YAAYA,EAASwxB,GACjB,GAAOtzB,yBAA0B,IAEjC8B,EAAU,0BAAsB,aAAtB,CAAoCA,GAC9CwxB,EAAS,0BAAsB,YAAtB,CAAmCA,GAC5C,MAAM5R,EAAa,0BAAsB,SAAtB,CAAgC5f,EAASwxB,GAC5DhiC,MAAMowB,EAAY5f,GACM,kBAAb,EACP,eAAe7Z,KAAM,SAAUqrC,GAEhB,MAAVA,GACLprC,OAAOkU,KAAKk3B,GAAQ1gC,QAAS5K,IACzB,eAAeC,KAAMD,EAAKsrC,EAAOtrC,MAI7C,gBACI,GAAOrE,KAAK,0DAEhB,sBACI,OAAO,EAEX,UAAUoY,GACN,OAAO,GAAOlY,WAAW,wCAAyC,OAAOC,OAAOC,sBAAuB,CAAEC,UAAW,cAExH,eACI,OAAOqb,QAAQD,QAAQ,IAG3B,iBAAiBk0B,GACb,OAAOA,EAKX,cAAcxxB,EAASwxB,GACnB,OAAO,GAAOzvC,WAAW,oDAAqD,OAAOC,OAAOorC,gBAAiB,CACzGlrC,UAAW,YCjFvB,MAAM,GAAS,IAAI,OAAO,IAMpBuvC,GAAgB,mCACf,MAAM,WAAiC,GAC1C,YAAYzxB,EAASwxB,GACjB,MAAMnyB,EAAW,IAAI,GAAgBW,EAASwxB,GACxCrX,EAAM9a,EAASugB,WAAWzF,IAAI/lB,QAAQ,SAAU,MACjDA,QAAQ,eAAgB,mBAC7B5E,MAAM2qB,EAAK9a,EAASW,SACpB,eAAe7Z,KAAM,SAAUkZ,EAASmyB,QAE5C,sBACI,OAAQrrC,KAAKqrC,SAAWC,IAGzB,MAAM,WAAwB,GACjC,4BAA4BzxB,EAASwxB,GACjC,OAAO,IAAI,GAAyBxxB,EAASwxB,GAEjD,iBAAiBA,GACb,OAAc,MAAVA,EACOC,IAEPD,GAA8B,kBAAb,GACjB,GAAO/vC,mBAAmB,iBAAkB,SAAU+vC,GAEnDA,GAEX,cAAcxxB,EAASwxB,GACnB,IAAIE,EAAO,KACX,OAAQ1xB,EAAQjd,MACZ,IAAK,YACD2uC,EAAO,gCACP,MACJ,IAAK,UACDA,EAAO,gCACP,MACJ,IAAK,UACDA,EAAO,gCACP,MACJ,IAAK,SACDA,EAAO,+BACP,MACJ,IAAK,QACDA,EAAO,8BACP,MACJ,IAAK,QACDA,EAAO,oCACP,MACJ,IAAK,WACDA,EAAO,mCACP,MACJ,IAAK,WACDA,EAAO,gCACP,MACJ,IAAK,mBACDA,EAAO,gCACP,MACJ,IAAK,WACDA,EAAO,gCACP,MACJ,IAAK,iBACDA,EAAO,8BACP,MACJ,QACI,GAAOjwC,mBAAmB,sBAAuB,UAAWkwC,UAAU,IAE9E,MAAO,CACHtR,WAAW,EACXlG,IAAM,WAAkBuX,EAAOF,EAC/BvR,iBAAkB,CAACsB,EAASpH,KACpBqX,IAAWC,IACXnM,KAEG/nB,QAAQD,SAAQ,KAInC,sBACI,OAAQnX,KAAKqrC,SAAWC,ICxFhC,IAAI,GAAwC,SAAUx0B,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMhb,GAAS,OAAOA,aAAiB8a,EAAI9a,EAAQ,IAAI8a,GAAE,SAAUG,GAAWA,EAAQjb,MAC/F,OAAO,IAAK8a,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAUpb,GAAS,IAAMqb,EAAKN,EAAUO,KAAKtb,IAAW,MAAOub,GAAKJ,EAAOI,IACpF,SAASC,EAASxb,GAAS,IAAMqb,EAAKN,EAAU,SAAS/a,IAAW,MAAOub,GAAKJ,EAAOI,IACvF,SAASF,EAAKhc,GAAUA,EAAOoc,KAAOR,EAAQ5b,EAAOW,OAASgb,EAAM3b,EAAOW,OAAO0b,KAAKN,EAAWI,GAClGH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,YAMtE,MAAM,GAAS,IAAI,OAAO,IACnB,MAAM,WAA2B,GACpC,iBAAiB6zB,GAIb,OAHc,MAAVA,GACA,GAAO/vC,mBAAmB,sCAAuC,SAAU+vC,GAExE,KAEX,cAAcxxB,EAASwxB,GACnB,IAAIE,EAAO,KACX,OAAQ1xB,EAAQjd,MACZ,IAAK,YACD2uC,EAAO,8BACP,MACJ,QACI,GAAOjwC,mBAAmB,sBAAuB,UAAWkwC,UAAU,IAE9E,OAAOD,EAEX,QAAQh2B,EAAQ5G,GACZ,MAAMw8B,EAASlrC,OAAOmrC,OAAO,KAAM,CAC/B9H,QAAS,CAAE33B,IAAK,IAAMtC,MAAMi6B,WAEhC,OAAO,GAAUtjC,UAAM,OAAQ,GAAQ,YAGnC,GAAe,mBAAXuV,EAA6B,CAC7B,MAAMhU,QAAc4pC,EAAO7H,QAAQtmC,KAAKgD,KAAM,WAAY,CAAEgZ,SAAU,WACtE,OAAOzX,EAAMm7B,OAEjB,OAAOyO,EAAO7H,QAAQtmC,KAAKgD,KAAMuV,EAAQ5G,OC1CrD,IAAI,GAAwC,SAAUmI,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMhb,GAAS,OAAOA,aAAiB8a,EAAI9a,EAAQ,IAAI8a,GAAE,SAAUG,GAAWA,EAAQjb,MAC/F,OAAO,IAAK8a,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAUpb,GAAS,IAAMqb,EAAKN,EAAUO,KAAKtb,IAAW,MAAOub,GAAKJ,EAAOI,IACpF,SAASC,EAASxb,GAAS,IAAMqb,EAAKN,EAAU,SAAS/a,IAAW,MAAOub,GAAKJ,EAAOI,IACvF,SAASF,EAAKhc,GAAUA,EAAOoc,KAAOR,EAAQ5b,EAAOW,OAASgb,EAAM3b,EAAOW,OAAO0b,KAAKN,EAAWI,GAClGH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,YAUtE,MAAM,GAAS,IAAI,OAAO,IAG1B,SAASi0B,GAAuBnyB,GAC5B,MAAM/d,EAAS,GACf,IAAK,IAAIwE,KAAOuZ,EAAa,CACzB,GAAwB,MAApBA,EAAYvZ,GACZ,SAEJ,IAAI7D,EAAQod,EAAYvZ,GACZ,SAARA,GAA4B,IAAV7D,IAQlBA,EAJA,CAAEuL,MAAM,EAAM8S,UAAU,EAAMvC,UAAU,EAAM0zB,aAAa,EAAMrzB,sBAAsB,EAAMiC,OAAO,EAAMpe,OAAO,GAAO6D,GAChH,eAAS,eAAQ7D,IAEZ,eAAR6D,EACG,IAAM,4BAAc7D,GAAOmO,IAAK5M,GAC7B,aAAaA,EAAIqW,0BAA0BrW,EAAIkuC,YAAYrtC,KAAK,aACxEA,KAAK,KAAO,IAGP,eAAQpC,GAEpBX,EAAOwE,GAAO7D,GAElB,OAAOX,EAEX,SAAS,GAAUA,GAEf,GAAqB,GAAjBA,EAAO29B,SAAmC,qBAAnB39B,EAAOqM,SAAqD,0BAAnBrM,EAAOqM,SACvE,OAAOrM,EAAOA,OAElB,GAAqB,GAAjBA,EAAO29B,QAAiC,MAAlB39B,EAAOqM,QAAiB,CAC9C,MAAM5M,EAAQ,IAAID,MAAM,oBAKxB,MAJAC,EAAMO,OAASmU,KAAKE,UAAUrU,IACzBA,EAAOA,QAAU,IAAI+Y,cAAchH,QAAQ,eAAiB,IAC7DtS,EAAM2gC,eAAgB,GAEpB3gC,EAEV,OAAOO,EAAOA,OAElB,SAASqwC,GAAcrwC,GAEnB,GAAIA,GAA2B,GAAjBA,EAAO29B,QAAiC,SAAlB39B,EAAOqM,UAAuBrM,EAAOA,QAAU,IAAI+Y,cAAchH,QAAQ,eAAiB,EAAG,CAC7H,MAAMtS,EAAQ,IAAID,MAAM,sBAGxB,MAFAC,EAAMO,OAASmU,KAAKE,UAAUrU,GAC9BP,EAAM2gC,eAAgB,EAChB3gC,EAEV,GAAsB,OAAlBO,EAAOytC,QAAkB,CAEzB,MAAMhuC,EAAQ,IAAID,MAAM,oBAExB,MADAC,EAAMO,OAASmU,KAAKE,UAAUrU,GACxBP,EAEV,GAAIO,EAAOP,MAAO,CAEd,MAAMA,EAAQ,IAAID,MAAMQ,EAAOP,MAAM4M,SAAW,iBAOhD,MANIrM,EAAOP,MAAMsQ,OACbtQ,EAAMsQ,KAAO/P,EAAOP,MAAMsQ,MAE1B/P,EAAOP,MAAM+H,OACb/H,EAAM+H,KAAOxH,EAAOP,MAAM+H,MAExB/H,EAEV,OAAOO,EAAOA,OAGlB,SAASswC,GAAY7yB,GACjB,GAAiB,YAAbA,EACA,MAAM,IAAIje,MAAM,yBAEpB,MAAiB,WAAbie,EACOA,EAEJ7c,SAAS6c,EAAS7M,UAAU,GAAI,IAE3C,MAAM,GAAgB,qCACtB,SAAS,GAAWoJ,EAAQva,EAAOse,GAG/B,GAAe,SAAX/D,GAAqBva,EAAMsQ,OAAS,OAAOzP,OAAO2+B,aAAc,CAChE,MAAM/iB,EAAIzc,EAAMA,MAEhB,GAAIyc,IAAMA,EAAE7P,QAAQe,MAAM,cAAgB8O,EAAE7P,QAAQe,MAAM,wBAAyB,CAE/E,IAAI5F,EAAO0U,EAAE1U,KAIb,GAHIA,IACAA,EAAO,KAAOA,EAAKkL,QAAQ,SAAU,KAErC,eAAYlL,GACZ,OAAOA,EAEX,GAAOnH,WAAW,wCAAyC,OAAOC,OAAOyZ,eAAgB,CACrFta,QAAO+H,KAAM,QAKzB,IAAI6E,EAAU5M,EAAM4M,QAoCpB,MAnCI5M,EAAMsQ,OAAS,OAAOzP,OAAO2+B,eACzBx/B,EAAMA,OAA0C,kBAAzBA,EAAMA,MAAa,QAC1C4M,EAAU5M,EAAMA,MAAM4M,QAEO,kBAAhB5M,EAAU,KACvB4M,EAAU5M,EAAMu9B,KAEqB,kBAAxBv9B,EAAkB,eAC/B4M,EAAU5M,EAAMysC,eAGxB7/B,GAAWA,GAAW,IAAI0M,cAEtB1M,EAAQe,MAAM,uBACd,GAAO/M,WAAW,oDAAqD,OAAOC,OAAOgd,mBAAoB,CACrG7d,QAAOua,SAAQ+D,gBAInB1R,EAAQe,MAAM,8EACd,GAAO/M,WAAW,8BAA+B,OAAOC,OAAOid,cAAe,CAC1E9d,QAAOua,SAAQ+D,gBAInB1R,EAAQe,MAAM,wCACd,GAAO/M,WAAW,0BAA2B,OAAOC,OAAOkd,wBAAyB,CAChF/d,QAAOua,SAAQ+D,gBAGnB1R,EAAQe,MAAM,4DACd,GAAO/M,WAAW,4EAA6E,OAAOC,OAAO2e,wBAAyB,CAClIxf,QAAOua,SAAQ+D,gBAGjBte,EAEH,MAAM,WAA0B,GACnC,YAAY6e,EAASwxB,GACjB,GAAO54B,oBAAqB,IAC5BpJ,MAAMwQ,GACN,eAAe7Z,KAAM,UAAWA,KAAK8rC,cACrC,eAAe9rC,KAAM,SAAUqrC,GAAU,IAE7C,aACI,OAAQrrC,KAAK6Z,QAAU7Z,KAAK6Z,QAAQjd,KAAO,WACvC,IAAK,YACD,MAAO,2BACX,IAAK,UACD,MAAO,mCACX,IAAK,UACD,MAAO,mCACX,IAAK,QACD,MAAO,iCACX,IAAK,SACD,MAAO,kCACX,SAEJ,OAAO,GAAOtB,mBAAmB,sBAAuB,UAAWsB,MAEvE,OAAOqH,EAAQ0K,GACX,MAAMo9B,EAAQ9rC,OAAOkU,KAAKxF,GAAQlD,OAAO,CAACC,EAAO3L,KAC7C,MAAM7D,EAAQyS,EAAO5O,GAIrB,OAHa,MAAT7D,IACAwP,GAAS,IAAI3L,KAAO7D,KAEjBwP,GACR,IACG2/B,EAAWrrC,KAAW,OAAI,WAAWA,KAAKqrC,OAAW,GAC3D,MAAO,GAAGrrC,KAAKgsC,sBAAsB/nC,IAAS8nC,IAAQV,IAE1D,aACI,OAAUrrC,KAAKgsC,QAAR,OAEX,YAAY/nC,EAAQ0K,GAGhB,OAFAA,EAAO1K,OAASA,EAChB0K,EAAOs9B,OAASjsC,KAAKqrC,OACd18B,EAEX,MAAM1K,EAAQ0K,EAAQu9B,GAClB,OAAO,GAAUlsC,UAAM,OAAQ,GAAQ,YACnC,MAAMg0B,EAAOkY,EAAOlsC,KAAKmsC,aAAensC,KAAKm4B,OAAOl0B,EAAQ0K,GACtDg5B,EAAWuE,EAAOlsC,KAAKosC,YAAYnoC,EAAQ0K,GAAU,KACrD09B,EAAuB,UAAXpoC,EAAsB2nC,GAAgB,GACxD5rC,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,UACR5Q,QAASrE,EACT9a,SAAUlZ,OAEd,MAAMy5B,EAAa,CACfzF,IAAKA,EACL+F,qBAAsB,IACtBD,iBAAkB,CAACsB,EAASpH,KACpBh0B,KAAKi/B,uBACLE,KAEG/nB,QAAQD,SAAQ,KAG/B,IAAIm1B,EAAa,KACb3E,IACAlO,EAAWnB,QAAU,CAAE,eAAgB,oDACvCgU,EAAarsC,OAAOkU,KAAKwzB,GAASt9B,IAAKtK,GAC5B,GAAGA,KAAO4nC,EAAQ5nC,MAC1BzB,KAAK,MAEZ,MAAM/C,QAAesgC,GAAUpC,EAAY6S,EAAYD,GAAYT,IAOnE,OANA5rC,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,WACR5Q,QAASrE,EACT8E,SAAU,eAASv9B,GACnB2d,SAAUlZ,OAEPzE,KAGf,gBACI,OAAO,GAAUyE,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAK6Z,WAGpB,QAAQtE,EAAQ5G,GACZ,MAAMw8B,EAASlrC,OAAOmrC,OAAO,KAAM,CAC/B9H,QAAS,CAAE33B,IAAK,IAAMtC,MAAMi6B,WAEhC,OAAO,GAAUtjC,UAAM,OAAQ,GAAQ,YACnC,OAAQuV,GACJ,IAAK,iBACD,OAAOvV,KAAK+4B,MAAM,QAAS,CAAEkQ,OAAQ,oBACzC,IAAK,cACD,OAAOjpC,KAAK+4B,MAAM,QAAS,CAAEkQ,OAAQ,iBACzC,IAAK,aAED,OAAOjpC,KAAK+4B,MAAM,UAAW,CACzBkQ,OAAQ,UACRn1B,QAASnF,EAAOmF,QAChBgK,IAAKnP,EAAOqK,WAEpB,IAAK,sBACD,OAAOhZ,KAAK+4B,MAAM,QAAS,CACvBkQ,OAAQ,0BACRn1B,QAASnF,EAAOmF,QAChBgK,IAAKnP,EAAOqK,WAEpB,IAAK,UACD,OAAOhZ,KAAK+4B,MAAM,QAAS,CACvBkQ,OAAQ,cACRn1B,QAASnF,EAAOmF,QAChBgK,IAAKnP,EAAOqK,WAEpB,IAAK,eACD,OAAOhZ,KAAK+4B,MAAM,QAAS,CACvBkQ,OAAQ,mBACRn1B,QAASnF,EAAOmF,QAChBiyB,SAAUp3B,EAAOo3B,SACjBjoB,IAAKnP,EAAOqK,WAEpB,IAAK,kBACD,OAAOhZ,KAAK+4B,MAAM,QAAS,CACvBkQ,OAAQ,yBACRvlC,IAAKiL,EAAOw3B,oBACb,GAAMhuB,MAAOnd,GACL,GAAW,kBAAmBA,EAAO2T,EAAOw3B,oBAE3D,IAAK,WACD,GAAIx3B,EAAOqK,SACP,OAAOhZ,KAAK+4B,MAAM,QAAS,CACvBkQ,OAAQ,uBACRnrB,IAAKnP,EAAOqK,SACZmlB,QAAUxvB,EAAO43B,oBAAsB,OAAS,UAGxD,MAAM,IAAIxrC,MAAM,yCACpB,IAAK,iBACD,OAAOiF,KAAK+4B,MAAM,QAAS,CACvBkQ,OAAQ,2BACRsD,OAAQ59B,EAAOwO,kBAEvB,IAAK,wBACD,OAAOnd,KAAK+4B,MAAM,QAAS,CACvBkQ,OAAQ,4BACRsD,OAAQ59B,EAAOwO,kBAEvB,IAAK,OAAQ,CACT,GAAwB,WAApBxO,EAAOqK,SACP,MAAM,IAAIje,MAAM,wDAEpB,MAAMyxC,EAAWf,GAAuB98B,EAAO2K,aAC/CkzB,EAASvoC,OAAS,QAClBuoC,EAASvD,OAAS,WAClB,IACI,aAAajpC,KAAK+4B,MAAM,QAASyT,GAAU,GAE/C,MAAOxxC,IACH,OAAO,GAAW,OAAQA,GAAO2T,EAAO2K,cAGhD,IAAK,cAAe,CAChB,MAAMkzB,EAAWf,GAAuB98B,EAAO2K,aAC/CkzB,EAASvoC,OAAS,QAClBuoC,EAASvD,OAAS,kBAClB,IACI,aAAajpC,KAAK+4B,MAAM,QAASyT,GAAU,GAE/C,MAAOxxC,IACH,OAAO,GAAW,cAAeA,GAAO2T,EAAO2K,cAGvD,IAAK,UAAW,CACZ,MAAM/C,EAAO,CAAE0yB,OAAQ,WAWvB,GAVIt6B,EAAO8E,OAAO6M,YACd/J,EAAK+J,UAAYurB,GAAYl9B,EAAO8E,OAAO6M,YAE3C3R,EAAO8E,OAAO2M,UACd7J,EAAK6J,QAAUyrB,GAAYl9B,EAAO8E,OAAO2M,UAEzCzR,EAAO8E,OAAOK,UACdyC,EAAKzC,QAAUnF,EAAO8E,OAAOK,SAG7BnF,EAAO8E,OAAOgC,QAAU9G,EAAO8E,OAAOgC,OAAOpa,OAAS,IAClDsT,EAAO8E,OAAOgC,OAAOpa,OAAS,GAC9B,GAAOO,WAAW,0BAA2B,OAAOC,OAAOC,sBAAuB,CAAE2Z,OAAQ9G,EAAO8E,OAAOgC,SAE1E,IAAhC9G,EAAO8E,OAAOgC,OAAOpa,QAAc,CACnC,MAAMoxC,EAAS99B,EAAO8E,OAAOgC,OAAO,GACZ,kBAAb,GAA2C,KAAlBg3B,EAAOpxC,QACvC,GAAOO,WAAW,2BAA4B,OAAOC,OAAOC,sBAAuB,CAAE2wC,OAAQA,IAEjGl2B,EAAKk2B,OAASA,EAGtB,MAAM9vB,QAAa3c,KAAK+4B,MAAM,OAAQxiB,GAEtC,IAAIm2B,EAAS,GAEb,IAAK,IAAIpwC,EAAI,EAAGA,EAAIqgB,EAAKthB,OAAQiB,IAAK,CAClC,MAAMkV,EAAMmL,EAAKrgB,GACjB,GAAqB,MAAjBkV,EAAIyL,UAAR,CAGA,GAA+B,MAA3ByvB,EAAOl7B,EAAIqrB,aAAsB,CACjC,MAAMt7B,QAAcvB,KAAKiY,SAASzG,EAAIqrB,aAClCt7B,IACAmrC,EAAOl7B,EAAIqrB,aAAet7B,EAAM8U,MAGxC7E,EAAIyL,UAAYyvB,EAAOl7B,EAAIqrB,cAE/B,OAAOlgB,EAEX,IAAK,gBACD,MAA0B,cAAtB3c,KAAK6Z,QAAQjd,KACN,EAEJmnB,kBAAkB/jB,KAAK+4B,MAAM,QAAS,CAAEkQ,OAAQ,cAAe0D,QAC1E,QACI,MAER,OAAOxB,EAAO7H,QAAQtmC,KAAKgD,KAAMuV,EAAQ5G,MAOjD,WAAW8P,EAAewmB,EAAY2H,GAClC,OAAO,GAAU5sC,UAAM,OAAQ,GAAQ,YACnC,MAAM2O,EAAS,CACXs6B,OAAQ,SACRn1B,cAAgB9T,KAAKia,YAAYwE,GACjCouB,WAA4B,MAAd5H,EAAsB,EAAIA,EACxC6H,SAAwB,MAAZF,EAAoB,SAAWA,EAC3CxmB,KAAM,OAEJ7qB,QAAeyE,KAAK+4B,MAAM,UAAWpqB,GAC3C,OAAOpT,EAAO8O,IAAKiM,IACf,CAAC,kBAAmB,MAAM3L,SAAQ,SAAU5K,GACzB,IAAXuW,EAAGvW,WACIuW,EAAGvW,MAGA,MAAduW,EAAG0mB,SAAyC,MAAtB1mB,EAAGgJ,kBACzBhJ,EAAG0mB,QAAU1mB,EAAGgJ,iBAEpB,MAAMrB,EAAOje,KAAKsgC,UAAUtC,oBAAoB1nB,GAIhD,OAHIA,EAAGy2B,YACH9uB,EAAK+S,UAAY70B,SAASma,EAAGy2B,YAE1B9uB,OAInB,sBACI,OAAQje,KAAKqrC,SAAW,IC9ZzB,SAAS2B,GAASjO,GACrBA,EAAQA,EAAMliC,QACd,IAAK,IAAIP,EAAIyiC,EAAM1jC,OAAS,EAAGiB,EAAI,EAAGA,IAAK,CACvC,MAAMqF,EAAIsH,KAAK4a,MAAM5a,KAAKknB,UAAY7zB,EAAI,IACpC2wC,EAAMlO,EAAMziC,GAClByiC,EAAMziC,GAAKyiC,EAAMp9B,GACjBo9B,EAAMp9B,GAAKsrC,EAEf,OAAOlO,ECRX,IAAI,GAAwC,SAAUjoB,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMhb,GAAS,OAAOA,aAAiB8a,EAAI9a,EAAQ,IAAI8a,GAAE,SAAUG,GAAWA,EAAQjb,MAC/F,OAAO,IAAK8a,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAUpb,GAAS,IAAMqb,EAAKN,EAAUO,KAAKtb,IAAW,MAAOub,GAAKJ,EAAOI,IACpF,SAASC,EAASxb,GAAS,IAAMqb,EAAKN,EAAU,SAAS/a,IAAW,MAAOub,GAAKJ,EAAOI,IACvF,SAASF,EAAKhc,GAAUA,EAAOoc,KAAOR,EAAQ5b,EAAOW,OAASgb,EAAM3b,EAAOW,OAAO0b,KAAKN,EAAWI,GAClGH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,YAatE,MAAM,GAAS,IAAI,OAAO,IAC1B,SAAS,KAAQ,OAAO,IAAKuZ,MAAQ0O,UAGrC,SAASyN,GAAc3Y,GACnB,IAAIh5B,EAAS,KACb,IAAK,IAAIe,EAAI,EAAGA,EAAIi4B,EAASl5B,OAAQiB,IAAK,CACtC,MAAMud,EAAU0a,EAASj4B,GAEzB,GAAe,MAAXud,EACA,OAAO,KAEPte,EAEMA,EAAOqB,OAASid,EAAQjd,MAAQrB,EAAOwe,UAAYF,EAAQE,UAC3Dxe,EAAO44B,aAAeta,EAAQsa,YAAqC,MAArB54B,EAAO44B,YAA4C,MAAtBta,EAAQsa,aACrF,GAAO74B,mBAAmB,oBAAqB,WAAYi5B,GAI/Dh5B,EAASse,EAGjB,OAAOte,EAEX,SAAS4xC,GAAOjjC,EAAQkjC,GACpBljC,EAASA,EAAOrN,QAAQupB,OACxB,MAAMinB,EAASpkC,KAAK4a,MAAM3Z,EAAO7O,OAAS,GAE1C,GAAI6O,EAAO7O,OAAS,EAChB,OAAO6O,EAAOmjC,GAGlB,MAAMpsC,EAAIiJ,EAAOmjC,EAAS,GAAIrqB,EAAI9Y,EAAOmjC,GACzC,OAAgB,MAAZD,GAAoBnkC,KAAK46B,IAAI5iC,EAAI+hB,GAAKoqB,EAC/B,MAEHnsC,EAAI+hB,GAAK,EAErB,SAASsqB,GAAUpxC,GACf,GAAc,OAAVA,EACA,MAAO,OAEN,GAAuB,kBAAZ,GAA2C,mBAAZ,EAC3C,OAAOwT,KAAKE,UAAU1T,GAErB,GAAuB,kBAAZ,EACZ,OAAOA,EAEN,GAAI,OAAUqxC,YAAYrxC,GAC3B,OAAOA,EAAM4V,WAEZ,GAAIhV,MAAMG,QAAQf,GACnB,OAAOwT,KAAKE,UAAU1T,EAAMmO,IAAK/N,GAAMgxC,GAAUhxC,KAEhD,GAAuB,kBAAZ,EAAsB,CAClC,MAAM6X,EAAOlU,OAAOkU,KAAKjY,GAEzB,OADAiY,EAAKiS,OACE,IAAMjS,EAAK9J,IAAKtK,IACnB,IAAItB,EAAIvC,EAAM6D,GAOd,OALItB,EADe,oBAAR,EACH,aAGA6uC,GAAU7uC,GAEXiR,KAAKE,UAAU7P,GAAO,IAAMtB,IACpCH,KAAK,KAAO,IAEnB,MAAM,IAAIvD,MAAM,8BAAgC,GAGpD,IAAIyyC,GAAU,EAEd,SAAS,GAAMlU,GACX,IAAI2B,EAAS,KACTH,EAAQ,KACRC,EAAU,IAAK3jB,QAASD,IACxB8jB,EAAS,WACDH,IACAI,aAAaJ,GACbA,EAAQ,MAEZ3jB,KAEJ2jB,EAAQ1c,WAAW6c,EAAQ3B,KAE/B,MAAM/c,EAAQvR,IACV+vB,EAAUA,EAAQnjB,KAAK5M,GAChB+vB,GAEX,SAAS0S,IACL,OAAO1S,EAEX,MAAO,CAAEE,SAAQwS,aAAYlxB,QAEjC,MAAMmxB,GAAgB,CAClB,OAAO7xC,OAAOyZ,eACd,OAAOzZ,OAAOgd,mBACd,OAAOhd,OAAOid,cACd,OAAOjd,OAAOkd,wBACd,OAAOld,OAAO2e,yBAEZmzB,GAAoB,CACtB,UACA,OACA,YACA,iBACA,SACA,eAGJ,SAASC,GAAkBC,EAAQ/c,GAC/B,MAAMv1B,EAAS,CACXuyC,OAAQD,EAAOC,QAiBnB,OAfA7tC,OAAOC,eAAe3E,EAAQ,WAAY,CAAEoQ,IAAK,IAAMkiC,EAAO30B,WAC1D20B,EAAOE,QACPxyC,EAAOwyC,MAAQF,EAAOE,OAEtBjd,IACAv1B,EAAO+9B,SAAYxI,EAAM+c,EAAOE,OAEhCF,EAAOl2B,OACHk2B,EAAO7yC,MACPO,EAAOP,MAAQ6yC,EAAO7yC,MAGtBO,EAAOA,OAASsyC,EAAOtyC,QAAU,MAGlCA,EAEX,SAASyyC,GAAgB/gB,EAAW4G,GAChC,OAAO,SAAUoa,GAEb,MAAMC,EAAQ,GACdD,EAAQtjC,QAAS7M,IACb,MAAM5B,EAAQ+wB,EAAUnvB,EAAEvC,QACrB2yC,EAAMhyC,KACPgyC,EAAMhyC,GAAS,CAAE4P,MAAO,EAAGvQ,OAAQuC,EAAEvC,SAEzC2yC,EAAMhyC,GAAO4P,UAGjB,MAAMqI,EAAOlU,OAAOkU,KAAK+5B,GACzB,IAAK,IAAI5xC,EAAI,EAAGA,EAAI6X,EAAK9Y,OAAQiB,IAAK,CAClC,MAAMmf,EAAQyyB,EAAM/5B,EAAK7X,IACzB,GAAImf,EAAM3P,OAAS+nB,EACf,OAAOpY,EAAMlgB,SAO7B,SAAS4yC,GAAej1B,EAAU3D,EAAQ5G,GACtC,IAAIse,EAAYqgB,GAChB,OAAQ/3B,GACJ,IAAK,iBAKD,OAAO,SAAU04B,GACb,MAAM/jC,EAAS+jC,EAAQ5jC,IAAKvM,GAAMA,EAAEvC,QAEpC,IAAIshC,EAAcsQ,GAAOc,EAAQ5jC,IAAKvM,GAAMA,EAAEvC,QAAS,GACvD,GAAmB,MAAfshC,EAYJ,OATAA,EAAc5zB,KAAKC,KAAK2zB,GAEpB3yB,EAAOoD,QAAQuvB,EAAc,IAAM,GACnCA,IAGAA,GAAe3jB,EAASk1B,sBACxBl1B,EAASk1B,oBAAsBvR,GAE5B3jB,EAASk1B,qBAExB,IAAK,cAID,OAAO,SAAUH,GACb,MAAM/jC,EAAS+jC,EAAQ5jC,IAAKvM,GAAMA,EAAEvC,QAEpC,OADA2O,EAAOkc,OACAlc,EAAOjB,KAAK4a,MAAM3Z,EAAO7O,OAAS,KAEjD,IAAK,gBAGD,OAAO,SAAU4yC,GACb,OAAOd,GAAOc,EAAQ5jC,IAAKvM,GAAMA,EAAEvC,UAG3C,IAAK,aACL,IAAK,sBACL,IAAK,UACL,IAAK,eACL,IAAK,OACL,IAAK,cACL,IAAK,UACD,MAEJ,IAAK,iBACL,IAAK,wBACD0xB,EAAY,SAAU3W,GAClB,OAAU,MAANA,EACO,MAEXA,EAAK,eAAYA,GACjBA,EAAGmG,eAAiB,EACb6wB,GAAUh3B,KAErB,MAEJ,IAAK,WAGG2W,EADAte,EAAO43B,oBACK,SAAUhlC,GAClB,OAAa,MAATA,EACO,MAEXA,EAAQ,eAAYA,GACpBA,EAAMu8B,aAAev8B,EAAMu8B,aAAazzB,IAAKiM,IACzCA,EAAK,eAAYA,GACjBA,EAAGmG,eAAiB,EACbnG,IAEJg3B,GAAU/rC,KAIT,SAAUA,GAClB,OAAa,MAATA,EACO,KAEJ+rC,GAAU/rC,IAGzB,MACJ,QACI,MAAM,IAAIxG,MAAM,mBAAqBwa,GAI7C,OAAOy4B,GAAgB/gB,EAAW/T,EAAS2a,QAI/C,SAASwa,GAAYR,EAAQhR,GACzB,OAAO,GAAU78B,UAAM,OAAQ,GAAQ,YACnC,MAAMkZ,EAAY20B,EAAe,SACjC,OAA6B,MAAxB30B,EAAS2jB,aAAuB3jB,EAAS2jB,aAAeA,IAAiC,IAAjBA,EAClE3jB,EAEJ+iB,GAAK,IACD,IAAI7kB,QAAQ,CAACD,EAASE,KACzB+G,YAAW,WAEP,OAAIlF,EAAS2jB,aAAeA,EACjB1lB,EAAQ+B,GAGf20B,EAAOnI,UACAvuB,EAAQ,MAGZA,OAAQvN,KAChB,KAER,CAAEyyB,SAAUnjB,OAGvB,SAASo1B,GAAUT,EAAQU,EAAoBh5B,EAAQ5G,GACnD,OAAO,GAAU3O,UAAM,OAAQ,GAAQ,YACnC,IAAIkZ,EAAW20B,EAAO30B,SACtB,OAAQ3D,GACJ,IAAK,iBACL,IAAK,cACD,OAAO2D,EAAS3D,KACpB,IAAK,gBACD,GAAI2D,EAASs1B,cACT,OAAOt1B,EAASs1B,gBAEpB,MACJ,IAAK,aACL,IAAK,sBACL,IAAK,UAID,OAHI7/B,EAAOqK,UAAY,eAAYrK,EAAOqK,YACtCE,QAAiBm1B,GAAYR,EAAQU,IAElCr1B,EAAS3D,GAAQ5G,EAAOmF,QAASnF,EAAOqK,UAAY,UAC/D,IAAK,eAID,OAHIrK,EAAOqK,UAAY,eAAYrK,EAAOqK,YACtCE,QAAiBm1B,GAAYR,EAAQU,IAElCr1B,EAASu1B,aAAa9/B,EAAOmF,QAASnF,EAAOo3B,SAAUp3B,EAAOqK,UAAY,UACrF,IAAK,WAID,OAHIrK,EAAOqK,UAAY,eAAYrK,EAAOqK,YACtCE,QAAiBm1B,GAAYR,EAAQU,IAElCr1B,EAAUvK,EAAO43B,oBAAsB,2BAA6B,YAAa53B,EAAOqK,UAAYrK,EAAOsO,WACtH,IAAK,OACL,IAAK,cAID,OAHItO,EAAOqK,UAAY,eAAYrK,EAAOqK,YACtCE,QAAiBm1B,GAAYR,EAAQU,IAElCr1B,EAAS3D,GAAQ5G,EAAO2K,aACnC,IAAK,iBACL,IAAK,wBACD,OAAOJ,EAAS3D,GAAQ5G,EAAOwO,iBACnC,IAAK,UAAW,CACZ,IAAI1J,EAAS9E,EAAO8E,OAIpB,OAHKA,EAAO6M,WAAa,eAAY7M,EAAO6M,YAAgB7M,EAAO2M,SAAW,eAAY3M,EAAO2M,YAC7FlH,QAAiBm1B,GAAYR,EAAQU,IAElCr1B,EAASqH,QAAQ9M,IAGhC,OAAO,GAAO7X,WAAW,uBAAwB,OAAOC,OAAOinC,cAAe,CAC1EvtB,OAAQA,EACR5G,OAAQA,OAIb,MAAM,WAAyB,GAClC,YAAYskB,EAAWY,GACnB,GAAOphB,oBAAqB,IACH,IAArBwgB,EAAU53B,QACV,GAAOC,mBAAmB,oBAAqB,YAAa23B,GAEhE,MAAMyb,EAAkBzb,EAAU5oB,IAAI,CAACskC,EAAkBpuC,KACrD,GAAI,GAASqe,WAAW+vB,GAAmB,CACvC,MAAMC,EAAe3P,GAAoB0P,GAAoB,IAAO,IAC9DE,EAAW,EACjB,OAAO5uC,OAAO2L,OAAO,CAAEsN,SAAUy1B,EAAkBb,OAAQ,EAAGc,eAAcC,aAEhF,MAAMhB,EAAS,eAAYc,GACJ,MAAnBd,EAAOgB,WACPhB,EAAOgB,SAAW,GAEK,MAAvBhB,EAAOe,eACPf,EAAOe,aAAe3P,GAAoB0P,GAAoB,IAAO,KAEpD,MAAjBd,EAAOC,SACPD,EAAOC,OAAS,GAEpB,MAAMA,EAASD,EAAOC,OAItB,OAHIA,EAAS,GAAKA,EAAS,KAAOA,EAAS,IACvC,GAAOxyC,mBAAmB,8CAA+C,aAAaiF,YAAiButC,GAEpG7tC,OAAO2L,OAAOiiC,KAEnBiB,EAAQJ,EAAgBjjC,OAAO,CAACC,EAAO5N,IAAO4N,EAAQ5N,EAAEgwC,OAAS,GACzD,MAAVja,EACAA,EAASib,EAAQ,EAEZjb,EAASib,GACd,GAAOxzC,mBAAmB,oDAAqD,SAAUu4B,GAG7F,IAAI4U,EAAiByE,GAAcwB,EAAgBrkC,IAAKvM,GAAOA,EAAU,SAAE+b,UAErD,MAAlB4uB,IACAA,EAAiB,IAAIrxB,QAAQ,CAACD,EAASE,KACnC+G,WAAW,KACPpe,KAAKqiC,gBAAgBzqB,KAAKT,EAASE,IACpC,MAGXhO,MAAMo/B,GAEN,eAAezoC,KAAM,kBAAmBC,OAAO2L,OAAO8iC,IACtD,eAAe1uC,KAAM,SAAU6zB,GAC/B7zB,KAAKouC,qBAAuB,EAEhC,gBACI,OAAO,GAAUpuC,UAAM,OAAQ,GAAQ,YACnC,MAAMu0B,QAAiBnd,QAAQ8C,IAAIla,KAAK0uC,gBAAgBrkC,IAAKvM,GAAMA,EAAEob,SAASY,eAC9E,OAAOozB,GAAc3Y,MAG7B,QAAQhf,EAAQ5G,GACZ,OAAO,GAAU3O,UAAM,OAAQ,GAAQ,YAEnC,GAAe,oBAAXuV,EAA8B,CAC9B,MAAMmF,QAAgBtD,QAAQ8C,IAAIla,KAAK0uC,gBAAgBrkC,IAAKvM,GACjDA,EAAEob,SAASU,gBAAgBjL,EAAOw3B,mBAAmBvuB,KAAMrc,GACvDA,EAAO8a,KACdrb,GACOA,KAIf,IAAK,IAAIsB,EAAI,EAAGA,EAAIoe,EAAQrf,OAAQiB,IAAK,CACrC,MAAMf,EAASmf,EAAQpe,GACvB,GAAwB,kBAAb,EACP,OAAOf,EAIf,MAAMmf,EAAQ,IAIgB,IAA9B1a,KAAKouC,qBAAyC,mBAAX74B,UAC7BvV,KAAK0kC,kBAEf,MAAMhL,EAAcyU,GAAenuC,KAAMuV,EAAQ5G,GAG3Cs/B,EAAUjB,GAAShtC,KAAK0uC,gBAAgBrkC,IAAI,SAClD4jC,EAAQ7nB,KAAK,CAACnlB,EAAG+hB,IAAO/hB,EAAE4tC,SAAW7rB,EAAE6rB,UACvC,MAAMN,EAAqBvuC,KAAKouC,oBAChC,IAAI9xC,EAAI,EACJyyC,GAAQ,EACZ,MAAO,EAAM,CACT,MAAMC,EAAK,KAEX,IAAIC,EAAiBhB,EAAQx6B,OAAQ3V,GAAOA,EAAEkmC,QAAYgL,EAAKlxC,EAAEiwC,MAASjwC,EAAE8wC,cACvEnjC,OAAO,CAACC,EAAO5N,IAAO4N,EAAQ5N,EAAEgwC,OAAS,GAE9C,MAAOmB,EAAiBjvC,KAAK6zB,QAAUv3B,EAAI2xC,EAAQ5yC,OAAQ,CACvD,MAAMwyC,EAASI,EAAQ3xC,KACjBmuC,EAAM+C,KACZK,EAAOE,MAAQ,KACfF,EAAOxU,QAAU,GAAMwU,EAAOe,cAC9Bf,EAAOxU,QAAQ9c,KAAK,KAAQsxB,EAAOxU,QAAU,OAC7CwU,EAAO7J,OAASsK,GAAUT,EAAQU,EAAoBh5B,EAAQ5G,GAAQiJ,KAAMrc,IACxEsyC,EAAOl2B,MAAO,EACdk2B,EAAOtyC,OAASA,EACZyE,KAAKke,cAAc,UACnBle,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,UACRwB,IAAKA,EACLyE,QAAStB,GAAkBC,EAAQ,MACnCxV,QAAS,CAAE9iB,OAAQA,EAAQ5G,OAAQ,eAASA,IAC5CuK,SAAUlZ,QAGlBhF,IACA6yC,EAAOl2B,MAAO,EACdk2B,EAAO7yC,MAAQA,EACXgF,KAAKke,cAAc,UACnBle,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,UACRwB,IAAKA,EACLyE,QAAStB,GAAkBC,EAAQ,MACnCxV,QAAS,CAAE9iB,OAAQA,EAAQ5G,OAAQ,eAASA,IAC5CuK,SAAUlZ,SAIlBA,KAAKke,cAAc,UACnBle,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,UACRwB,IAAKA,EACLyE,QAAStB,GAAkBC,EAAQ,MACnCxV,QAAS,CAAE9iB,OAAQA,EAAQ5G,OAAQ,eAASA,IAC5CuK,SAAUlZ,OAGlBivC,GAAkBpB,EAAOC,OAG7B,MAAMqB,EAAU,GAChBlB,EAAQtjC,QAAS7M,KACTA,EAAE6Z,MAAS7Z,EAAEkmC,SAGjBmL,EAAQnxC,KAAKF,EAAEkmC,QACXlmC,EAAEu7B,SACF8V,EAAQnxC,KAAKF,EAAEu7B,QAAQoU,iBAG3B0B,EAAQ9zC,eACF+b,QAAQwkB,KAAKuT,IAIvB,MAAMz0B,EAAUuzB,EAAQx6B,OAAQ3V,GAAOA,EAAE6Z,MAAmB,MAAX7Z,EAAE9C,OACnD,GAAI0f,EAAQrf,QAAU2E,KAAK6zB,OAAQ,CAC/B,MAAMt4B,EAASm+B,EAAYhf,GAC3B,QAAe9Q,IAAXrO,EAQA,OANA0yC,EAAQtjC,QAAQ7M,IACRA,EAAEu7B,SACFv7B,EAAEu7B,QAAQ4B,SAEdn9B,EAAE4nC,WAAY,IAEXnqC,EAENwzC,UACK,GAAM,KAAKtB,cAErBsB,GAAQ,EAGZ,MAAMlzC,EAASoyC,EAAQxiC,OAAO,CAACC,EAAO5N,KAClC,IAAKA,EAAE6Z,MAAmB,MAAX7Z,EAAE9C,MACb,OAAO0Q,EAEX,MAAMJ,EAAQxN,EAAO,MAAEwN,KAOvB,OANIoiC,GAAcpgC,QAAQhC,IAAS,IAC1BI,EAAMJ,KACPI,EAAMJ,GAAQ,CAAEtQ,MAAO8C,EAAE9C,MAAO8yC,OAAQ,IAE5CpiC,EAAMJ,GAAMwiC,QAAUhwC,EAAEgwC,QAErBpiC,GACR,IAwBH,GAvBAzL,OAAOkU,KAAKtY,GAAQ8O,QAASykC,IACzB,MAAMlB,EAAQryC,EAAOuzC,GACrB,GAAIlB,EAAMJ,OAAS9tC,KAAK6zB,OACpB,OAGJoa,EAAQtjC,QAAQ7M,IACRA,EAAEu7B,SACFv7B,EAAEu7B,QAAQ4B,SAEdn9B,EAAE4nC,WAAY,IAElB,MAAMjuB,EAAKy2B,EAAW,MAChBmB,EAAQ,GACd1B,GAAkBhjC,QAAS/N,IACR,MAAX6a,EAAE7a,KAGNyyC,EAAMzyC,GAAQ6a,EAAE7a,MAEpB,GAAOhB,WAAW6b,EAAEtE,QAAUsE,EAAE7P,QAASwnC,EAAWC,KAGV,IAA1CpB,EAAQx6B,OAAQ3V,IAAOA,EAAE6Z,MAAMtc,OAC/B,MAUR,OANA4yC,EAAQtjC,QAAQ7M,IACRA,EAAEu7B,SACFv7B,EAAEu7B,QAAQ4B,SAEdn9B,EAAE4nC,WAAY,IAEX,GAAO9pC,WAAW,wBAAyB,OAAOC,OAAO2+B,aAAc,CAC1EjlB,OAAQA,EACR5G,OAAQA,EAGR+L,QAASuzB,EAAQ5jC,IAAKvM,GAAM8vC,GAAkB9vC,IAC9Cob,SAAUlZ,WC/jB1B,MAAMsvC,GAAc,KCKd,GAAS,IAAI,OAAO,IAEpBC,GAAmB,mCAClB,MAAM,WAAgC,GACzC,YAAY11B,EAASwxB,GACjB,MAAMnyB,EAAW,IAAI,GAAeW,EAASwxB,GACvC5R,EAAavgB,EAASugB,WACxBA,EAAWxQ,UACX,GAAOrtB,WAAW,+CAAgD,OAAOC,OAAOC,sBAAuB,CACnGC,UAAW,0CAGnB,MAAMi4B,EAAMyF,EAAWzF,IAAI/lB,QAAQ,SAAU,MAAMA,QAAQ,OAAQ,WACnE5E,MAAM2qB,EAAKna,GACX,eAAe7Z,KAAM,SAAUkZ,EAASs2B,WACxC,eAAexvC,KAAM,YAAakZ,EAASs2B,WAC3C,eAAexvC,KAAM,gBAAiBkZ,EAASu2B,eAEnD,sBACI,OAAQzvC,KAAKwvC,YAAcD,IAG5B,MAAM,WAAuB,GAChC,4BAA4B11B,EAASwxB,GACjC,OAAO,IAAI,GAAwBxxB,EAASwxB,GAEhD,iBAAiBA,GACb,MAAMqE,EAAY,CACdrE,OAAQkE,GACRC,UAAWD,GACXE,cAAe,MAEnB,OAAc,MAAVpE,IAGoB,kBAAb,EACPqE,EAAUF,UAAYnE,EAEO,MAAxBA,EAAOoE,eACZ,GAAO5V,eAA8C,kBAAtBwR,EAAgB,UAAiB,qCAAsC,YAAaA,EAAOmE,WAC1H,GAAO3V,eAAkD,kBAA1BwR,EAAoB,cAAiB,wBAAyB,gBAAiB,cAC9GqE,EAAUF,UAAYnE,EAAOmE,UAC7BE,EAAUD,cAAgBpE,EAAOoE,eAE5BpE,EAAOmE,YACZE,EAAUF,UAAYnE,EAAOmE,WAEjCE,EAAUrE,OAASqE,EAAUF,WAdlBE,EAiBf,cAAc71B,EAASwxB,GACnB,IAAIE,EAAO,KACX,OAAQ1xB,EAAUA,EAAQjd,KAAO,WAC7B,IAAK,YACD2uC,EAAO,oBACP,MACJ,IAAK,UACDA,EAAO,oBACP,MACJ,IAAK,UACDA,EAAO,oBACP,MACJ,IAAK,QACDA,EAAO,kBACP,MACJ,IAAK,SACDA,EAAO,mBACP,MACJ,IAAK,QACDA,EAAO,4BACP,MACJ,IAAK,WACDA,EAAO,2BACP,MACJ,IAAK,WACDA,EAAO,6BACP,MACJ,IAAK,iBACDA,EAAO,2BACP,MACJ,IAAK,WACDA,EAAO,6BACP,MACJ,IAAK,mBACDA,EAAO,6BACP,MACJ,QACI,GAAO3vC,WAAW,sBAAuB,OAAOC,OAAOyO,iBAAkB,CACrEC,SAAU,UACVrO,MAAO2d,IAGnB,MAAM4f,EAAa,CACfS,WAAW,EACXlG,IAAM,WAAkBuX,EAAO,OAASF,EAAOmE,UAC/C1V,iBAAkB,CAACsB,EAASpH,KACpBqX,EAAOmE,YAAcD,IACrBpQ,KAEG/nB,QAAQD,SAAQ,KAO/B,OAJ4B,MAAxBk0B,EAAOoE,gBACPhW,EAAWU,KAAO,GAClBV,EAAWxQ,SAAWoiB,EAAOoE,eAE1BhW,EAEX,sBACI,OAAQz5B,KAAKwvC,YAAcD,IC/G5B,MAAM,WAA6B,GACtC,KAAKh6B,EAAQ5G,GACT,MAAM0pB,EAAU,CACZ9iB,OAAQA,EACR5G,OAAQA,EACR8hB,GAAKzwB,KAAK0oC,UACVM,QAAS,OAEa,MAAtBhpC,KAAK2vC,gBACL3vC,KAAK2vC,cAAgB,IAEzB,MAAMC,EAAkB,CAAEvX,UAASlhB,QAAS,KAAME,OAAQ,MACpD0jB,EAAU,IAAI3jB,QAAQ,CAACD,EAASE,KAClCu4B,EAAgBz4B,QAAUA,EAC1By4B,EAAgBv4B,OAASA,IAoD7B,OAlDArX,KAAK2vC,cAAc3xC,KAAK4xC,GACnB5vC,KAAK6vC,0BAEN7vC,KAAK6vC,wBAA0BzxB,WAAW,KAGtC,MAAM0xB,EAAQ9vC,KAAK2vC,cACnB3vC,KAAK2vC,cAAgB,KACrB3vC,KAAK6vC,wBAA0B,KAE/B,MAAMxX,EAAUyX,EAAMzlC,IAAK0lC,GAAaA,EAAS1X,SAMjD,OALAr4B,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,eACR5Q,QAAS,eAASA,GAClBnf,SAAUlZ,OAEP67B,GAAU77B,KAAKy5B,WAAY/pB,KAAKE,UAAUyoB,IAAUzgB,KAAMrc,IAC7DyE,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,WACR5Q,QAASA,EACTS,SAAUv9B,EACV2d,SAAUlZ,OAId8vC,EAAMnlC,QAAQ,CAACilC,EAAiBrvC,KAC5B,MAAMonC,EAAUpsC,EAAOgF,GACvB,GAAIonC,EAAQ3sC,MAAO,CACf,MAAMA,EAAQ,IAAID,MAAM4sC,EAAQ3sC,MAAM4M,SACtC5M,EAAMsQ,KAAOq8B,EAAQ3sC,MAAMsQ,KAC3BtQ,EAAM+H,KAAO4kC,EAAQ3sC,MAAM+H,KAC3B6sC,EAAgBv4B,OAAOrc,QAGvB40C,EAAgBz4B,QAAQwwB,EAAQpsC,WAGxCP,IACAgF,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,WACRjuC,MAAOA,EACPq9B,QAASA,EACTnf,SAAUlZ,OAEd8vC,EAAMnlC,QAASilC,IACXA,EAAgBv4B,OAAOrc,QAGhC,KAEA+/B,GCjEf,MAAM,GAAS,IAAI,OAAO,IAEpB,GAAgB,mBACf,MAAM,WAA0B,GACnC,iBAAiBsQ,GAIb,OAHIA,GAA8B,kBAAb,GACjB,GAAO/vC,mBAAmB,iBAAkB,SAAU+vC,GAEnDA,GAAU,GAErB,cAAcxxB,EAASwxB,GACnB,GAAO3vC,KAAK,qFACZ,IAAI6vC,EAAO,KACX,OAAQ1xB,EAAQjd,MACZ,IAAK,YACD2uC,EAAO,uDACP,MACJ,IAAK,UACDA,EAAO,uDACP,MACJ,IAAK,UACDA,EAAO,uDACP,MACJ,IAAK,SACDA,EAAO,sDACP,MACJ,IAAK,QACDA,EAAO,qDACP,MACJ,QACI,GAAOjwC,mBAAmB,sBAAuB,UAAWkwC,UAAU,IAE9E,OAAQD,EAAO,WAAaF,GCjCpC,MAAM,GAAS,IAAI,OAAO,IAGpB2E,GAAwB,CAC1B9b,UAAW,2BACXG,QAAS,2BACTO,QAAS,2BACTE,OAAQ,4BAEL,MAAM,WAAuB,GAChC,YAAYjb,EAASwxB,GAGjB,GAAc,MAAVA,EAAgB,CAChB,MAAMvlB,EAAI,0BAAsB,aAAtB,CAAoCjM,GAC9C,GAAIiM,EAAG,CACH,MAAMmqB,EAAgBD,GAAsBlqB,EAAElpB,MAC1CqzC,IACA5E,EAAS,CACL4E,cAAeA,EACfC,cAAc,IAKZ,MAAV7E,GACA,GAAOzvC,WAAW,sBAAuB,OAAOC,OAAOyO,iBAAkB,CACrEC,SAAU,UACVrO,MAAO2d,IAInBxQ,MAAMwQ,EAASwxB,GAEnB,iBAAiBA,GAIC,MAAVA,GACA,GAAO/vC,mBAAmB,wDAAyD,SAAU+vC,GAEjG,MAAMqE,EAAY,CACdO,cAAe,KACfC,cAAc,EACdC,qBAAsB,MAqB1B,MAlBwB,kBAAb,EACPT,EAAUO,cAAgB5E,EAEU,MAA/BA,EAAO8E,sBACZ,GAAOtW,eAAkD,kBAA1BwR,EAAoB,cAAiB,iDAAkD,gBAAiBA,EAAO4E,eAC9I,GAAOpW,eAAyD,kBAAjCwR,EAA2B,qBAAiB,+BAAgC,uBAAwB,cACnIqE,EAAUO,cAAgB5E,EAAO4E,cACjCP,EAAUS,qBAAuB9E,EAAO8E,qBACxCT,EAAUQ,eAAiB7E,EAAO6E,cAE7B7E,EAAO4E,eACZ,GAAOpW,eAAkD,kBAA1BwR,EAAoB,cAAiB,wCAAyC,uBAAwBA,EAAO4E,eAC5IP,EAAUO,cAAgB5E,EAAO4E,cACjCP,EAAUQ,eAAiB7E,EAAO6E,cAGlC,GAAO50C,mBAAmB,oCAAqC,SAAU+vC,GAEtEqE,EAEX,cAAc71B,EAASwxB,GACnB,IAAIE,EAAO,KACX,OAAQ1xB,EAAUA,EAAQjd,KAAO,WAC7B,IAAK,YACD2uC,EAAO,mCACP,MACJ,IAAK,UACDA,EAAO,mCACP,MACJ,IAAK,UACDA,EAAO,mCACP,MACJ,IAAK,SACDA,EAAO,kCACP,MACJ,QACI,GAAO3vC,WAAW,sBAAuB,OAAOC,OAAOyO,iBAAkB,CACrEC,SAAU,UACVrO,MAAO2d,IAGnB,IAAIma,EAAM,KAENA,EADAqX,EAAO6E,aACD,WAAY3E,WAAcF,EAAO4E,gBAGjC,WAAY1E,QAAWF,EAAO4E,gBAExC,MAAMxW,EAAa,CAAEzF,MAErB,QAAqB,IAMrB,OAJmC,MAA/BqX,EAAO8E,uBACP1W,EAAWU,KAAO,GAClBV,EAAWxQ,SAAWoiB,EAAO8E,sBAE1B1W,EAEX,sBACI,OAAQz5B,KAAKiwC,gBAAkBD,GAAsBhwC,KAAK6Z,QAAQjd,OC1G1E,MAAM,GAAS,IAAI,OAAO,IAE1B,IAAI8rC,GAAU,EACd,SAAS0H,GAAuBl3B,EAAUm3B,GACtC,MAAMC,EAAU,oBAChB,OAAO,SAAU/6B,EAAQ5G,GACrB,MAAM0pB,EAAU,CACZ9iB,OAAQA,EACR5G,OAAQA,EACR8hB,GAAKiY,KACLM,QAAS,OAEb,OAAO,IAAI5xB,QAAQ,CAACD,EAASE,KACzBrX,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,UACRqH,UACAjY,QAAS,eAASA,GAClBnf,SAAUlZ,OAEdqwC,EAAShY,EAAS,CAACr9B,EAAO89B,KACtB,GAAI99B,EAQA,OAPAgF,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,WACRqH,UACAt1C,QACAq9B,UACAnf,SAAUlZ,OAEPqX,EAAOrc,GASlB,GAPAgF,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,WACRqH,UACAjY,UACAS,WACA5f,SAAUlZ,OAEV84B,EAAS99B,MAAO,CAChB,MAAMA,EAAQ,IAAID,MAAM+9B,EAAS99B,MAAM4M,SAGvC,OAFA5M,EAAMsQ,KAAOwtB,EAAS99B,MAAMsQ,KAC5BtQ,EAAM+H,KAAO+1B,EAAS99B,MAAM+H,KACrBsU,EAAOrc,GAElBmc,EAAQ2hB,EAASv9B,aAKjC,SAASg1C,GAAoBr3B,GACzB,OAAO,SAAU3D,EAAQ5G,GACP,MAAVA,IACAA,EAAS,IAEb,MAAM0pB,EAAU,CAAE9iB,SAAQ5G,UAO1B,OANA3O,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,UACRqH,QAAS,iBACTjY,QAAS,eAASA,GAClBnf,SAAUlZ,OAEPkZ,EAASmf,QAAQA,GAASzgB,KAAMkhB,IACnC94B,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,WACRqH,QAAS,iBACTjY,UACAS,WACA5f,SAAUlZ,OAEP84B,GACP99B,IAQA,MAPAgF,KAAK4f,KAAK,QAAS,CACfqpB,OAAQ,WACRqH,QAAS,iBACTjY,UACAr9B,QACAke,SAAUlZ,OAERhF,KAIX,MAAM,WAAqB,GAC9B,YAAYke,EAAUW,GAClB,GAAOpH,oBAAqB,IACZ,MAAZyG,GACA,GAAO5d,mBAAmB,mBAAoB,WAAY4d,GAE9D,IAAI7R,EAAO,KACPmpC,EAAmB,KACnBC,EAAc,KACQ,oBAAf,GACPppC,EAAO,WACPmpC,EAAmBt3B,IAGnB7R,EAAO6R,EAASqyB,MAAQryB,EAAS7R,MAAQ,IACpCA,GAAQ6R,EAASw3B,aAClBrpC,EAAO,YAEXopC,EAAcv3B,EACVA,EAASmf,SACI,KAAThxB,IACAA,EAAO,aAEXmpC,EAAmBD,GAAoBr3B,IAElCA,EAASy3B,UACdH,EAAmBJ,GAAuBl3B,EAAUA,EAASy3B,UAAUn0B,KAAKtD,IAEvEA,EAAS+uB,KACduI,EAAmBJ,GAAuBl3B,EAAUA,EAAS+uB,KAAKzrB,KAAKtD,IAGvE,GAAO5d,mBAAmB,uBAAwB,WAAY4d,GAE7D7R,IACDA,EAAO,aAGfgC,MAAMhC,EAAMwS,GACZ,eAAe7Z,KAAM,mBAAoBwwC,GACzC,eAAexwC,KAAM,WAAYywC,GAErC,KAAKl7B,EAAQ5G,GACT,OAAO3O,KAAKwwC,iBAAiBj7B,EAAQ5G,IC5G7C,MAAM,GAAS,IAAI,OAAO,IAG1B,SAASiiC,GAAmB/2B,EAASoW,GAKjC,GAJe,MAAXpW,IACAA,EAAU,aAGW,kBAAd,EAAwB,CAG/B,MAAMlR,EAAQkR,EAAQlR,MAAM,kBAC5B,GAAIA,EACA,OAAQA,EAAM,IACV,IAAK,OACD,OAAO,IAAI,GAAgBkR,GAC/B,IAAK,KACD,OAAO,IAAI,GAAkBA,GACjC,QACI,GAAOve,mBAAmB,yBAA0B,UAAWue,IAI/E,MAAMiM,EAAI,GAAWjM,GAOrB,OANKiM,GAAMA,EAAEsO,kBACT,GAAOx4B,WAAW,yCAA0C,OAAOC,OAAOknC,cAAe,CACrFhnC,UAAW,qBACX8d,QAASA,IAGViM,EAAEsO,iBAAiB,CACtBR,iBAAA,GACAL,gBAAA,GACAI,mBAAA,GACAN,kBAAA,GACAF,eAAA,GACAc,gBAAA,GACA4c,kBAAA,GACApd,eAAA,GACAqd,aAAA,GACAxB,gBACDrf,GC7DA,MAAM,GAAU,iBCMjB8gB,GAAa,IAAI7hC,OAAO,mBACxB8hC,GAAc,IAAI9hC,OAAO,qBACzB+hC,GAAa,IAAI/hC,OAAO,wBACxB,GAAQ,mEAGR,GAAS,IAAI,OAAO,IAC1B,SAASgiC,GAAMzpC,EAAMvL,EAAOe,GACxB,OAAQwK,GACJ,IAAK,UACD,OAAIxK,EACO,eAAQf,EAAO,IAEnB,eAASA,GACpB,IAAK,SACD,OAAO,eAAYA,GACvB,IAAK,QACD,OAAO,eAASA,GACpB,IAAK,OAED,OADAA,EAASA,EAAQ,OAAS,OACtBe,EACO,eAAQf,EAAO,IAEnB,eAASA,GAExB,IAAIyM,EAAQlB,EAAKkB,MAAMqoC,IACvB,GAAIroC,EAAO,CAEP,IAAIuD,EAAO/P,SAASwM,EAAM,IAAM,OAQhC,OAPKA,EAAM,IAAMvK,OAAO8N,KAAUvD,EAAM,IAAQuD,EAAO,IAAM,GAAe,IAATA,GAAcA,EAAO,MACpF,GAAO5Q,mBAAmB,sBAAuB,OAAQmM,GAEzDxK,IACAiP,EAAO,KAEXhQ,EAAQ,OAAUkM,KAAKlM,GAAO0Q,OAAOV,GAC9B,eAAQhQ,EAAOgQ,EAAO,GAGjC,GADAvD,EAAQlB,EAAKkB,MAAMooC,IACfpoC,EAAO,CACP,MAAMuD,EAAO/P,SAASwM,EAAM,IAO5B,OANIvK,OAAO8N,KAAUvD,EAAM,IAAe,IAATuD,GAAcA,EAAO,KAClD,GAAO5Q,mBAAmB,qBAAsB,OAAQmM,GAExD,eAASvL,GAAOi1C,aAAejlC,GAC/B,GAAO5Q,mBAAmB,qBAAqBmM,EAAQ,QAASvL,GAEhEe,EACO,gBAAUf,EAAQ,IAAOiQ,UAAU,EAAG,KAE1CjQ,EAGX,GADAyM,EAAQlB,EAAKkB,MAAMsoC,IACftoC,GAAS7L,MAAMG,QAAQf,GAAQ,CAC/B,MAAMqP,EAAW5C,EAAM,GACjBmD,EAAQ3P,SAASwM,EAAM,IAAMvK,OAAOlC,EAAMb,SAC5CyQ,GAAS5P,EAAMb,QACf,GAAOC,mBAAmB,4BAA4BmM,EAAQ,QAASvL,GAE3E,MAAMX,EAAS,GAIf,OAHAW,EAAMyO,SAAQ,SAAUzO,GACpBX,EAAOyC,KAAKkzC,GAAM3lC,EAAUrP,GAAO,OAEhC,eAAOX,GAElB,OAAO,GAAOD,mBAAmB,eAAgB,OAAQmM,GAGtD,SAAS,GAAKqF,EAAO5C,GACpB4C,EAAMzR,QAAU6O,EAAO7O,QACvB,GAAOC,mBAAmB,qDAAsD,SAAU4O,GAE9F,MAAMknC,EAAQ,GAId,OAHAtkC,EAAMnC,SAAQ,SAAUlD,EAAMlH,GAC1B6wC,EAAMpzC,KAAKkzC,GAAMzpC,EAAMyC,EAAO3J,QAE3B,eAAQ,eAAO6wC,IAEnB,SAASC,GAAUvkC,EAAO5C,GAC7B,OAAO,eAAc,GAAK4C,EAAO5C,IAE9B,SAAS,GAAO4C,EAAO5C,GAC1B,OAAO,GAAW,GAAK4C,EAAO5C,I,iBCpF3B,SAASonC,GAAoB1zC,GAEhC,MAAMO,EAAQ,eAAYP,GAE1B,GAAIO,EAAM9C,OAAS,GACf,MAAM,IAAIN,MAAM,6CAGpB,OAAO,eAAQ,eAAO,CAACoD,EAAO,UAAWtB,MAAM,EAAG,KAE/C,SAAS00C,GAAmBpzC,GAC/B,MAAM4E,EAAO,eAAS5E,GAEtB,GAAoB,KAAhB4E,EAAK1H,OACL,MAAM,IAAIN,MAAM,uCAEpB,GAAiB,IAAbgI,EAAK,IACL,MAAM,IAAIhI,MAAM,+CAGpB,IAAIM,EAAS,GACb,MAA4B,IAArB0H,EAAK1H,EAAS,GACjBA,IAGJ,OAAO,eAAa0H,EAAKlG,MAAM,EAAGxB,IC7B/B,MAAM,GAAU,cCIjB,GAAS,IAAI,OAAO,IACpBm2C,GAAQ,CACV,MACA,OACA,OACA,OACA,QACA,SACA,SAIG,SAASC,GAAQv1C,GACpB,MAAMgV,EAAQ9S,OAAOlC,GAAOsU,MAAM,MAC9BU,EAAM7V,OAAS,IAAM6V,EAAM,GAAGvI,MAAM,eAAkBuI,EAAM,KAAOA,EAAM,GAAGvI,MAAM,aAA0B,MAAVzM,GAA2B,OAAVA,IACnH,GAAOZ,mBAAmB,gBAAiB,QAASY,GAGxD,IAAIimB,EAAQjR,EAAM,GACd8Q,EAAW,GACe,MAA1BG,EAAMhW,UAAU,EAAG,KACnB6V,EAAW,IACXG,EAAQA,EAAMhW,UAAU,IAG5B,MAAiC,MAA1BgW,EAAMhW,UAAU,EAAG,GACtBgW,EAAQA,EAAMhW,UAAU,GAEd,KAAVgW,IACAA,EAAQ,KAEZ,IAAIuvB,EAAS,GACQ,IAAjBxgC,EAAM7V,SACNq2C,EAAS,KAAOxgC,EAAM,IAAM,MAEhC,MAAOwgC,EAAOr2C,OAAS,GAAmC,MAA9Bq2C,EAAOA,EAAOr2C,OAAS,GAC/Cq2C,EAASA,EAAOvlC,UAAU,EAAGulC,EAAOr2C,OAAS,GAEjD,MAAMs2C,EAAY,GAClB,MAAOxvB,EAAM9mB,OAAQ,CACjB,GAAI8mB,EAAM9mB,QAAU,EAAG,CACnBs2C,EAAUhrB,QAAQxE,GAClB,MAEC,CACD,MAAM5hB,EAAQ4hB,EAAM9mB,OAAS,EAC7Bs2C,EAAUhrB,QAAQxE,EAAMhW,UAAU5L,IAClC4hB,EAAQA,EAAMhW,UAAU,EAAG5L,IAGnC,OAAOyhB,EAAW2vB,EAAUrzC,KAAK,KAAOozC,EAErC,SAASE,GAAY11C,EAAO21C,GAC/B,GAA0B,kBAAf,EAAyB,CAChC,MAAMtxC,EAAQixC,GAAMlkC,QAAQukC,IACb,IAAXtxC,IACAsxC,EAAW,EAAItxC,GAGvB,OAAOuhB,GAAY5lB,EAAoB,MAAZ21C,EAAoBA,EAAW,IAEvD,SAASC,GAAW51C,EAAO21C,GAI9B,GAHuB,kBAAZ,GACP,GAAOv2C,mBAAmB,yBAA0B,QAASY,GAEvC,kBAAf,EAAyB,CAChC,MAAMqE,EAAQixC,GAAMlkC,QAAQukC,IACb,IAAXtxC,IACAsxC,EAAW,EAAItxC,GAGvB,OAAO8hB,GAAWnmB,EAAoB,MAAZ21C,EAAoBA,EAAW,IAEtD,SAASE,GAAYvvB,GACxB,OAAOovB,GAAYpvB,EAAK,IAErB,SAASwvB,GAAWC,GACvB,OAAOH,GAAWG,EAAO,ICjFtB,MAAM,GAAU,eCejB,GAAS,IAAI,OAAO,ICZ1B,IACI,MAAMp3C,EAAYC,OACO,MAArBD,EAAUwvB,UACVxvB,EAAUwvB,QAAU,GAG5B,MAAOrvB,KCRP,IAAMk3C,GAAgB,CAAC,CAAC,OAAS,CAAC,CAAC,aAAe,YAAY,KAAO,SAAS,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,SAAS,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,YAAY,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,WAAW,KAAO,aAAa,CAAC,aAAe,YAAY,KAAO,OAAO,KAAO,aAAa,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,eAAe,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,sBAAsB,KAAO,YAAY,gBAAkB,aAAa,KAAO,eAAe,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,WAAW,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,kBAAkB,KAAO,QAAQ,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,KAAK,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,uBAAuB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,qBAAqB,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,qBAAqB,KAAO,YAAY,KAAO,yBAAyB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,gBAAgB,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,WAAW,KAAO,YAAY,KAAO,uBAAuB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,aAAa,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,kBAAkB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,KAAK,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,kBAAkB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,OAAO,KAAO,QAAQ,KAAO,SAAS,KAAO,8BAA8B,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,gBAAgB,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,qBAAqB,KAAO,YAAY,KAAO,iBAAiB,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,KAAK,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,WAAW,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,aAAa,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,aAAa,KAAO,YAAY,KAAO,2BAA2B,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,aAAa,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,aAAa,KAAO,YAAY,KAAO,wBAAwB,KAAO,SAAS,CAAC,OAAS,CAAC,CAAC,aAAe,SAAS,KAAO,WAAW,KAAO,WAAW,KAAO,qBAAqB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,iBAAiB,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,UAAU,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,4BAA4B,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,OAAO,KAAO,QAAQ,KAAO,SAAS,KAAO,YAAY,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,gBAAgB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,aAAa,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,YAAY,KAAO,gBAAgB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,eAAe,KAAO,YAAY,KAAO,kBAAkB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,YAAY,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,eAAe,KAAO,YAAY,KAAO,sBAAsB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,YAAY,KAAO,uBAAuB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,eAAe,KAAO,YAAY,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,YAAY,KAAO,oBAAoB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,OAAO,KAAO,SAAS,KAAO,SAAS,KAAO,oBAAoB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,SAAS,KAAO,OAAO,KAAO,UAAU,CAAC,aAAe,SAAS,KAAO,WAAW,KAAO,UAAU,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,YAAY,KAAO,0BAA0B,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,SAAS,KAAO,OAAO,KAAO,UAAU,CAAC,aAAe,SAAS,KAAO,WAAW,KAAO,WAAW,KAAO,uBAAuB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,QAAQ,KAAO,GAAG,KAAO,UAAU,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,kBAAkB,KAAO,YAAY,KAAO,oBAAoB,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,mBAAmB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,gBAAgB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,eAAe,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,gBAAgB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,mBAAmB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,oBAAoB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,gBAAgB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,iBAAiB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,kBAAkB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,uBAAuB,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,qBAAqB,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,gBAAgB,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,kBAAkB,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,yBAAyB,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,gBAAgB,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,kBAAkB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,oBAAoB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,SAAS,KAAO,WAAW,KAAO,WAAW,KAAO,mBAAmB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,uBAAuB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,uBAAuB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,YAAY,KAAO,oBAAoB,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,mBAAmB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,OAAO,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,QAAQ,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,QAAQ,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,kBAAkB,KAAO,UAAU,KAAO,YAAY,KAAO,UAAU,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,kBAAkB,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,UAAU,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,kBAAkB,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,oBAAoB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,qBAAqB,QAAU,CAAC,CAAC,aAAe,+BAA+B,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,aAAe,OAAO,KAAO,QAAQ,KAAO,SAAS,KAAO,8BAA8B,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,YAAY,KAAO,SAAS,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,mBAAmB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,SAAS,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,kBAAkB,KAAO,QAAQ,KAAO,YAAY,KAAO,gBAAgB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,gBAAgB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,eAAe,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,YAAY,KAAO,oBAAoB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,gBAAgB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,kBAAkB,QAAU,CAAC,CAAC,aAAe,8BAA8B,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,kBAAkB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,kBAAkB,KAAO,OAAO,KAAO,YAAY,KAAO,qBAAqB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,qBAAqB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,sBAAsB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,YAAY,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,kBAAkB,KAAO,OAAO,KAAO,YAAY,KAAO,sBAAsB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,YAAY,KAAO,2BAA2B,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,YAAY,KAAO,yBAAyB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,YAAY,KAAO,wBAAwB,QAAU,GAAG,gBAAkB,aAAa,KAAO,YAAY,CAAC,gBAAkB,UAAU,KAAO,YAChhjBC,GAAqB,6CAEpB,SAAeC,KAAtB,gC,gEAAO,6HAE0BC,SAASha,QAAQ,CACtC9iB,OAAQ,6BACR5G,OAAQ,CAAC,CAAEoL,QAAS,WAJzB,OAESu4B,EAFT,OAMIA,IACCtyC,KAAKuyC,QAAQC,KACbF,EAAWG,OARhB,sDAY0B,OAArB,KAAYnnC,KAZjB,4CAce+mC,SAASha,QAAQ,CACnB9iB,OAAQ,0BACR5G,OAAQ,CAAC,CACLoL,QAAS,OACT24B,UAAW,eACXC,eAAgB,CACZ/1C,KAAM,cACNgjC,OAAQ,MACR/d,SAAU,IAEd+wB,QAAS,CAAC,0BACVC,kBAAmB,CAAC,4BAzBrC,QA4BSjtC,KACA5F,KAAKuyC,QAAQC,KA7BtB,sDA+BSjhC,QAAQC,IAAI,oBAAqB,KAAS5J,SA/BnD,gCAmCK2J,QAAQC,IAAI,uBAnCjB,iE,yBAwCA,SAAe5L,KAAtB,gC,gEAAO,iHACGktC,EAAe,6CACfC,EAAc,MACdC,EAAgB,GAHnB,kBAQwBX,SAASha,QAAQ,CACpC9iB,OAAQ,oBACR5G,OAAQ,CACJlH,KAAM,QACNwoB,QAAS,CACLnc,QAASg/B,EACTlT,OAAQmT,EACRlxB,SAAUmxB,MAfvB,OAQOC,EARP,OAqBKA,EACA1hC,QAAQC,IAAI,6BAEZD,QAAQC,IAAI,cAxBjB,qDA2BCD,QAAQC,IAAR,MA3BD,0D,yBA+BA,SAAe0hC,GAAtB,qC,gEAAO,WAA0BC,EAAK7tC,GAA/B,gGACG8tC,EAAsB,IAAID,EAAKE,IAAI30B,SAASwzB,GAAgBC,IAD/D,kBAGqBiB,EAAoBE,QAAQJ,aAC/CjL,KAAK,CACD7/B,KAAK9C,IALX,cAGKoX,EAHL,yBAOYA,GAPZ,mCASCnL,QAAQC,IAAI,gBAAkB,EAAlB,IATb,yD,yBAcA,SAAe7K,GAAtB,uC,gEAAO,WAA0BwsC,EAAKv2C,EAAK0I,GAApC,gGACG8tC,EAAsB,IAAID,EAAKE,IAAI30B,SAASwzB,GAAgBC,IAD/D,kBAGqBiB,EAAoBE,QAAQC,qBAAqB32C,EAAK,SACzEqrC,KAAK,CACD7/B,KAAK9C,IALX,cAGKoX,EAHL,yBAOYA,GAPZ,mCASCnL,QAAQC,IAAI,gBAAkB,EAAlB,IATb,yD,yBAmBC,SAASgiC,KACZ14C,OAAO24C,KACH,uBACA,UAKD,SAAet6B,GAAtB,qC,gEAAO,WAA0Bg6B,EAAK7tC,GAA/B,gGACE8tC,EAAsB,IAAID,EAAKE,IAAI30B,SAASwzB,GAAgBC,IAD9D,kBAGoBiB,EAAoBE,QAAQI,UAAUpuC,GAAStI,OAHnE,cAGI0f,EAHJ,YAIkB9S,GAAX8S,IAAsBA,EAAU,GACnCnL,QAAQC,IAAIkL,GALhB,kBAMWi3B,EAAOlwC,MAAMmuC,YAAYl1B,EAAQ,KAN5C,qCAQAnL,QAAQC,IAAI,sBAAwB,EAAxB,IARZ,QAUJxR,KAAK4zC,mBAAoB,KAVrB,0D,yBC3CR,QACE,WAAF,GACE,KAFF,WAEI,IAAJ,EACI,OAAJ,GACM,QAAN,gBACM,KAAN,KACM,UAAN,EACM,WAAN,EACM,WAAN,GALA,WAMA,MANA,cAOA,MAPA,gBAQA,MARA,eASA,MATA,GAYE,MAAF,CACI,OAAJ,CACM,QADN,SACA,SAKE,QAtBF,WAsBI,IAAJ,OAAI,OAAJ,+IACA,qCADA,oBAEA,sCACA,0DAHA,uBAIc,QAAd,uBAJA,SAKA,WALA,8BAQc,QAAd,2BACc,EAAd,aACc,EAAd,gCACc,EAAd,0BACc,EAAd,0BACA,QAAgB,KACF,EAAd,aAdA,gCAkBA,WACA,4CACgB,KApBhB,+CAwBE,QAAF,CACI,OADJ,WACM,IAAN,OAAM,OAAN,qDAAQ,OAAR,0EACA,mCAEA,4EACoB,EAApB,WACoBx1B,YAAW,SAA/B,GACsB,EAAtB,cACA,SAEA,CACoB,IAApB,IACoB,EAApB,OACoB,IAAIrE,EAAU,IAAIo5B,EAAKE,IAAI54B,WAC/C,aACoB04B,EAAKE,IAAIQ,cAAcj8B,MAAK,SAAhD,GACA,YACwB,EAAxB,aACwB,EAAxB,aACwB,QAAxB,eACwB,EAAxB,gCACwB,YAAxB,YAA0B,EAA1B,mBACwB,EAAxB,eAGwB,EAAxB,gCACwB,YAAxB,YAC0B,EAA1B,cACA,aA3BA,8CAiCI,WAlCJ,WAkCM,IAAN,OAAM,OAAN,qDAAQ,OAAR,0FACA,qBADA,OACA,UADA,qDAGI,QArCJ,WAqCM,IAAN,OAAM,OAAN,qDAAQ,OAAR,0FACA,qBADA,8CAGI,WAxCJ,WAwCM,IAAN,OAAM,OAAN,qDAAQ,OAAR,0FACA,gCADA,8CAGI,WA3CJ,WA2CM,IAAN,OAAM,OAAN,qDAAQ,OAAR,0EACA,0BACA,6BACA,0BACA,YACA,eALA,gDClK8U,M,aCO1UjF,GAAY,gBACd,GACA/N,EACAiC,GACA,EACA,KACA,KACA,MAIa,aAAA8L,G,2CCbf,IAJA,IAAImhC,EAAW,mCAGXC,EAAe,GACVC,EAAI,EAAGA,EAAIF,EAASz4C,OAAQ24C,IAAK,CACxC,IAAIC,EAAIH,EAASrsB,OAAOusB,GAExB,QAAwBpqC,IAApBmqC,EAAaE,GAAkB,MAAM,IAAI9rB,UAAU8rB,EAAI,iBAC3DF,EAAaE,GAAKD,EAGpB,SAASE,EAAaC,GACpB,IAAInxB,EAAImxB,GAAO,GACf,OAAe,SAANA,IAAoB,EACR,YAAfnxB,GAAK,EAAK,GACK,YAAfA,GAAK,EAAK,GACK,YAAfA,GAAK,EAAK,GACK,aAAfA,GAAK,EAAK,GACK,YAAfA,GAAK,EAAK,GAGlB,SAASoxB,EAAWrU,GAElB,IADA,IAAIsU,EAAM,EACD/3C,EAAI,EAAGA,EAAIyjC,EAAO1kC,SAAUiB,EAAG,CACtC,IAAIwB,EAAIiiC,EAAOhiC,WAAWzB,GAC1B,GAAIwB,EAAI,IAAMA,EAAI,IAAK,MAAO,mBAAqBiiC,EAAS,IAE5DsU,EAAMH,EAAYG,GAAQv2C,GAAK,EAIjC,IAFAu2C,EAAMH,EAAYG,GAEb/3C,EAAI,EAAGA,EAAIyjC,EAAO1kC,SAAUiB,EAAG,CAClC,IAAImC,EAAIshC,EAAOhiC,WAAWzB,GAC1B+3C,EAAMH,EAAYG,GAAY,GAAJ51C,EAE5B,OAAO41C,EAGT,SAASvqC,EAAQi2B,EAAQhW,EAAOuqB,GAE9B,GADAA,EAAQA,GAAS,GACZvU,EAAO1kC,OAAS,EAAI0uB,EAAM1uB,OAAUi5C,EAAO,MAAM,IAAInsB,UAAU,wBAEpE4X,EAASA,EAAOzrB,cAGhB,IAAI+/B,EAAMD,EAAUrU,GACpB,GAAmB,kBAARsU,EAAkB,MAAM,IAAIt5C,MAAMs5C,GAG7C,IADA,IAAI94C,EAASwkC,EAAS,IACbzjC,EAAI,EAAGA,EAAIytB,EAAM1uB,SAAUiB,EAAG,CACrC,IAAI23C,EAAIlqB,EAAMztB,GACd,GAAK23C,GAAK,IAAO,EAAG,MAAM,IAAIl5C,MAAM,kBAEpCs5C,EAAMH,EAAYG,GAAOJ,EACzB14C,GAAUu4C,EAASrsB,OAAOwsB,GAG5B,IAAK33C,EAAI,EAAGA,EAAI,IAAKA,EACnB+3C,EAAMH,EAAYG,GAIpB,IAFAA,GAAO,EAEF/3C,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACtB,IAAImC,EAAK41C,GAAkB,GAAT,EAAI/3C,GAAW,GACjCf,GAAUu4C,EAASrsB,OAAOhpB,GAG5B,OAAOlD,EAGT,SAASg5C,EAAUC,EAAKF,GAEtB,GADAA,EAAQA,GAAS,GACbE,EAAIn5C,OAAS,EAAG,OAAOm5C,EAAM,aACjC,GAAIA,EAAIn5C,OAASi5C,EAAO,MAAO,uBAG/B,IAAIG,EAAUD,EAAIlgC,cACdogC,EAAUF,EAAIG,cAClB,GAAIH,IAAQC,GAAWD,IAAQE,EAAS,MAAO,qBAAuBF,EACtEA,EAAMC,EAEN,IAAIjkC,EAAQgkC,EAAII,YAAY,KAC5B,IAAe,IAAXpkC,EAAc,MAAO,8BAAgCgkC,EACzD,GAAc,IAAVhkC,EAAa,MAAO,sBAAwBgkC,EAEhD,IAAIzU,EAASyU,EAAI33C,MAAM,EAAG2T,GACtBqkC,EAAYL,EAAI33C,MAAM2T,EAAQ,GAClC,GAAIqkC,EAAUx5C,OAAS,EAAG,MAAO,iBAEjC,IAAIg5C,EAAMD,EAAUrU,GACpB,GAAmB,kBAARsU,EAAkB,OAAOA,EAGpC,IADA,IAAItqB,EAAQ,GACHztB,EAAI,EAAGA,EAAIu4C,EAAUx5C,SAAUiB,EAAG,CACzC,IAAIwB,EAAI+2C,EAAUptB,OAAOnrB,GACrBmC,EAAIs1C,EAAaj2C,GACrB,QAAU8L,IAANnL,EAAiB,MAAO,qBAAuBX,EACnDu2C,EAAMH,EAAYG,GAAO51C,EAGrBnC,EAAI,GAAKu4C,EAAUx5C,QACvB0uB,EAAM/rB,KAAKS,GAGb,OAAY,IAAR41C,EAAkB,wBAA0BG,EACzC,CAAEzU,OAAQA,EAAQhW,MAAOA,GAGlC,SAAS+qB,IACP,IAAIC,EAAMR,EAAS18B,MAAM,KAAM2zB,WAC/B,GAAmB,kBAARuJ,EAAkB,OAAOA,EAGtC,SAAShrC,EAAQyqC,GACf,IAAIO,EAAMR,EAAS18B,MAAM,KAAM2zB,WAC/B,GAAmB,kBAARuJ,EAAkB,OAAOA,EAEpC,MAAM,IAAIh6C,MAAMg6C,GAGlB,SAASC,EAASjyC,EAAMkyC,EAAQC,EAASpxC,GAMvC,IALA,IAAI5H,EAAQ,EACR4uB,EAAO,EACPqqB,GAAQ,GAAKD,GAAW,EAExB35C,EAAS,GACJe,EAAI,EAAGA,EAAIyG,EAAK1H,SAAUiB,EAAG,CACpCJ,EAASA,GAAS+4C,EAAUlyC,EAAKzG,GACjCwuB,GAAQmqB,EAER,MAAOnqB,GAAQoqB,EACbpqB,GAAQoqB,EACR35C,EAAOyC,KAAM9B,GAAS4uB,EAAQqqB,GAIlC,GAAIrxC,EACEgnB,EAAO,GACTvvB,EAAOyC,KAAM9B,GAAUg5C,EAAUpqB,EAASqqB,OAEvC,CACL,GAAIrqB,GAAQmqB,EAAQ,MAAO,iBAC3B,GAAK/4C,GAAUg5C,EAAUpqB,EAASqqB,EAAM,MAAO,mBAGjD,OAAO55C,EAGT,SAAS65C,EAAej3C,GACtB,IAAI42C,EAAMC,EAAQ72C,EAAO,EAAG,GAAG,GAC/B,GAAIrB,MAAMG,QAAQ83C,GAAM,OAAOA,EAGjC,SAASpU,EAASxiC,GAChB,IAAI42C,EAAMC,EAAQ72C,EAAO,EAAG,GAAG,GAC/B,GAAIrB,MAAMG,QAAQ83C,GAAM,OAAOA,EAE/B,MAAM,IAAIh6C,MAAMg6C,GAGlB,SAASM,EAAiBtrB,GACxB,IAAIgrB,EAAMC,EAAQjrB,EAAO,EAAG,GAAG,GAC/B,GAAIjtB,MAAMG,QAAQ83C,GAAM,OAAOA,EAGjC,SAASO,EAAWvrB,GAClB,IAAIgrB,EAAMC,EAAQjrB,EAAO,EAAG,GAAG,GAC/B,GAAIjtB,MAAMG,QAAQ83C,GAAM,OAAOA,EAE/B,MAAM,IAAIh6C,MAAMg6C,GAGlB9wC,EAAOC,QAAU,CACf4wC,aAAcA,EACd/qC,OAAQA,EACRD,OAAQA,EACRsrC,cAAeA,EACfzU,QAASA,EACT0U,gBAAiBA,EACjBC,UAAWA,I,kCCpLb,kCAAO,MAAMC,EAAc,8C,kCCA3B,kCAAO,MAAM1wB,EAAU","file":"js/chunk-463f4924.cf86d46a.js","sourcesContent":["export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n//# sourceMappingURL=hashes.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\nlet anyGlobal = null;\ntry {\n    anyGlobal = window;\n    if (anyGlobal == null) {\n        throw new Error(\"try next\");\n    }\n}\ncatch (error) {\n    try {\n        anyGlobal = global;\n        if (anyGlobal == null) {\n            throw new Error(\"try next\");\n        }\n    }\n    catch (error) {\n        anyGlobal = {};\n    }\n}\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nexport function randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n}\n;\n//# sourceMappingURL=random.js.map","\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar objectDefinePropertyModile = require('../internals/object-define-property');\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\n$({ target: 'Object', stat: true, forced: !DESCRIPTORS, sham: !DESCRIPTORS }, {\n  defineProperty: objectDefinePropertyModile.f\n});\n","// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\"; // \"\\uD835\\uDF63\";\n//# sourceMappingURL=strings.js.map","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('main',{attrs:{\"id\":\"main\"}},[_c('div',{staticClass:\"content\"},[_c('h3',{staticClass:\"account\"},[_vm._v(\" Connected Account \"),_c('span',{staticClass:\"purple\",attrs:{\"id\":\"account\"}},[_vm._v(_vm._s(_vm.account))]),(!_vm.starAdded)?_c('button',{staticClass:\"addStar\",on:{\"click\":function($event){return _vm.Functions.CustomToken()}}},[_vm._v(\"Add HNR to \"),_c('img',{attrs:{\"width\":\"30px\",\"src\":\"https://jaguarswap.com/images/tokens/metamask.png\"}})]):_vm._e(),(!_vm.connected)?_c('div',{staticClass:\"connect\"},[_c('button',{staticClass:\"connectWallet\",on:{\"click\":function($event){return _vm.matics()}}},[_c('i',{staticClass:\"fas fa-network-wired\"}),_vm._v(\"Connect\")])]):_vm._e(),(_vm.connected)?_c('div',{staticClass:\"disconnect\"},[_c('button',{staticClass:\"connectWallet\",on:{\"click\":function($event){return _vm.disconnect()}}},[_c('i',{staticClass:\"fas fa-network-wired\"}),_vm._v(\"Disconnect\")])]):_vm._e()]),_c('h4',{staticClass:\"heading center\"},[_vm._v(\"Quick and dirty HNR interaction site\")]),_vm._m(0),_c('div',{staticClass:\"cards\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"card\",staticStyle:{\"min-width\":\"50%\"}},[_c('div',{staticClass:\"grid\"},[_c('div',{staticClass:\"label\"},[_c('h2',[_vm._v(\"Current HNR Balance: \"+_vm._s(_vm.Balance))])])]),_c('div',{staticClass:\"grid\"},[_c('div',{staticClass:\"label\"},[_c('h2',[_vm._v(\"Last Claim: \"+_vm._s(_vm.claimDate))])])]),_c('div',{staticClass:\"grid\"},[_c('button',{on:{\"click\":function($event){return _vm.cashOut()}}},[_vm._v(\"Claim reward\")])])])])]),_c('div',{staticClass:\"cards\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"card\",staticStyle:{\"min-width\":\"50%\"}},[_vm._m(1),_c('div',{staticClass:\"grid\"},[_vm._m(2),_c('div',{staticClass:\"cont  large-text\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.nodeName),expression:\"nodeName\"}],attrs:{\"placeholder\":\"New Node Name\"},domProps:{\"value\":(_vm.nodeName)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.nodeName=$event.target.value}}})])]),_c('div',{staticClass:\"grid\"},[_c('button',{on:{\"click\":function($event){return _vm.createNode()}}},[_vm._v(\"Create Musha Node\")])])])])])]),(_vm.messages)?_c('div',{staticClass:\"messages\"},[_c('h4',[_vm._v(_vm._s(_vm.messages))])]):_vm._e()])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"sm-heading center\"},[_vm._v(\"Official site \"),_c('a',{attrs:{\"href\":\"https://samurai.financial\",\"target\":\"_new\"}},[_vm._v(\"Samuari Financial\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"grid\"},[_c('div',{staticClass:\"label\"},[_c('h2',[_vm._v(\"Create Musha Node\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"label\"},[_c('h2',[_vm._v(\"Node Name: \")])])}]\n\nexport { render, staticRenderFns }","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export const version = \"abi/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nexport function checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nexport class Coder {\n    constructor(name, type, localName, dynamic) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    _throwError(message, value) {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n}\nexport class Writer {\n    constructor(wordSize) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n    get data() {\n        return hexConcat(this._data);\n    }\n    get length() { return this._dataLength; }\n    _writeData(data) {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this._writeData(concat(writer._data));\n    }\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value) {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([bytes, this._padding.slice(paddingOffset)]);\n        }\n        return this._writeData(bytes);\n    }\n    _getValue(value) {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n        }\n        return bytes;\n    }\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value) {\n        return this._writeData(this._getValue(value));\n    }\n    writeUpdatableValue() {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\nexport class Reader {\n    constructor(data, wordSize, coerceFunc, allowLoose) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n        this._offset = 0;\n    }\n    get data() { return hexlify(this._data); }\n    get consumed() { return this._offset; }\n    // The default Coerce function\n    static coerce(name, value) {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) {\n            value = value.toNumber();\n        }\n        return value;\n    }\n    coerce(name, value) {\n        if (this._coerceFunc) {\n            return this._coerceFunc(name, value);\n        }\n        return Reader.coerce(name, value);\n    }\n    _peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            }\n            else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength);\n    }\n    subReader(offset) {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n    readBytes(length, loose) {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    readValue() {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, value) {\n        try {\n            value = getAddress(value);\n        }\n        catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    constructor(coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n    defaultValue() {\n        return this.coder.defaultValue();\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nimport { Coder, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\nexport function pack(writer, coders, values) {\n    let arrayValues = null;\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\nexport function unpack(reader, coders) {\n    let values = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) {\n                accum[name] = 0;\n            }\n            accum[name]++;\n        }\n        return accum;\n    }, {});\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder, index) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) {\n            return;\n        }\n        if (name === \"length\") {\n            name = \"_length\";\n        }\n        if (values[name] != null) {\n            return;\n        }\n        const value = values[index];\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n        else {\n            values[name] = value;\n        }\n    });\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n    return Object.freeze(values);\n}\nexport class ArrayCoder extends Coder {\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        this.coder = coder;\n        this.length = length;\n    }\n    defaultValue() {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n    encode(writer, value) {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new AnonymousCoder(this.coder));\n        }\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n//# sourceMappingURL=array.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, value) {\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n//# sourceMappingURL=boolean.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    defaultValue() {\n        return \"0x\";\n    }\n    encode(writer, value) {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n    defaultValue() {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n    encode(writer, value) {\n        let data = arrayify(value);\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class NullCoder extends Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    defaultValue() {\n        return null;\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes([]);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n//# sourceMappingURL=null.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\nimport { Coder } from \"./abstract-coder\";\nexport class NumberCoder extends Coder {\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        this.size = size;\n        this.signed = signed;\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, value) {\n        let v = BigNumber.from(value);\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        }\n        else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n        return writer.writeValue(v);\n    }\n    decode(reader) {\n        let value = reader.readValue().mask(this.size * 8);\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        return reader.coerce(this.name, value);\n    }\n}\n//# sourceMappingURL=number.js.map","\"use strict\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { DynamicBytesCoder } from \"./bytes\";\nexport class StringCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    defaultValue() {\n        return \"\";\n    }\n    encode(writer, value) {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n    decode(reader) {\n        return toUtf8String(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\nexport class TupleCoder extends Coder {\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, value) {\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n//# sourceMappingURL=tuple.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nconst _constructorGuard = {};\nlet ModifiersBytes = { calldata: true, memory: true, storage: true };\nlet ModifiersNest = { calldata: true, memory: true };\nfunction checkModifier(type, name) {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) {\n            return true;\n        }\n    }\n    else if (type === \"address\") {\n        if (name === \"payable\") {\n            return true;\n        }\n    }\n    else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) {\n            return true;\n        }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param, allowIndexed) {\n    let originalParam = param;\n    function throwError(i) {\n        logger.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n    function newNode(parent) {\n        let node = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) {\n            node.indexed = false;\n        }\n        return node;\n    }\n    let parent = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                }\n                else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [newNode(node)];\n                node = node.components[0];\n                break;\n            case \")\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let child = node;\n                node = node.parent;\n                if (!node) {\n                    throwError(i);\n                }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n            case \",\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let sibling = newNode(node.parent);\n                //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n            // Hit a space...\n            case \" \":\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) {\n                                throwError(i);\n                            }\n                            if (node.indexed) {\n                                throwError(i);\n                            }\n                            node.indexed = true;\n                            node.name = \"\";\n                        }\n                        else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        }\n                        else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n                break;\n            case \"[\":\n                if (!node.state.allowArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n            case \"]\":\n                if (!node.state.readArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                }\n                else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                }\n                else if (node.state.readArray) {\n                    node.type += c;\n                }\n                else {\n                    throwError(i);\n                }\n        }\n    }\n    if (node.parent) {\n        logger.throwArgumentError(\"unexpected eof\", \"param\", param);\n    }\n    delete parent.state;\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) {\n            throwError(originalParam.length - 7);\n        }\n        if (node.indexed) {\n            throwError(originalParam.length - 7);\n        }\n        node.indexed = true;\n        node.name = \"\";\n    }\n    else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n    parent.type = verifyType(parent.type);\n    return parent;\n}\nfunction populate(object, params) {\n    for (let key in params) {\n        defineReadOnly(object, key, params[key]);\n    }\n}\nexport const FormatTypes = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n    // JSON-format a la Solidity\n    json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nexport class ParamType {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new ParamType()\"\n            });\n        }\n        populate(this, params);\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        }\n        else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\" : this.type)\n            });\n        }\n        this._isParamType = true;\n        Object.freeze(this);\n    }\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n        }\n        else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    static from(value, allowIndexed) {\n        if (typeof (value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ParamType.isParamType(value)) {\n            return value;\n        }\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null : !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject) : null)\n        });\n    }\n    static fromString(value, allowIndexed) {\n        function ParamTypify(node) {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n    static isParamType(value) {\n        return !!(value != null && value._isParamType);\n    }\n}\n;\nfunction parseParams(value, allowIndex) {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\nexport class Fragment {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n        this._isFragment = true;\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n        return Fragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n    static fromString(value) {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n        if (value.split(\" \")[0] === \"event\") {\n            return EventFragment.fromString(value.substring(5).trim());\n        }\n        else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        }\n        else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        }\n        else if (value.split(\" \")[0] === \"error\") {\n            return ErrorFragment.fromString(value.substring(5).trim());\n        }\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n    static isFragment(value) {\n        return !!(value && value._isFragment);\n    }\n}\nexport class EventFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (EventFragment.isEventFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n        const params = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n        return new EventFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch (modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n    static isEventFragment(value) {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\nfunction parseGas(value, params) {\n    params.gas = null;\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n    return value;\n}\nfunction parseModifiers(value, params) {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\nfunction verifyState(value) {\n    let result = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n    }\n    else if (value.payable != null) {\n        result.payable = !!value.payable;\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n        result.constant = !!value.constant;\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        }\n        else {\n            result.stateMutability = (result.payable ? \"payable\" : \"nonpayable\");\n        }\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n    }\n    else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\" : \"payable\");\n    }\n    else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n    return result;\n}\nexport class ConstructorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n        let result = \"constructor(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ConstructorFragment.isConstructorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n        const params = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"constructor\" };\n        value = parseGas(value, params);\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n        params.inputs = parseParams(parens[2].trim(), false);\n        parseModifiers(parens[3].trim(), params);\n        return ConstructorFragment.fromObject(params);\n    }\n    static isConstructorFragment(value) {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\nexport class FunctionFragment extends ConstructorFragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            }\n            else if (this.constant) {\n                result += \"view \";\n            }\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map((output) => output.format(format)).join(\", \") + \") \";\n            }\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (FunctionFragment.isFunctionFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new FunctionFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"function\" };\n        value = parseGas(value, params);\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        parseModifiers(parens[3].trim(), params);\n        // We have outputs\n        if (comps.length > 1) {\n            let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        }\n        else {\n            params.outputs = [];\n        }\n        return FunctionFragment.fromObject(params);\n    }\n    static isFunctionFragment(value) {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n//export class StructFragment extends Fragment {\n//}\nfunction checkForbidden(fragment) {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${sig} error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\nexport class ErrorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ErrorFragment.isErrorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : [])\n        };\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n    static fromString(value) {\n        let params = { type: \"error\" };\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n    static isErrorFragment(value) {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\nfunction verifyType(type) {\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    }\n    else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n    // @TODO: more verification\n    return type;\n}\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value) {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n    }\n    return value;\n}\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nfunction splitNesting(value) {\n    value = value.trim();\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        }\n        else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            }\n            else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) {\n        result.push(accum);\n    }\n    return result;\n}\n//# sourceMappingURL=fragments.js.map","\"use strict\";\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Reader, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\nimport { ParamType } from \"./fragments\";\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nexport class AbiCoder {\n    constructor(coerceFunc) {\n        logger.checkNew(new.target, AbiCoder);\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n    _getCoder(param) {\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n    _getWordSize() { return 32; }\n    _getReader(data, allowLoose) {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n    _getWriter() {\n        return new Writer(this._getWordSize());\n    }\n    getDefaultValue(types) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n    encode(types, values) {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    decode(types, data, loose) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\nexport const defaultAbiCoder = new AbiCoder();\n//# sourceMappingURL=abi-coder.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\nimport { defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, ParamType } from \"./fragments\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport { checkResultErrors };\nexport class LogDescription extends Description {\n}\nexport class TransactionDescription extends Description {\n}\nexport class ErrorDescription extends Description {\n}\nexport class Indexed extends Description {\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n}\nconst BuiltinErrors = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [\"string\"], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [\"uint256\"] }\n};\nfunction wrapAccessError(property, error) {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n    wrap.error = error;\n    return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    constructor(fragments) {\n        logger.checkNew(new.target, Interface);\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n        defineReadOnly(this, \"_abiCoder\", getStatic(new.target, \"getAbiCoder\")());\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"errors\", {});\n        defineReadOnly(this, \"events\", {});\n        defineReadOnly(this, \"structs\", {});\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n            bucket[signature] = fragment;\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n    format(format) {\n        if (!format) {\n            format = FormatTypes.full;\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n            return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n        return abi;\n    }\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder() {\n        return defaultAbiCoder;\n    }\n    static getAddress(address) {\n        return getAddress(address);\n    }\n    static getSighash(fragment) {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n    static getEventTopic(eventFragment) {\n        return id(eventFragment.format());\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n            return this.functions[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic) {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n            return this.events[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n            return this.errors[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment) {\n        if (typeof (fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            }\n            catch (error) {\n                try {\n                    fragment = this.getError(fragment);\n                }\n                catch (_) {\n                    throw error;\n                }\n            }\n        }\n        return getStatic(this.constructor, \"getSighash\")(fragment);\n    }\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        return getStatic(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n    _decodeParams(params, data) {\n        return this._abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this._abiCoder.encode(params, values);\n    }\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    decodeErrorResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${fragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n    encodeErrorResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [])\n        ]));\n    }\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [])\n        ]));\n    }\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        let bytes = arrayify(data);\n        let reason = null;\n        let errorArgs = null;\n        let errorName = null;\n        let errorSignature = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                }\n                catch (error) { }\n                break;\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) {\n                        reason = errorArgs[0];\n                    }\n                }\n                else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    }\n                    catch (error) {\n                        console.log(error);\n                    }\n                }\n                break;\n            }\n        }\n        return logger.throwError(\"call revert exception\", Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            errorArgs, errorName, errorSignature, reason\n        });\n    }\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));\n    }\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            });\n        }\n        let topics = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return id(value);\n            }\n            else if (param.type === \"bytes\") {\n                return keccak256(hexlify(value));\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                this._abiCoder.encode([\"address\"], [value]);\n            }\n            return hexZeroPad(hexlify(value), 32);\n        };\n        values.forEach((value, index) => {\n            let param = eventFragment.inputs[index];\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this._abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this._abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment, data, topics) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n        let indexed = [];\n        let nonIndexed = [];\n        let dynamic = [];\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)) : null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n        let result = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n                }\n                else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n                }\n                else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        result[index] = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    result[index] = error;\n                }\n            }\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value); }\n                    });\n                }\n                else {\n                    result[param.name] = value;\n                }\n            }\n        });\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${i}`, value); }\n                });\n            }\n        }\n        return Object.freeze(result);\n    }\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx) {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log) {\n        let fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n        return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n    parseError(data) {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n    static isInterface(value) {\n        return !!(value && value._isInterface);\n    }\n}\n//# sourceMappingURL=interface.js.map","export const version = \"abstract-provider/5.5.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\nexport class ForkEvent extends Description {\n    static isForkEvent(value) {\n        return !!(value && value._isForkEvent);\n    }\n}\nexport class BlockForkEvent extends ForkEvent {\n    constructor(blockHash, expiry) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\nexport class TransactionForkEvent extends ForkEvent {\n    constructor(hash, expiry) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\nexport class TransactionOrderForkEvent extends ForkEvent {\n    constructor(beforeHash, afterHash, expiry) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n///////////////////////////////\n// Exported Abstracts\nexport class Provider {\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n    getFeeData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { block, gasPrice } = yield resolveProperties({\n                block: this.getBlock(\"latest\"),\n                gasPrice: this.getGasPrice().catch((error) => {\n                    // @TODO: Why is this now failing on Calaveras?\n                    //console.log(error);\n                    return null;\n                })\n            });\n            let maxFeePerGas = null, maxPriorityFeePerGas = null;\n            if (block && block.baseFeePerGas) {\n                // We may want to compute this more accurately in the future,\n                // using the formula \"check if the base fee is correct\".\n                // See: https://eips.ethereum.org/EIPS/eip-1559\n                maxPriorityFeePerGas = BigNumber.from(\"2500000000\");\n                maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n            }\n            return { maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n        });\n    }\n    // Alias for \"on\"\n    addListener(eventName, listener) {\n        return this.on(eventName, listener);\n    }\n    // Alias for \"off\"\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n    static isProvider(value) {\n        return !!(value && value._isProvider);\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"abstract-signer/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst allowedTransactionKeys = [\n    \"accessList\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n;\n;\nexport class Signer {\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n    ///////////////////\n    // Sub-classes MAY override these\n    getBalance(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getBalance\");\n            return yield this.provider.getBalance(this.getAddress(), blockTag);\n        });\n    }\n    getTransactionCount(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getTransactionCount\");\n            return yield this.provider.getTransactionCount(this.getAddress(), blockTag);\n        });\n    }\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"estimateGas\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.estimateGas(tx);\n        });\n    }\n    // Populates \"from\" if unspecified, and calls with the transaction\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"call\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.call(tx, blockTag);\n        });\n    }\n    // Populates all fields in a transaction, signs it and sends it to the network\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"sendTransaction\");\n            const tx = yield this.populateTransaction(transaction);\n            const signedTx = yield this.signTransaction(tx);\n            return yield this.provider.sendTransaction(signedTx);\n        });\n    }\n    getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getChainId\");\n            const network = yield this.provider.getNetwork();\n            return network.chainId;\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getGasPrice\");\n            return yield this.provider.getGasPrice();\n        });\n    }\n    getFeeData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getFeeData\");\n            return yield this.provider.getFeeData();\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"resolveName\");\n            return yield this.provider.resolveName(name);\n        });\n    }\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction) {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n        const tx = shallowCopy(transaction);\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n        }\n        else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n        return tx;\n    }\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    populateTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            if (tx.to != null) {\n                tx.to = Promise.resolve(tx.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                    if (to == null) {\n                        return null;\n                    }\n                    const address = yield this.resolveName(to);\n                    if (address == null) {\n                        logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                    }\n                    return address;\n                }));\n                // Prevent this error from causing an UnhandledPromiseException\n                tx.to.catch((error) => { });\n            }\n            // Do not allow mixing pre-eip-1559 and eip-1559 properties\n            const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n            if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n                logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n            }\n            else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n                logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n            }\n            if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n                // Fully-formed EIP-1559 transaction (skip getFeeData)\n                tx.type = 2;\n            }\n            else if (tx.type === 0 || tx.type === 1) {\n                // Explicit Legacy or EIP-2930 transaction\n                // Populate missing gasPrice\n                if (tx.gasPrice == null) {\n                    tx.gasPrice = this.getGasPrice();\n                }\n            }\n            else {\n                // We need to get fee data to determine things\n                const feeData = yield this.getFeeData();\n                if (tx.type == null) {\n                    // We need to auto-detect the intended type of this transaction...\n                    if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                        // The network supports EIP-1559!\n                        // Upgrade transaction from null to eip-1559\n                        tx.type = 2;\n                        if (tx.gasPrice != null) {\n                            // Using legacy gasPrice property on an eip-1559 network,\n                            // so use gasPrice as both fee properties\n                            const gasPrice = tx.gasPrice;\n                            delete tx.gasPrice;\n                            tx.maxFeePerGas = gasPrice;\n                            tx.maxPriorityFeePerGas = gasPrice;\n                        }\n                        else {\n                            // Populate missing fee data\n                            if (tx.maxFeePerGas == null) {\n                                tx.maxFeePerGas = feeData.maxFeePerGas;\n                            }\n                            if (tx.maxPriorityFeePerGas == null) {\n                                tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                            }\n                        }\n                    }\n                    else if (feeData.gasPrice != null) {\n                        // Network doesn't support EIP-1559...\n                        // ...but they are trying to use EIP-1559 properties\n                        if (hasEip1559) {\n                            logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                                operation: \"populateTransaction\"\n                            });\n                        }\n                        // Populate missing fee data\n                        if (tx.gasPrice == null) {\n                            tx.gasPrice = feeData.gasPrice;\n                        }\n                        // Explicitly set untyped transaction to legacy\n                        tx.type = 0;\n                    }\n                    else {\n                        // getFeeData has failed us.\n                        logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"signer.getFeeData\"\n                        });\n                    }\n                }\n                else if (tx.type === 2) {\n                    // Explicitly using EIP-1559\n                    // Populate missing fee data\n                    if (tx.maxFeePerGas == null) {\n                        tx.maxFeePerGas = feeData.maxFeePerGas;\n                    }\n                    if (tx.maxPriorityFeePerGas == null) {\n                        tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                    }\n                }\n            }\n            if (tx.nonce == null) {\n                tx.nonce = this.getTransactionCount(\"pending\");\n            }\n            if (tx.gasLimit == null) {\n                tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                    if (forwardErrors.indexOf(error.code) >= 0) {\n                        throw error;\n                    }\n                    return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                        error: error,\n                        tx: tx\n                    });\n                });\n            }\n            if (tx.chainId == null) {\n                tx.chainId = this.getChainId();\n            }\n            else {\n                tx.chainId = Promise.all([\n                    Promise.resolve(tx.chainId),\n                    this.getChainId()\n                ]).then((results) => {\n                    if (results[1] !== 0 && results[0] !== results[1]) {\n                        logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                    }\n                    return results[0];\n                });\n            }\n            return yield resolveProperties(tx);\n        });\n    }\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n    _checkProvider(operation) {\n        if (!this.provider) {\n            logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: (operation || \"_checkProvider\")\n            });\n        }\n    }\n    static isSigner(value) {\n        return !!(value && value._isSigner);\n    }\n}\nexport class VoidSigner extends Signer {\n    constructor(address, provider) {\n        logger.checkNew(new.target, VoidSigner);\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    _fail(message, operation) {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n    signMessage(message) {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n    signTransaction(transaction) {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n    _signTypedData(domain, types, value) {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n    connect(provider) {\n        return new VoidSigner(this.address, provider);\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"contracts/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { checkResultErrors, Indexed, Interface } from \"@ethersproject/abi\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n///////////////////////////////\nconst allowedTransactionKeys = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true\n};\nfunction resolveName(resolver, nameOrPromise) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const name = yield nameOrPromise;\n        if (typeof (name) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n        }\n        // If it is already an address, just use it (after adding checksum)\n        try {\n            return getAddress(name);\n        }\n        catch (error) { }\n        if (!resolver) {\n            logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"resolveName\"\n            });\n        }\n        const address = yield resolver.resolveName(name);\n        if (address == null) {\n            logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n        }\n        return address;\n    });\n}\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nfunction resolveAddresses(resolver, value, paramType) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (Array.isArray(paramType)) {\n            return yield Promise.all(paramType.map((paramType, index) => {\n                return resolveAddresses(resolver, ((Array.isArray(value)) ? value[index] : value[paramType.name]), paramType);\n            }));\n        }\n        if (paramType.type === \"address\") {\n            return yield resolveName(resolver, value);\n        }\n        if (paramType.type === \"tuple\") {\n            return yield resolveAddresses(resolver, value, paramType.components);\n        }\n        if (paramType.baseType === \"array\") {\n            if (!Array.isArray(value)) {\n                return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"value\",\n                    value\n                }));\n            }\n            return yield Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n        }\n        return value;\n    });\n}\nfunction populateTransaction(contract, fragment, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // If an extra argument is given, it is overrides\n        let overrides = {};\n        if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            overrides = shallowCopy(args.pop());\n        }\n        // Make sure the parameter count matches\n        logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n        // Populate \"from\" override (allow promises)\n        if (contract.signer) {\n            if (overrides.from) {\n                // Contracts with a Signer are from the Signer's frame-of-reference;\n                // but we allow overriding \"from\" if it matches the signer\n                overrides.from = resolveProperties({\n                    override: resolveName(contract.signer, overrides.from),\n                    signer: contract.signer.getAddress()\n                }).then((check) => __awaiter(this, void 0, void 0, function* () {\n                    if (getAddress(check.signer) !== check.override) {\n                        logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"overrides.from\"\n                        });\n                    }\n                    return check.override;\n                }));\n            }\n            else {\n                overrides.from = contract.signer.getAddress();\n            }\n        }\n        else if (overrides.from) {\n            overrides.from = resolveName(contract.provider, overrides.from);\n            //} else {\n            // Contracts without a signer can override \"from\", and if\n            // unspecified the zero address is used\n            //overrides.from = AddressZero;\n        }\n        // Wait for all dependencies to be resolved (prefer the signer over the provider)\n        const resolved = yield resolveProperties({\n            args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n            address: contract.resolvedAddress,\n            overrides: (resolveProperties(overrides) || {})\n        });\n        // The ABI coded transaction\n        const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n        const tx = {\n            data: data,\n            to: resolved.address\n        };\n        // Resolved Overrides\n        const ro = resolved.overrides;\n        // Populate simple overrides\n        if (ro.nonce != null) {\n            tx.nonce = BigNumber.from(ro.nonce).toNumber();\n        }\n        if (ro.gasLimit != null) {\n            tx.gasLimit = BigNumber.from(ro.gasLimit);\n        }\n        if (ro.gasPrice != null) {\n            tx.gasPrice = BigNumber.from(ro.gasPrice);\n        }\n        if (ro.maxFeePerGas != null) {\n            tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas);\n        }\n        if (ro.maxPriorityFeePerGas != null) {\n            tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas);\n        }\n        if (ro.from != null) {\n            tx.from = ro.from;\n        }\n        if (ro.type != null) {\n            tx.type = ro.type;\n        }\n        if (ro.accessList != null) {\n            tx.accessList = accessListify(ro.accessList);\n        }\n        // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n        if (tx.gasLimit == null && fragment.gas != null) {\n            // Compute the intrinsic gas cost for this transaction\n            // @TODO: This is based on the yellow paper as of Petersburg; this is something\n            // we may wish to parameterize in v6 as part of the Network object. Since this\n            // is always a non-nil to address, we can ignore G_create, but may wish to add\n            // similar logic to the ContractFactory.\n            let intrinsic = 21000;\n            const bytes = arrayify(data);\n            for (let i = 0; i < bytes.length; i++) {\n                intrinsic += 4;\n                if (bytes[i]) {\n                    intrinsic += 64;\n                }\n            }\n            tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n        }\n        // Populate \"value\" override\n        if (ro.value) {\n            const roValue = BigNumber.from(ro.value);\n            if (!roValue.isZero() && !fragment.payable) {\n                logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: overrides.value\n                });\n            }\n            tx.value = roValue;\n        }\n        if (ro.customData) {\n            tx.customData = shallowCopy(ro.customData);\n        }\n        // Remove the overrides\n        delete overrides.nonce;\n        delete overrides.gasLimit;\n        delete overrides.gasPrice;\n        delete overrides.from;\n        delete overrides.value;\n        delete overrides.type;\n        delete overrides.accessList;\n        delete overrides.maxFeePerGas;\n        delete overrides.maxPriorityFeePerGas;\n        delete overrides.customData;\n        // Make sure there are no stray overrides, which may indicate a\n        // typo or using an unsupported key.\n        const leftovers = Object.keys(overrides).filter((key) => (overrides[key] != null));\n        if (leftovers.length) {\n            logger.throwError(`cannot override ${leftovers.map((l) => JSON.stringify(l)).join(\",\")}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides\",\n                overrides: leftovers\n            });\n        }\n        return tx;\n    });\n}\nfunction buildPopulate(contract, fragment) {\n    return function (...args) {\n        return populateTransaction(contract, fragment, args);\n    };\n}\nfunction buildEstimate(contract, fragment) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!signerOrProvider) {\n                logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"estimateGas\"\n                });\n            }\n            const tx = yield populateTransaction(contract, fragment, args);\n            return yield signerOrProvider.estimateGas(tx);\n        });\n    };\n}\nfunction addContractWait(contract, tx) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations) => {\n        return wait(confirmations).then((receipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event = deepCopy(log);\n                let parsed = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                }\n                catch (e) { }\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data, topics) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n                // Useful operations\n                event.removeListener = () => { return contract.provider; };\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                };\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                };\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                };\n                return event;\n            });\n            return receipt;\n        });\n    };\n}\nfunction buildCall(contract, fragment, collapseSimple) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Extract the \"blockTag\" override if present\n            let blockTag = undefined;\n            if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n                const overrides = shallowCopy(args.pop());\n                if (overrides.blockTag != null) {\n                    blockTag = yield overrides.blockTag;\n                }\n                delete overrides.blockTag;\n                args.push(overrides);\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed(blockTag);\n            }\n            // Call a node and get the result\n            const tx = yield populateTransaction(contract, fragment, args);\n            const result = yield signerOrProvider.call(tx, blockTag);\n            try {\n                let value = contract.interface.decodeFunctionResult(fragment, result);\n                if (collapseSimple && fragment.outputs.length === 1) {\n                    value = value[0];\n                }\n                return value;\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    error.address = contract.address;\n                    error.args = args;\n                    error.transaction = tx;\n                }\n                throw error;\n            }\n        });\n    };\n}\nfunction buildSend(contract, fragment) {\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!contract.signer) {\n                logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"sendTransaction\"\n                });\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed();\n            }\n            const txRequest = yield populateTransaction(contract, fragment, args);\n            const tx = yield contract.signer.sendTransaction(txRequest);\n            // Tweak the tx.wait so the receipt has extra properties\n            addContractWait(contract, tx);\n            return tx;\n        });\n    };\n}\nfunction buildDefault(contract, fragment, collapseSimple) {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\nfunction getEventTag(filter) {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\") : \"\");\n}\nclass RunningEvent {\n    constructor(tag, filter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [];\n    }\n    addListener(listener, once) {\n        this._listeners.push({ listener: listener, once: once });\n    }\n    removeListener(listener) {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) {\n                return true;\n            }\n            done = true;\n            return false;\n        });\n    }\n    removeAllListeners() {\n        this._listeners = [];\n    }\n    listeners() {\n        return this._listeners.map((i) => i.listener);\n    }\n    listenerCount() {\n        return this._listeners.length;\n    }\n    run(args) {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n            const argsCopy = args.slice();\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n        return listenerCount;\n    }\n    prepareEvent(event) {\n    }\n    // Returns the array that will be applied to an emit\n    getEmit(event) {\n        return [event];\n    }\n}\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    constructor(address, contractInterface, fragment, topics) {\n        const filter = {\n            address: address\n        };\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) {\n                logger.throwArgumentError(\"topic mismatch\", \"topics\", topics);\n            }\n            filter.topics = topics.slice();\n        }\n        else {\n            filter.topics = [topic];\n        }\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n        event.decode = (data, topics) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        }\n        catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n    getEmit(event) {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) {\n            throw errors[0].error;\n        }\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    constructor(address, contractInterface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n            event.decode = (data, topics) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n            event.args = parsed.args;\n        }\n        catch (error) {\n            // No matching event\n        }\n    }\n}\nexport class BaseContract {\n    constructor(addressOrName, contractInterface, signerOrProvider) {\n        logger.checkNew(new.target, Contract);\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        }\n        else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n        defineReadOnly(this, \"callStatic\", {});\n        defineReadOnly(this, \"estimateGas\", {});\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"populateTransaction\", {});\n        defineReadOnly(this, \"filters\", {});\n        {\n            const uniqueFilters = {};\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                    };\n                });\n                if (!uniqueFilters[event.name]) {\n                    uniqueFilters[event.name] = [];\n                }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                }\n                else {\n                    logger.warn(`Duplicate definition of ${name} (${filters.join(\", \")})`);\n                }\n            });\n        }\n        defineReadOnly(this, \"_runningEvents\", {});\n        defineReadOnly(this, \"_wrappedEmits\", {});\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        }\n        else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            }\n            catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n        const uniqueNames = {};\n        const uniqueSignatures = {};\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${name}`]) {\n                    uniqueNames[`%${name}`] = [];\n                }\n                uniqueNames[`%${name}`].push(signature);\n            }\n            if (this[signature] == null) {\n                defineReadOnly(this, signature, buildDefault(this, fragment, true));\n            }\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) {\n                return;\n            }\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n            const signature = signatures[0];\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if (this[name] == null) {\n                    defineReadOnly(this, name, this[signature]);\n                }\n            }\n            catch (e) { }\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n    static getContractAddress(transaction) {\n        return getContractAddress(transaction);\n    }\n    static getInterface(contractInterface) {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n    // @TODO: Allow timeout?\n    deployed() {\n        return this._deployed();\n    }\n    _deployed(blockTag) {\n        if (!this._deployedPromise) {\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n            }\n            else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n        return this._deployedPromise;\n    }\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n    fallback(overrides) {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" });\n        }\n        const tx = shallowCopy(overrides || {});\n        [\"from\", \"to\"].forEach(function (key) {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider) {\n        if (typeof (signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n        const contract = new (this.constructor)(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n        return contract;\n    }\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName) {\n        return new (this.constructor)(addressOrName, this.interface, this.signer || this.provider);\n    }\n    static isIndexed(value) {\n        return Indexed.isIndexed(value);\n    }\n    _normalizeRunningEvent(runningEvent) {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n        }\n        return runningEvent;\n    }\n    _getRunningEvent(eventName) {\n        if (typeof (eventName) === \"string\") {\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName);\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof (topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            }\n            catch (error) { }\n            // Filter by the unknown topichash\n            const filter = {\n                address: this.address,\n                topics: eventName.topics\n            };\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n    _checkRunningEvents(runningEvent) {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent, log, listener) {\n        const event = deepCopy(log);\n        event.removeListener = () => {\n            if (!listener) {\n                return;\n            }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); };\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); };\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); };\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n        return event;\n    }\n    _addEventListener(runningEvent, listener, once) {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" });\n        }\n        runningEvent.addListener(listener, once);\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    }\n                    catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n    queryFilter(event, fromBlockOrBlockhash, toBlock) {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n        if (typeof (fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            filter.blockHash = fromBlockOrBlockhash;\n        }\n        else {\n            filter.fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash : 0);\n            filter.toBlock = ((toBlock != null) ? toBlock : \"latest\");\n        }\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n    on(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n    once(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n    emit(eventName, ...args) {\n        if (!this.provider) {\n            return false;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!this.provider) {\n            return 0;\n        }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n    listeners(eventName) {\n        if (!this.provider) {\n            return [];\n        }\n        if (eventName == null) {\n            const result = [];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener);\n                });\n            }\n            return result;\n        }\n        return this._getRunningEvent(eventName).listeners();\n    }\n    removeAllListeners(eventName) {\n        if (!this.provider) {\n            return this;\n        }\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    off(eventName, listener) {\n        if (!this.provider) {\n            return this;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n}\nexport class Contract extends BaseContract {\n}\nexport class ContractFactory {\n    constructor(contractInterface, bytecode, signer) {\n        let bytecodeHex = null;\n        if (typeof (bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        }\n        else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        }\n        else if (bytecode && typeof (bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = bytecode.object;\n        }\n        else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") {\n            bytecodeHex = \"0x\" + bytecodeHex;\n        }\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args) {\n        let tx = {};\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n        return tx;\n    }\n    deploy(...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let overrides = {};\n            // If 1 extra parameter was passed in, it contains overrides\n            if (args.length === this.interface.deploy.inputs.length + 1) {\n                overrides = args.pop();\n            }\n            // Make sure the call matches the constructor signature\n            logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n            // Resolve ENS names and promises in the arguments\n            const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n            params.push(overrides);\n            // Get the deployment transaction (with optional overrides)\n            const unsignedTx = this.getDeployTransaction(...params);\n            // Send the deployment transaction\n            const tx = yield this.signer.sendTransaction(unsignedTx);\n            const address = getStatic(this.constructor, \"getContractAddress\")(tx);\n            const contract = getStatic(this.constructor, \"getContract\")(address, this.interface, this.signer);\n            // Add the modified wait that wraps events\n            addContractWait(contract, tx);\n            defineReadOnly(contract, \"deployTransaction\", tx);\n            return contract;\n        });\n    }\n    attach(address) {\n        return (this.constructor).getContract(address, this.interface, this.signer);\n    }\n    connect(signer) {\n        return new (this.constructor)(this.interface, this.bytecode, signer);\n    }\n    static fromSolidity(compilerOutput, signer) {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n        if (typeof (compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n        const abi = compilerOutput.abi;\n        let bytecode = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        }\n        else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n        return new this(abi, bytecode, signer);\n    }\n    static getInterface(contractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n    static getContractAddress(tx) {\n        return getContractAddress(tx);\n    }\n    static getContract(address, contractInterface, signer) {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { arrayify, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BigNumber, isBigNumberish } from \"./bignumber\";\nconst _constructorGuard = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\nfunction throwFault(message, fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nexport function formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n    const negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    }\n    else {\n        value = whole + \".\" + fraction;\n    }\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nexport function parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") {\n        fraction = \"0\";\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nexport class FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        if (typeof (value) === \"number\") {\n            value = `fixed128x${value}`;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            const check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\nexport class FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        logger.checkNew(new.target, FixedNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    _checkFormat(other) {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n    addUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n    floor() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    ceiling() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n    isZero() {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n    isNegative() {\n        return (this._value[0] === \"-\");\n    }\n    toString() { return this._value; }\n    toHexString(width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return FixedNumber.fromString(this._value, format);\n    }\n    static fromValue(value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n    static fromString(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        const numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        let hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static fromBytes(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n//# sourceMappingURL=fixednumber.js.map","import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=message.js.map","export const version = \"hash/5.5.0\";\n//# sourceMappingURL=_version.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { id } from \"./id\";\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst NegativeOne = BigNumber.from(-1);\nconst Zero = BigNumber.from(0);\nconst One = BigNumber.from(1);\nconst MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nfunction hexPadRight(value) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return hexConcat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        if (typeof (value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        }\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        try {\n            return BigNumber.from(value).toString();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function (value) {\n        try {\n            return getAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) {\n                throw new Error(\"bad length\");\n            }\n            return hexlify(bytes);\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1) : width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;\n            return function (value) {\n                const v = BigNumber.from(value);\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${type}`, \"value\", value);\n                }\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n            return function (value) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${type}`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\nexport class TypedDataEncoder {\n    constructor(types) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n        defineReadOnly(this, \"_encoderCache\", {});\n        defineReadOnly(this, \"_types\", {});\n        // Link struct types to their direct child structs\n        const links = {};\n        // Link structs to structs which contain them as a child\n        const parents = {};\n        // Link all subtypes within a given struct\n        const subtypes = {};\n        Object.keys(types).forEach((type) => {\n            links[type] = {};\n            parents[type] = [];\n            subtypes[type] = {};\n        });\n        for (const name in types) {\n            const uniqueNames = {};\n            types[name].forEach((field) => {\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    return;\n                }\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        }\n        else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", types);\n        }\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n        // Check for circular type references\n        function checkCircular(type, found) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n            }\n            found[type] = true;\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) {\n                    return;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n            delete found[type];\n        }\n        checkCircular(this.primaryType, {});\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n    getEncoder(type) {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n    _getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(hexConcat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            };\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    encodeType(name) {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        }\n        return result;\n    }\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v) => this._visit(subtype, v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    static encode(domain, types, value) {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n    static resolveNames(domain, types, value, resolveName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Make a copy to isolate it from the object passed in\n            domain = shallowCopy(domain);\n            // Look up all ENS names\n            const ensCache = {};\n            // Do we need to look up the domain's verifyingContract?\n            if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n                ensCache[domain.verifyingContract] = \"0x\";\n            }\n            // We are going to use the encoder to visit all the base values\n            const encoder = TypedDataEncoder.from(types);\n            // Get a list of all the addresses\n            encoder.visit(value, (type, value) => {\n                if (type === \"address\" && !isHexString(value, 20)) {\n                    ensCache[value] = \"0x\";\n                }\n                return value;\n            });\n            // Lookup each name\n            for (const name in ensCache) {\n                ensCache[name] = yield resolveName(name);\n            }\n            // Replace the domain verifyingContract if needed\n            if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n                domain.verifyingContract = ensCache[domain.verifyingContract];\n            }\n            // Replace all ENS names with their address\n            value = encoder.visit(value, (type, value) => {\n                if (type === \"address\" && ensCache[value]) {\n                    return ensCache[value];\n                }\n                return value;\n            });\n            return { domain, value };\n        });\n    }\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        }\n        else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof (value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n//# sourceMappingURL=typed-data.js.map","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nexport class BaseX {\n    constructor(alphabet) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n        defineReadOnly(this, \"_alphabetMap\", {});\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n    encode(value) {\n        let source = arrayify(value);\n        if (source.length === 0) {\n            return \"\";\n        }\n        let digits = [0];\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n        let string = \"\";\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n        return string;\n    }\n    decode(value) {\n        if (typeof (value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        let bytes = [];\n        if (value.length === 0) {\n            return new Uint8Array(bytes);\n        }\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0);\n        }\n        return arrayify(new Uint8Array(bytes.reverse()));\n    }\n}\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\nexport { Base32, Base58 };\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n//# sourceMappingURL=index.js.map","export var SupportedAlgorithm;\n(function (SupportedAlgorithm) {\n    SupportedAlgorithm[\"sha256\"] = \"sha256\";\n    SupportedAlgorithm[\"sha512\"] = \"sha512\";\n})(SupportedAlgorithm || (SupportedAlgorithm = {}));\n;\n//# sourceMappingURL=types.js.map","export const version = \"sha2/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac } from \"@ethersproject/sha2\";\nexport function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen);\n    const block1 = new Uint8Array(salt.length + 4);\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n    let r;\n    let T;\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(hashAlgorithm, password, block1));\n        if (!hLen) {\n            hLen = U.length;\n            T = new Uint8Array(hLen);\n            l = Math.ceil(keylen / hLen);\n            r = keylen - (l - 1) * hLen;\n        }\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++)\n                T[k] ^= U[k];\n        }\n        const destPos = (i - 1) * hLen;\n        const len = (i === l ? r : hLen);\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n    return hexlify(DK);\n}\n//# sourceMappingURL=pbkdf2.js.map","export const version = \"wordlists/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n// This gets overridden by rollup\nconst exportWordlist = false;\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\nexport class Wordlist {\n    constructor(locale) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n    static check(wordlist) {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n    static register(lang, name) {\n        if (!name) {\n            name = lang.locale;\n        }\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = window;\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                        defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            }\n            catch (error) { }\n        }\n    }\n}\n//# sourceMappingURL=wordlist.js.map","\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langEn = new LangEn();\nWordlist.register(langEn);\nexport { langEn };\n//# sourceMappingURL=lang-en.js.map","\"use strict\";\nimport { langEn as en } from \"./lang-en\";\nexport const wordlists = {\n    en: en\n};\n//# sourceMappingURL=wordlists.js.map","export const version = \"hdnode/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { wordlists } from \"@ethersproject/wordlists\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\nconst HardenedBit = 0x80000000;\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits);\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return (1 << bits) - 1;\n}\nfunction bytes32(value) {\n    return hexZeroPad(hexlify(value), 32);\n}\nfunction base58check(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nfunction getWordlist(wordlist) {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n    if (typeof (wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n    return wordlist;\n}\nconst _constructorGuard = {};\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n;\nexport class HDNode {\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n        logger.checkNew(new.target, HDNode);\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        }\n        else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        defineReadOnly(this, \"chainCode\", chainCode);\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n        }\n        else if (typeof (mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n        }\n        else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        if (this.depth >= 256) {\n            throw new Error(\"Depth too large!\");\n        }\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\" : \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([\"0x00\", this.privateKey]) : this.publicKey),\n        ]));\n    }\n    neuter() {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n    _derive(index) {\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n        }\n        const data = new Uint8Array(37);\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n            // Hardened path\n            if (path) {\n                path += \"'\";\n            }\n        }\n        else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) {\n            data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        // The private key\n        let ki = null;\n        // The public key\n        let Ki = null;\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        }\n        else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n        let mnemonicOrPath = path;\n        const srcMnemonic = this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n    derivePath(path) {\n        const components = path.split(\"/\");\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n        if (components[0] === \"m\") {\n            components.shift();\n        }\n        let result = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(HardenedBit + index);\n            }\n            else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(index);\n            }\n            else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n        return result;\n    }\n    static _fromSeed(seed, mnemonic) {\n        const seedArray = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) {\n            throw new Error(\"invalid seed\");\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n    static fromMnemonic(mnemonic, password, wordlist) {\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n    static fromSeed(seed) {\n        return HDNode._fromSeed(seed, null);\n    }\n    static fromExtendedKey(extendedKey) {\n        const bytes = Base58.decode(extendedKey);\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\nexport function mnemonicToSeed(mnemonic, password) {\n    if (!password) {\n        password = \"\";\n    }\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\nexport function mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = getWordlist(wordlist);\n    logger.checkNormalize();\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) {\n        throw new Error(\"invalid mnemonic\");\n    }\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) {\n            throw new Error(\"invalid mnemonic\");\n        }\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = 32 * words.length / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\nexport function entropyToMnemonic(entropy, wordlist) {\n    wordlist = getWordlist(wordlist);\n    entropy = arrayify(entropy);\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nexport function isValidMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getAccountPath(index) {\n    if (typeof (index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${index}'/0/0`;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\nexport function looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\nexport function zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexport function getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\nexport function searchPath(object, path) {\n    let currentChild = object;\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes) {\n    const bytes = arrayify(randomBytes);\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=utils.js.map","export const version = \"json-wallets/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Exported Types\nfunction hasMnemonic(value) {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\nexport class KeystoreAccount extends Description {\n    isKeystoreAccount(value) {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\nfunction _decrypt(data, key, ciphertext) {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n    return null;\n}\nfunction _getAccount(data, key) {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n    const mnemonicKey = key.slice(32, 64);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n        }\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n    const account = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n            account.mnemonic = node.mnemonic;\n        }\n        catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n    return new KeystoreAccount(account);\n}\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n    const passwordBytes = getPassword(password);\n    const kdf = searchPath(data, \"crypto/kdf\");\n    if (kdf && typeof (kdf) === \"string\") {\n        const throwError = function (name, value) {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        };\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n            // Check for all required parameters\n            if (!N || !r || !p) {\n                throwError(\"kdf\", kdf);\n            }\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) {\n                throwError(\"N\", N);\n            }\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            let prfFunc = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            }\n            else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            }\n            else {\n                throwError(\"prf\", prf);\n            }\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\nexport function decryptSync(json, password) {\n    const data = JSON.parse(json);\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\nexport function decrypt(json, password, progressCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const data = JSON.parse(json);\n        const key = yield _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n        return _getAccount(data, key);\n    });\n}\nexport function encrypt(account, password, options, progressCallback) {\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // The options are optional, so adjust the call as needed\n    if (typeof (options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    const privateKey = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n    let entropy = null;\n    let path = null;\n    let locale = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n    let client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    let salt = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    }\n    else {\n        salt = randomBytes(32);\n        ;\n    }\n    // Override initialization vector\n    let iv = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) {\n            throw new Error(\"invalid iv\");\n        }\n    }\n    else {\n        iv = randomBytes(16);\n    }\n    // Override the uuid\n    let uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error(\"invalid uuid\");\n        }\n    }\n    else {\n        uuidRandom = randomBytes(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]));\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            Crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                zpad(now.getUTCDate(), 2) + \"T\" +\n                zpad(now.getUTCHours(), 2) + \"-\" +\n                zpad(now.getUTCMinutes(), 2) + \"-\" +\n                zpad(now.getUTCSeconds(), 2) + \".0Z\");\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n        return JSON.stringify(data);\n    });\n}\n//# sourceMappingURL=keystore.js.map","\"use strict\";\nimport aes from \"aes-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\nexport class CrowdsaleAccount extends Description {\n    isCrowdsaleAccount(value) {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json, password) {\n    const data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    const seedHexBytes = toUtf8Bytes(seedHex);\n    const privateKey = keccak256(seedHexBytes);\n    return new CrowdsaleAccount({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n//# sourceMappingURL=crowdsale.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexport function isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nexport function getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=inspect.js.map","\"use strict\";\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore } from \"./keystore\";\nfunction decryptJsonWallet(json, password, progressCallback) {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        const account = decryptCrowdsale(json, password);\n        if (progressCallback) {\n            progressCallback(1);\n        }\n        return Promise.resolve(account);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nfunction decryptJsonWalletSync(json, password) {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n    throw new Error(\"invalid JSON wallet\");\n}\nexport { decryptCrowdsale, decryptKeystore, decryptKeystoreSync, encryptKeystore, isCrowdsaleWallet, isKeystoreWallet, getJsonWalletAddress, decryptJsonWallet, decryptJsonWalletSync, };\n//# sourceMappingURL=index.js.map","export const version = \"wallet/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { arrayify, concat, hexDataSlice, isHexString, joinSignature } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction isAccount(value) {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\nfunction hasMnemonic(value) {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\nexport class Wallet extends Signer {\n    constructor(privateKey, provider) {\n        logger.checkNew(new.target, Wallet);\n        super();\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => ({\n                    phrase: srcMnemonic.phrase,\n                    path: srcMnemonic.path || defaultPath,\n                    locale: srcMnemonic.locale || \"en\"\n                }));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            }\n            else {\n                defineReadOnly(this, \"_mnemonic\", () => null);\n            }\n        }\n        else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => privateKey);\n            }\n            else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof (privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n            defineReadOnly(this, \"_mnemonic\", () => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    get mnemonic() { return this._mnemonic(); }\n    get privateKey() { return this._signingKey().privateKey; }\n    get publicKey() { return this._signingKey().publicKey; }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    connect(provider) {\n        return new Wallet(this, provider);\n    }\n    signTransaction(transaction) {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n            const signature = this._signingKey().signDigest(keccak256(serialize(tx)));\n            return serialize(tx, signature);\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                if (this.provider == null) {\n                    logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"resolveName\",\n                        value: name\n                    });\n                }\n                return this.provider.resolveName(name);\n            });\n            return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n        });\n    }\n    encrypt(password, options, progressCallback) {\n        if (typeof (options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n        if (progressCallback && typeof (progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n        if (!options) {\n            options = {};\n        }\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options) {\n        let entropy = randomBytes(16);\n        if (!options) {\n            options = {};\n        }\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));\n        }\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n    static fromEncryptedJson(json, password, progressCallback) {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n    static fromEncryptedJsonSync(json, password) {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n    static fromMnemonic(mnemonic, path, wordlist) {\n        if (!path) {\n            path = defaultPath;\n        }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\nexport function verifyMessage(message, signature) {\n    return recoverAddress(hashMessage(message), signature);\n}\nexport function verifyTypedData(domain, types, value, signature) {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n//# sourceMappingURL=index.js.map","export const version = \"networks/5.5.2\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nfunction isRenetworkable(value) {\n    return (value && typeof (value.renetwork) === \"function\");\n}\nfunction ethDefaultProvider(network) {\n    const func = function (providers, options) {\n        if (options == null) {\n            options = {};\n        }\n        const providerList = [];\n        if (providers.InfuraProvider) {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            }\n            catch (error) { }\n        }\n        if (providers.EtherscanProvider) {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            }\n            catch (error) { }\n        }\n        if (providers.AlchemyProvider) {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            }\n            catch (error) { }\n        }\n        if (providers.PocketProvider) {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [\"goerli\", \"ropsten\", \"rinkeby\"];\n            try {\n                const provider = new providers.PocketProvider(network);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            }\n            catch (error) { }\n        }\n        if (providers.CloudflareProvider) {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            }\n            catch (error) { }\n        }\n        if (providerList.length === 0) {\n            return null;\n        }\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            }\n            else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n        return providerList[0];\n    };\n    func.renetwork = function (network) {\n        return ethDefaultProvider(network);\n    };\n    return func;\n}\nfunction etcDefaultProvider(url, network) {\n    const func = function (providers, options) {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n        return null;\n    };\n    func.renetwork = function (network) {\n        return etcDefaultProvider(url, network);\n    };\n    return func;\n}\nconst homestead = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\nconst ropsten = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\nconst classicMordor = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n// See: https://chainlist.org\nconst networks = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n    homestead: homestead,\n    mainnet: homestead,\n    morden: { chainId: 2, name: \"morden\" },\n    ropsten: ropsten,\n    testnet: ropsten,\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n    xdai: { chainId: 100, name: \"xdai\" },\n    matic: { chainId: 137, name: \"matic\" },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n    optimism: { chainId: 10, name: \"optimism\" },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n};\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network) {\n    // No network (null)\n    if (network == null) {\n        return null;\n    }\n    if (typeof (network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n    if (typeof (network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) {\n            return null;\n        }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n    const standard = networks[network.name];\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof (network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        }\n        else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\nfunction bytes2(data) {\n    if ((data.length % 4) !== 0) {\n        throw new Error(\"bad data\");\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\nfunction createTable(data, func) {\n    if (!func) {\n        func = function (value) { return [parseInt(value, 16)]; };\n    }\n    let lo = 0;\n    let result = {};\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n    return result;\n}\nfunction createRangeTable(data) {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        }\n        else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\nfunction matchMap(value, ranges) {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n                continue;\n            }\n            return range;\n        }\n    }\n    return null;\n}\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\nconst Table_B_2_ranges = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [23], l: 127 },\n    { h: 54, s: 1, e: [48], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n    { h: 26, s: 32, e: [17], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [38], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [17], l: 56 },\n    { h: 24, s: -119601, e: [17], l: 58 },\n    { h: 24, s: -119659, e: [17], l: 58 },\n    { h: 24, s: -119717, e: [17], l: 58 },\n    { h: 24, s: -119775, e: [17], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nfunction flatten(values) {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, []);\n}\nexport function _nameprepTableA1(codepoint) {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\nexport function _nameprepTableB2(codepoint) {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) {\n        return [codepoint + range.s];\n    }\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) {\n        return codes;\n    }\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) {\n        return [codepoint + shift[0]];\n    }\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) {\n        return complex;\n    }\n    return null;\n}\nexport function _nameprepTableC(codepoint) {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\nexport function nameprep(value) {\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n        return value.toLowerCase();\n    }\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n        }\n        if (code >= 0xfe00 && code <= 0xfe0f) {\n            return [];\n        }\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) {\n            return codesTableB2;\n        }\n        // No Substitution\n        return [code];\n    }));\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n    // IDNA extras\n    let name = _toUtf8String(codes);\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n    // IDNA: 4.2.4\n    if (name.length > 63) {\n        throw new Error(\"too long\");\n    }\n    return name;\n}\n//# sourceMappingURL=idna.js.map","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { nameprep, toUtf8Bytes } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nexport function isValidName(name) {\n    try {\n        const comps = name.split(\".\");\n        for (let i = 0; i < comps.length; i++) {\n            if (nameprep(comps[i]).length === 0) {\n                throw new Error(\"empty\");\n            }\n        }\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function namehash(name) {\n    /* istanbul ignore if */\n    if (typeof (name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n    let current = name;\n    let result = Zeros;\n    while (current.length) {\n        const partition = current.match(Partition);\n        if (partition == null || partition[2] === \"\") {\n            logger.throwArgumentError(\"invalid ENS address; missing component\", \"name\", name);\n        }\n        const label = toUtf8Bytes(nameprep(partition[3]));\n        result = keccak256(concat([result, keccak256(label)]));\n        current = partition[2] || \"\";\n    }\n    return hexlify(result);\n}\n//# sourceMappingURL=namehash.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function decode(textData) {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\nexport function encode(data) {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n//# sourceMappingURL=base64.js.map","export const version = \"web/5.5.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (options == null) {\n            options = {};\n        }\n        const request = {\n            method: (options.method || \"GET\"),\n            headers: (options.headers || {}),\n            body: (options.body || undefined),\n        };\n        if (options.skipFetchSetup !== true) {\n            request.mode = \"cors\"; // no-cors, cors, *same-origin\n            request.cache = \"no-cache\"; // *default, no-cache, reload, force-cache, only-if-cached\n            request.credentials = \"same-origin\"; // include, *same-origin, omit\n            request.redirect = \"follow\"; // manual, *follow, error\n            request.referrer = \"client\"; // no-referrer, *client\n        }\n        ;\n        const response = yield fetch(href, request);\n        const body = yield response.arrayBuffer();\n        const headers = {};\n        if (response.headers.forEach) {\n            response.headers.forEach((value, key) => {\n                headers[key.toLowerCase()] = value;\n            });\n        }\n        else {\n            ((response.headers).keys)().forEach((key) => {\n                headers[key.toLowerCase()] = response.headers.get(key);\n            });\n        }\n        return {\n            headers: headers,\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            body: arrayify(new Uint8Array(body)),\n        };\n    });\n}\n//# sourceMappingURL=geturl.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getUrl } from \"./geturl\";\nfunction staller(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\nfunction bodyify(value, type) {\n    if (value == null) {\n        return null;\n    }\n    if (typeof (value) === \"string\") {\n        return value;\n    }\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            }\n            catch (error) { }\n            ;\n        }\n        return hexlify(value);\n    }\n    return value;\n}\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData(connection, body, processFunc) {\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof (connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit : 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0), \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n    const throttleCallback = ((typeof (connection) === \"object\") ? connection.throttleCallback : null);\n    const throttleSlotInterval = ((typeof (connection) === \"object\" && typeof (connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval : 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0), \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n    const headers = {};\n    let url = null;\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options = {\n        method: \"GET\",\n    };\n    let allow304 = false;\n    let timeout = 2 * 60 * 1000;\n    if (typeof (connection) === \"string\") {\n        url = connection;\n    }\n    else if (typeof (connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n        url = connection.url;\n        if (typeof (connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n        options.allowGzip = !!connection.allowGzip;\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\"basic authentication requires a secure https url\", Logger.errors.INVALID_ARGUMENT, { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" });\n            }\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n    }\n    const reData = new RegExp(\"^data:([a-z0-9-]+/[a-z0-9-]+);base64,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData) : null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": dataMatch[1] },\n                body: base64Decode(dataMatch[2])\n            };\n            let result = response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(result);\n        }\n        catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n    const flatHeaders = {};\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n    const runningTimeout = (function () {\n        let timer = null;\n        const promise = new Promise(function (resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) {\n                        return;\n                    }\n                    timer = null;\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n        const cancel = function () {\n            if (timer == null) {\n                return;\n            }\n            clearTimeout(timer);\n            timer = null;\n        };\n        return { promise, cancel };\n    })();\n    const runningFetch = (function () {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let attempt = 0; attempt < attemptLimit; attempt++) {\n                let response = null;\n                try {\n                    response = yield getUrl(url, options);\n                    if (attempt < attemptLimit) {\n                        if (response.statusCode === 301 || response.statusCode === 302) {\n                            // Redirection; for now we only support absolute locataions\n                            const location = response.headers.location || \"\";\n                            if (options.method === \"GET\" && location.match(/^https:/)) {\n                                url = response.headers.location;\n                                continue;\n                            }\n                        }\n                        else if (response.statusCode === 429) {\n                            // Exponential back-off throttling\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                let stall = 0;\n                                const retryAfter = response.headers[\"retry-after\"];\n                                if (typeof (retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                    stall = parseInt(retryAfter) * 1000;\n                                }\n                                else {\n                                    stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                }\n                                //console.log(\"Stalling 429\");\n                                yield staller(stall);\n                                continue;\n                            }\n                        }\n                    }\n                }\n                catch (error) {\n                    response = error.response;\n                    if (response == null) {\n                        runningTimeout.cancel();\n                        logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            serverError: error,\n                            url: url\n                        });\n                    }\n                }\n                let body = response.body;\n                if (allow304 && response.statusCode === 304) {\n                    body = null;\n                }\n                else if (response.statusCode < 200 || response.statusCode >= 300) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                        status: response.statusCode,\n                        headers: response.headers,\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n                if (processFunc) {\n                    try {\n                        const result = yield processFunc(body, response);\n                        runningTimeout.cancel();\n                        return result;\n                    }\n                    catch (error) {\n                        // Allow the processFunc to trigger a throttle\n                        if (error.throttleRetry && attempt < attemptLimit) {\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                //console.log(\"Stalling callback\");\n                                yield staller(timeout);\n                                continue;\n                            }\n                        }\n                        runningTimeout.cancel();\n                        logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                            body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                            error: error,\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            url: url\n                        });\n                    }\n                }\n                runningTimeout.cancel();\n                // If we had a processFunc, it either returned a T or threw above.\n                // The \"body\" is now a Uint8Array.\n                return body;\n            }\n            return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n                requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                requestMethod: options.method,\n                url: url\n            });\n        });\n    })();\n    return Promise.race([runningTimeout.promise, runningFetch]);\n}\nexport function fetchJson(connection, json, processFunc) {\n    let processJsonFunc = (value, response) => {\n        let result = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            }\n            catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n        return result;\n    };\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n        // Create a connection with the content-type set for JSON\n        const updated = (typeof (connection) === \"string\") ? ({ url: connection }) : shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        }\n        else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n    return _fetchData(connection, body, processJsonFunc);\n}\nexport function poll(func, options) {\n    if (!options) {\n        options = {};\n    }\n    options = shallowCopy(options);\n    if (options.floor == null) {\n        options.floor = 0;\n    }\n    if (options.ceiling == null) {\n        options.ceiling = 10000;\n    }\n    if (options.interval == null) {\n        options.interval = 250;\n    }\n    return new Promise(function (resolve, reject) {\n        let timer = null;\n        let done = false;\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = () => {\n            if (done) {\n                return false;\n            }\n            done = true;\n            if (timer) {\n                clearTimeout(timer);\n            }\n            return true;\n        };\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) {\n                    reject(new Error(\"timeout\"));\n                }\n            }, options.timeout);\n        }\n        const retryLimit = options.retryLimit;\n        let attempt = 0;\n        function check() {\n            return func().then(function (result) {\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) {\n                        resolve(result);\n                    }\n                }\n                else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n                }\n                else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n                    // Otherwise, exponential back-off (up to 10s) our next request\n                }\n                else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) {\n                            reject(new Error(\"retry limit reached\"));\n                        }\n                        return;\n                    }\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) {\n                        timeout = options.floor;\n                    }\n                    if (timeout > options.ceiling) {\n                        timeout = options.ceiling;\n                    }\n                    setTimeout(check, timeout);\n                }\n                return null;\n            }, function (error) {\n                if (cancel()) {\n                    reject(error);\n                }\n            });\n        }\n        check();\n    });\n}\n//# sourceMappingURL=index.js.map","export const version = \"providers/5.5.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class Formatter {\n    constructor() {\n        logger.checkNew(new.target, Formatter);\n        this.formats = this.getDefaultFormats();\n    }\n    getDefaultFormats() {\n        const formats = ({});\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n        const strictData = (v) => { return this.data(v, true); };\n        formats.transaction = {\n            hash: hash,\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n            confirmations: Formatter.allowNull(number, null),\n            from: address,\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n            creates: Formatter.allowNull(address, null),\n            raw: Formatter.allowNull(data),\n        };\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n        formats.block = {\n            hash: hash,\n            parentHash: hash,\n            number: number,\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n            miner: address,\n            extraData: data,\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n            topics: Formatter.arrayOf(hash),\n            transactionHash: hash,\n            logIndex: number,\n        };\n        return formats;\n    }\n    accessList(accessList) {\n        return accessListify(accessList || []);\n    }\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number) {\n        if (number === \"0x\") {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    type(number) {\n        if (number === \"0x\" || number == null) {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    // Strict! Used on input.\n    bigNumber(value) {\n        return BigNumber.from(value);\n    }\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value) {\n        if (typeof (value) === \"boolean\") {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") {\n                return true;\n            }\n            if (value === \"false\") {\n                return false;\n            }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n    hex(value, strict) {\n        if (typeof (value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") {\n                value = \"0x\" + value;\n            }\n            if (isHexString(value)) {\n                return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n    data(value, strict) {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n    // Requires an address\n    // Strict! Used on input.\n    address(value) {\n        return getAddress(value);\n    }\n    callAddress(value) {\n        if (!isHexString(value, 32)) {\n            return null;\n        }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null : address;\n    }\n    contractAddress(value) {\n        return getContractAddress(value);\n    }\n    // Strict! Used on input.\n    blockTag(blockTag) {\n        if (blockTag == null) {\n            return \"latest\";\n        }\n        if (blockTag === \"earliest\") {\n            return \"0x0\";\n        }\n        if (blockTag === \"latest\" || blockTag === \"pending\") {\n            return blockTag;\n        }\n        if (typeof (blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(blockTag);\n        }\n        throw new Error(\"invalid blockTag\");\n    }\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value, strict) {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value) {\n        if (value == null) {\n            return null;\n        }\n        const v = BigNumber.from(value);\n        try {\n            return v.toNumber();\n        }\n        catch (error) { }\n        return null;\n    }\n    uint256(value) {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n    _block(value, format) {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty : value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null : BigNumber.from(difficulty));\n        return result;\n    }\n    block(value) {\n        return this._block(value, this.formats.block);\n    }\n    blockWithTransactions(value) {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n    // Strict! Used on input.\n    transactionRequest(value) {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n    transactionResponse(transaction) {\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {\n            transaction.accessList = [];\n        }\n        const result = Formatter.check(this.formats.transaction, transaction);\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            result.chainId = chainId;\n        }\n        else {\n            let chainId = transaction.networkId;\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            if (typeof (chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) {\n                    chainId = 0;\n                }\n                chainId = parseInt(chainId);\n            }\n            if (typeof (chainId) !== \"number\") {\n                chainId = 0;\n            }\n            result.chainId = chainId;\n        }\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n        return result;\n    }\n    transaction(value) {\n        return parseTransaction(value);\n    }\n    receiptLog(value) {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n    receipt(value) {\n        const result = Formatter.check(this.formats.receipt, value);\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                }\n                else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            }\n            else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n        return result;\n    }\n    topics(value) {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n        }\n        else if (value != null) {\n            return this.hash(value, true);\n        }\n        return null;\n    }\n    filter(value) {\n        return Formatter.check(this.formats.filter, value);\n    }\n    filterLog(value) {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n    static check(format, object) {\n        const result = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) {\n                    result[key] = value;\n                }\n            }\n            catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n    // if value is null-ish, nullValue is returned\n    static allowNull(format, nullValue) {\n        return (function (value) {\n            if (value == null) {\n                return nullValue;\n            }\n            return format(value);\n        });\n    }\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format, replaceValue) {\n        return (function (value) {\n            if (!value) {\n                return replaceValue;\n            }\n            return format(value);\n        });\n    }\n    // Requires an Array satisfying check\n    static arrayOf(format) {\n        return (function (array) {\n            if (!Array.isArray(array)) {\n                throw new Error(\"not an array\");\n            }\n            const result = [];\n            array.forEach(function (value) {\n                result.push(format(value));\n            });\n            return result;\n        });\n    }\n}\nexport function isCommunityResourcable(value) {\n    return (value && typeof (value.isCommunityResource) === \"function\");\n}\nexport function isCommunityResource(value) {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) {\n        return;\n    }\n    throttleMessage = true;\n    console.log(\"========= NOTICE =========\");\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n//# sourceMappingURL=formatter.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ForkEvent, Provider } from \"@ethersproject/abstract-provider\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { namehash } from \"@ethersproject/hash\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport bech32 from \"bech32\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Formatter } from \"./formatter\";\n//////////////////////////////\n// Event Serializeing\nfunction checkTopic(topic) {\n    if (topic == null) {\n        return \"null\";\n    }\n    if (hexDataLength(topic) !== 32) {\n        logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n    }\n    return topic.toLowerCase();\n}\nfunction serializeTopics(topics) {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) {\n        topics.pop();\n    }\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            // Only track unique OR-topics\n            const unique = {};\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n            return sorted.join(\"|\");\n        }\n        else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\nfunction deserializeTopics(data) {\n    if (data === \"\") {\n        return [];\n    }\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") {\n            return [];\n        }\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null : topic);\n        });\n        return ((comps.length === 1) ? comps[0] : comps);\n    });\n}\nfunction getEventTag(eventName) {\n    if (typeof (eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n    }\n    else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n    }\n    else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n    }\n    else if (eventName && typeof (eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n    throw new Error(\"invalid event - \" + eventName);\n}\n//////////////////////////////\n// Helper Object\nfunction getTime() {\n    return (new Date()).getTime();\n}\nfunction stall(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n//////////////////////////////\n// Provider Object\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\nconst PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\nexport class Event {\n    constructor(tag, listener, once) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n    }\n    get event() {\n        switch (this.type) {\n            case \"tx\":\n                return this.hash;\n            case \"filter\":\n                return this.filter;\n        }\n        return this.tag;\n    }\n    get type() {\n        return this.tag.split(\":\")[0];\n    }\n    get hash() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") {\n            return null;\n        }\n        return comps[1];\n    }\n    get filter() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") {\n            return null;\n        }\n        const address = comps[1];\n        const topics = deserializeTopics(comps[2]);\n        const filter = {};\n        if (topics.length > 0) {\n            filter.topics = topics;\n        }\n        if (address && address !== \"*\") {\n            filter.address = address;\n        }\n        return filter;\n    }\n    pollable() {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n;\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos = {\n    \"0\": { symbol: \"btc\", p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\": { symbol: \"ltc\", p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\": { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\": { symbol: \"eth\", ilk: \"eth\" },\n    \"61\": { symbol: \"etc\", ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\nfunction bytes32ify(value) {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\nfunction _parseString(result) {\n    try {\n        return toUtf8String(_parseBytes(result));\n    }\n    catch (error) { }\n    return null;\n}\nfunction _parseBytes(result) {\n    if (result === \"0x\") {\n        return null;\n    }\n    const offset = BigNumber.from(hexDataSlice(result, 0, 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\nexport class Resolver {\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider, address, name, resolvedAddress) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n    _fetchBytes(selector, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // e.g. keccak256(\"addr(bytes32,uint256)\")\n            const tx = {\n                to: this.address,\n                data: hexConcat([selector, namehash(this.name), (parameters || \"0x\")])\n            };\n            try {\n                return _parseBytes(yield this.provider.call(tx));\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                return null;\n            }\n        });\n    }\n    _getAddress(coinType, hexBytes) {\n        const coinInfo = coinInfos[String(coinType)];\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${coinType}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${coinType})`\n            });\n        }\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n        const bytes = arrayify(hexBytes);\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2pkh], (\"0x\" + p2pkh[2])]));\n                }\n            }\n        }\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2sh], (\"0x\" + p2sh[2])]));\n                }\n            }\n        }\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            }\n            else {\n                version = -1;\n            }\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n        return null;\n    }\n    getAddress(coinType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (coinType == null) {\n                coinType = 60;\n            }\n            // If Ethereum, use the standard `addr(bytes32)`\n            if (coinType === 60) {\n                try {\n                    // keccak256(\"addr(bytes32)\")\n                    const transaction = {\n                        to: this.address,\n                        data: (\"0x3b3b57de\" + namehash(this.name).substring(2))\n                    };\n                    const hexBytes = yield this.provider.call(transaction);\n                    // No address\n                    if (hexBytes === \"0x\" || hexBytes === HashZero) {\n                        return null;\n                    }\n                    return this.provider.formatter.callAddress(hexBytes);\n                }\n                catch (error) {\n                    if (error.code === Logger.errors.CALL_EXCEPTION) {\n                        return null;\n                    }\n                    throw error;\n                }\n            }\n            // keccak256(\"addr(bytes32,uint256\")\n            const hexBytes = yield this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n            // No address\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // Compute the address\n            const address = this._getAddress(coinType, hexBytes);\n            if (address == null) {\n                logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `getAddress(${coinType})`,\n                    coinType: coinType,\n                    data: hexBytes\n                });\n            }\n            return address;\n        });\n    }\n    getAvatar() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const linkage = [];\n            try {\n                // test data for ricmoo.eth\n                //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n                const avatar = yield this.getText(\"avatar\");\n                if (avatar == null) {\n                    return null;\n                }\n                for (let i = 0; i < matchers.length; i++) {\n                    const match = avatar.match(matchers[i]);\n                    if (match == null) {\n                        continue;\n                    }\n                    switch (match[1]) {\n                        case \"https\":\n                            linkage.push({ type: \"url\", content: avatar });\n                            return { linkage, url: avatar };\n                        case \"data\":\n                            linkage.push({ type: \"data\", content: avatar });\n                            return { linkage, url: avatar };\n                        case \"ipfs\":\n                            linkage.push({ type: \"ipfs\", content: avatar });\n                            return { linkage, url: `https:/\\/gateway.ipfs.io/ipfs/${avatar.substring(7)}` };\n                        case \"erc721\":\n                        case \"erc1155\": {\n                            // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                            const selector = (match[1] === \"erc721\") ? \"0xc87b56dd\" : \"0x0e89341c\";\n                            linkage.push({ type: match[1], content: avatar });\n                            // The owner of this name\n                            const owner = (this._resolvedAddress || (yield this.getAddress()));\n                            const comps = (match[2] || \"\").split(\"/\");\n                            if (comps.length !== 2) {\n                                return null;\n                            }\n                            const addr = yield this.provider.formatter.address(comps[0]);\n                            const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n                            // Check that this account owns the token\n                            if (match[1] === \"erc721\") {\n                                // ownerOf(uint256 tokenId)\n                                const tokenOwner = this.provider.formatter.callAddress(yield this.provider.call({\n                                    to: addr, data: hexConcat([\"0x6352211e\", tokenId])\n                                }));\n                                if (owner !== tokenOwner) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"owner\", content: tokenOwner });\n                            }\n                            else if (match[1] === \"erc1155\") {\n                                // balanceOf(address owner, uint256 tokenId)\n                                const balance = BigNumber.from(yield this.provider.call({\n                                    to: addr, data: hexConcat([\"0x00fdd58e\", hexZeroPad(owner, 32), tokenId])\n                                }));\n                                if (balance.isZero()) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"balance\", content: balance.toString() });\n                            }\n                            // Call the token contract for the metadata URL\n                            const tx = {\n                                to: this.provider.formatter.address(comps[0]),\n                                data: hexConcat([selector, tokenId])\n                            };\n                            let metadataUrl = _parseString(yield this.provider.call(tx));\n                            if (metadataUrl == null) {\n                                return null;\n                            }\n                            linkage.push({ type: \"metadata-url\", content: metadataUrl });\n                            // ERC-1155 allows a generic {id} in the URL\n                            if (match[1] === \"erc1155\") {\n                                metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            }\n                            // Get the token metadata\n                            const metadata = yield fetchJson(metadataUrl);\n                            // Pull the image URL out\n                            if (!metadata || typeof (metadata.image) !== \"string\" || !metadata.image.match(/^(https:\\/\\/|data:)/i)) {\n                                return null;\n                            }\n                            linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n                            linkage.push({ type: \"url\", content: metadata.image });\n                            return { linkage, url: metadata.image };\n                        }\n                    }\n                }\n            }\n            catch (error) { }\n            return null;\n        });\n    }\n    getContentHash() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // keccak256(\"contenthash()\")\n            const hexBytes = yield this._fetchBytes(\"0xbc1c58d1\");\n            // No contenthash\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // IPFS (CID: 1, Type: DAG-PB)\n            const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n            if (ipfs) {\n                const length = parseInt(ipfs[3], 16);\n                if (ipfs[4].length === length * 2) {\n                    return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n                }\n            }\n            // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n            const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n            if (swarm) {\n                if (swarm[1].length === (32 * 2)) {\n                    return \"bzz:/\\/\" + swarm[1];\n                }\n            }\n            return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"getContentHash()\",\n                data: hexBytes\n            });\n        });\n    }\n    getText(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The key encoded as parameter to fetchBytes\n            let keyBytes = toUtf8Bytes(key);\n            // The nodehash consumes the first slot, so the string pointer targets\n            // offset 64, with the length at offset 64 and data starting at offset 96\n            keyBytes = concat([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);\n            // Pad to word-size (32 bytes)\n            if ((keyBytes.length % 32) !== 0) {\n                keyBytes = concat([keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32))]);\n            }\n            const hexBytes = yield this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            return toUtf8String(hexBytes);\n        });\n    }\n}\nlet defaultFormatter = null;\nlet nextPollId = 1;\nexport class BaseProvider extends Provider {\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n    constructor(network) {\n        logger.checkNew(new.target, Provider);\n        super();\n        // Events being listened to\n        this._events = [];\n        this._emitted = { block: -2 };\n        this.formatter = new.target.getFormatter();\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) {\n            network = this.detectNetwork();\n        }\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n        }\n        else {\n            const knownNetwork = getStatic(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n            }\n            else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n        this._maxInternalBlockNumber = -1024;\n        this._lastBlockNumber = -2;\n        this._pollingInterval = 4000;\n        this._fastQueryDate = 0;\n    }\n    _ready() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._network == null) {\n                let network = null;\n                if (this._networkPromise) {\n                    try {\n                        network = yield this._networkPromise;\n                    }\n                    catch (error) { }\n                }\n                // Try the Provider's network detection (this MUST throw if it cannot)\n                if (network == null) {\n                    network = yield this.detectNetwork();\n                }\n                // This should never happen; every Provider sub-class should have\n                // suggested a network by here (or have thrown).\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // Possible this call stacked so do not call defineReadOnly again\n                if (this._network == null) {\n                    if (this.anyNetwork) {\n                        this._network = network;\n                    }\n                    else {\n                        defineReadOnly(this, \"_network\", network);\n                    }\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return this._network;\n        });\n    }\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready() {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter() {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network) {\n        return getNetwork((network == null) ? \"homestead\" : network);\n    }\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    _getInternalBlockNumber(maxAge) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._ready();\n            // Allowing stale data up to maxAge old\n            if (maxAge > 0) {\n                // While there are pending internal block requests...\n                while (this._internalBlockNumber) {\n                    // ...\"remember\" which fetch we started with\n                    const internalBlockNumber = this._internalBlockNumber;\n                    try {\n                        // Check the result is not too stale\n                        const result = yield internalBlockNumber;\n                        if ((getTime() - result.respTime) <= maxAge) {\n                            return result.blockNumber;\n                        }\n                        // Too old; fetch a new value\n                        break;\n                    }\n                    catch (error) {\n                        // The fetch rejected; if we are the first to get the\n                        // rejection, drop through so we replace it with a new\n                        // fetch; all others blocked will then get that fetch\n                        // which won't match the one they \"remembered\" and loop\n                        if (this._internalBlockNumber === internalBlockNumber) {\n                            break;\n                        }\n                    }\n                }\n            }\n            const reqTime = getTime();\n            const checkInternalBlockNumber = resolveProperties({\n                blockNumber: this.perform(\"getBlockNumber\", {}),\n                networkError: this.getNetwork().then((network) => (null), (error) => (error))\n            }).then(({ blockNumber, networkError }) => {\n                if (networkError) {\n                    // Unremember this bad internal block number\n                    if (this._internalBlockNumber === checkInternalBlockNumber) {\n                        this._internalBlockNumber = null;\n                    }\n                    throw networkError;\n                }\n                const respTime = getTime();\n                blockNumber = BigNumber.from(blockNumber).toNumber();\n                if (blockNumber < this._maxInternalBlockNumber) {\n                    blockNumber = this._maxInternalBlockNumber;\n                }\n                this._maxInternalBlockNumber = blockNumber;\n                this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n                return { blockNumber, reqTime, respTime };\n            });\n            this._internalBlockNumber = checkInternalBlockNumber;\n            // Swallow unhandled exceptions; if needed they are handled else where\n            checkInternalBlockNumber.catch((error) => {\n                // Don't null the dead (rejected) fetch, if it has already been updated\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n            });\n            return (yield checkInternalBlockNumber).blockNumber;\n        });\n    }\n    poll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const pollId = nextPollId++;\n            // Track all running promises, so we can trigger a post-poll once they are complete\n            const runners = [];\n            let blockNumber = null;\n            try {\n                blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n            }\n            catch (error) {\n                this.emit(\"error\", error);\n                return;\n            }\n            this._setFastBlockNumber(blockNumber);\n            // Emit a poll event after we have the latest (fast) block number\n            this.emit(\"poll\", pollId, blockNumber);\n            // If the block has not changed, meh.\n            if (blockNumber === this._lastBlockNumber) {\n                this.emit(\"didPoll\", pollId);\n                return;\n            }\n            // First polling cycle, trigger a \"block\" events\n            if (this._emitted.block === -2) {\n                this._emitted.block = blockNumber - 1;\n            }\n            if (Math.abs((this._emitted.block) - blockNumber) > 1000) {\n                logger.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);\n                this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                    blockNumber: blockNumber,\n                    event: \"blockSkew\",\n                    previousBlockNumber: this._emitted.block\n                }));\n                this.emit(\"block\", blockNumber);\n            }\n            else {\n                // Notify all listener for each block that has passed\n                for (let i = this._emitted.block + 1; i <= blockNumber; i++) {\n                    this.emit(\"block\", i);\n                }\n            }\n            // The emitted block was updated, check for obsolete events\n            if (this._emitted.block !== blockNumber) {\n                this._emitted.block = blockNumber;\n                Object.keys(this._emitted).forEach((key) => {\n                    // The block event does not expire\n                    if (key === \"block\") {\n                        return;\n                    }\n                    // The block we were at when we emitted this event\n                    const eventBlockNumber = this._emitted[key];\n                    // We cannot garbage collect pending transactions or blocks here\n                    // They should be garbage collected by the Provider when setting\n                    // \"pending\" events\n                    if (eventBlockNumber === \"pending\") {\n                        return;\n                    }\n                    // Evict any transaction hashes or block hashes over 12 blocks\n                    // old, since they should not return null anyways\n                    if (blockNumber - eventBlockNumber > 12) {\n                        delete this._emitted[key];\n                    }\n                });\n            }\n            // First polling cycle\n            if (this._lastBlockNumber === -2) {\n                this._lastBlockNumber = blockNumber - 1;\n            }\n            // Find all transaction hashes we are waiting on\n            this._events.forEach((event) => {\n                switch (event.type) {\n                    case \"tx\": {\n                        const hash = event.hash;\n                        let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                            if (!receipt || receipt.blockNumber == null) {\n                                return null;\n                            }\n                            this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                            this.emit(hash, receipt);\n                            return null;\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                    case \"filter\": {\n                        const filter = event.filter;\n                        filter.fromBlock = this._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n                        const runner = this.getLogs(filter).then((logs) => {\n                            if (logs.length === 0) {\n                                return;\n                            }\n                            logs.forEach((log) => {\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                                this.emit(filter, log);\n                            });\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                }\n            });\n            this._lastBlockNumber = blockNumber;\n            // Once all events for this loop have been processed, emit \"didPoll\"\n            Promise.all(runners).then(() => {\n                this.emit(\"didPoll\", pollId);\n            }).catch((error) => { this.emit(\"error\", error); });\n            return;\n        });\n    }\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber) {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) {\n            this.poll();\n        }\n    }\n    get network() {\n        return this._network;\n    }\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"provider.detectNetwork\"\n            });\n        });\n    }\n    getNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const network = yield this._ready();\n            // Make sure we are still connected to the same network; this is\n            // only an external call for backends which can have the underlying\n            // network change spontaneously\n            const currentNetwork = yield this.detectNetwork();\n            if (network.chainId !== currentNetwork.chainId) {\n                // We are allowing network changes, things can get complex fast;\n                // make sure you know what you are doing if you use \"any\"\n                if (this.anyNetwork) {\n                    this._network = currentNetwork;\n                    // Reset all internal block number guards and caches\n                    this._lastBlockNumber = -2;\n                    this._fastBlockNumber = null;\n                    this._fastBlockNumberPromise = null;\n                    this._fastQueryDate = 0;\n                    this._emitted.block = -2;\n                    this._maxInternalBlockNumber = -1024;\n                    this._internalBlockNumber = null;\n                    // The \"network\" event MUST happen before this method resolves\n                    // so any events have a chance to unregister, so we stall an\n                    // additional event loop before returning from /this/ call\n                    this.emit(\"network\", currentNetwork, network);\n                    yield stall(0);\n                    return this._network;\n                }\n                const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                    event: \"changed\",\n                    network: network,\n                    detectedNetwork: currentNetwork\n                });\n                this.emit(\"error\", error);\n                throw error;\n            }\n            return network;\n        });\n    }\n    get blockNumber() {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber : -1;\n    }\n    get polling() {\n        return (this._poller != null);\n    }\n    set polling(value) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) {\n                            this.poll();\n                        }\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n        }\n        else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n    get pollingInterval() {\n        return this._pollingInterval;\n    }\n    set pollingInterval(value) {\n        if (typeof (value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n        this._pollingInterval = value;\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n    _getFastBlockNumber() {\n        const now = getTime();\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n        return this._fastBlockNumberPromise;\n    }\n    _setFastBlockNumber(blockNumber) {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n            return;\n        }\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n    waitForTransaction(transactionHash, confirmations, timeout) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._waitForTransaction(transactionHash, (confirmations == null) ? 1 : confirmations, timeout || 0, null);\n        });\n    }\n    _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const receipt = yield this.getTransactionReceipt(transactionHash);\n            // Receipt is already good\n            if ((receipt ? receipt.confirmations : 0) >= confirmations) {\n                return receipt;\n            }\n            // Poll until the receipt is good...\n            return new Promise((resolve, reject) => {\n                const cancelFuncs = [];\n                let done = false;\n                const alreadyDone = function () {\n                    if (done) {\n                        return true;\n                    }\n                    done = true;\n                    cancelFuncs.forEach((func) => { func(); });\n                    return false;\n                };\n                const minedHandler = (receipt) => {\n                    if (receipt.confirmations < confirmations) {\n                        return;\n                    }\n                    if (alreadyDone()) {\n                        return;\n                    }\n                    resolve(receipt);\n                };\n                this.on(transactionHash, minedHandler);\n                cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n                if (replaceable) {\n                    let lastBlockNumber = replaceable.startBlock;\n                    let scannedBlock = null;\n                    const replaceHandler = (blockNumber) => __awaiter(this, void 0, void 0, function* () {\n                        if (done) {\n                            return;\n                        }\n                        // Wait 1 second; this is only used in the case of a fault, so\n                        // we will trade off a little bit of latency for more consistent\n                        // results and fewer JSON-RPC calls\n                        yield stall(1000);\n                        this.getTransactionCount(replaceable.from).then((nonce) => __awaiter(this, void 0, void 0, function* () {\n                            if (done) {\n                                return;\n                            }\n                            if (nonce <= replaceable.nonce) {\n                                lastBlockNumber = blockNumber;\n                            }\n                            else {\n                                // First check if the transaction was mined\n                                {\n                                    const mined = yield this.getTransaction(transactionHash);\n                                    if (mined && mined.blockNumber != null) {\n                                        return;\n                                    }\n                                }\n                                // First time scanning. We start a little earlier for some\n                                // wiggle room here to handle the eventually consistent nature\n                                // of blockchain (e.g. the getTransactionCount was for a\n                                // different block)\n                                if (scannedBlock == null) {\n                                    scannedBlock = lastBlockNumber - 3;\n                                    if (scannedBlock < replaceable.startBlock) {\n                                        scannedBlock = replaceable.startBlock;\n                                    }\n                                }\n                                while (scannedBlock <= blockNumber) {\n                                    if (done) {\n                                        return;\n                                    }\n                                    const block = yield this.getBlockWithTransactions(scannedBlock);\n                                    for (let ti = 0; ti < block.transactions.length; ti++) {\n                                        const tx = block.transactions[ti];\n                                        // Successfully mined!\n                                        if (tx.hash === transactionHash) {\n                                            return;\n                                        }\n                                        // Matches our transaction from and nonce; its a replacement\n                                        if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                            if (done) {\n                                                return;\n                                            }\n                                            // Get the receipt of the replacement\n                                            const receipt = yield this.waitForTransaction(tx.hash, confirmations);\n                                            // Already resolved or rejected (prolly a timeout)\n                                            if (alreadyDone()) {\n                                                return;\n                                            }\n                                            // The reason we were replaced\n                                            let reason = \"replaced\";\n                                            if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                                reason = \"repriced\";\n                                            }\n                                            else if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                                reason = \"cancelled\";\n                                            }\n                                            // Explain why we were replaced\n                                            reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                                cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                                reason,\n                                                replacement: this._wrapTransaction(tx),\n                                                hash: transactionHash,\n                                                receipt\n                                            }));\n                                            return;\n                                        }\n                                    }\n                                    scannedBlock++;\n                                }\n                            }\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        }), (error) => {\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        });\n                    });\n                    if (done) {\n                        return;\n                    }\n                    this.once(\"block\", replaceHandler);\n                    cancelFuncs.push(() => {\n                        this.removeListener(\"block\", replaceHandler);\n                    });\n                }\n                if (typeof (timeout) === \"number\" && timeout > 0) {\n                    const timer = setTimeout(() => {\n                        if (alreadyDone()) {\n                            return;\n                        }\n                        reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                    }, timeout);\n                    if (timer.unref) {\n                        timer.unref();\n                    }\n                    cancelFuncs.push(() => { clearTimeout(timer); });\n                }\n            });\n        });\n    }\n    getBlockNumber() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._getInternalBlockNumber(0);\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const result = yield this.perform(\"getGasPrice\", {});\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getGasPrice\",\n                    result, error\n                });\n            }\n        });\n    }\n    getBalance(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getBalance\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getBalance\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getTransactionCount(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getTransactionCount\", params);\n            try {\n                return BigNumber.from(result).toNumber();\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getTransactionCount\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getCode(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getCode\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getCode\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getStorageAt(addressOrName, position, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag),\n                position: Promise.resolve(position).then((p) => hexValue(p))\n            });\n            const result = yield this.perform(\"getStorageAt\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getStorageAt\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx, hash, startBlock) {\n        if (hash != null && hexDataLength(hash) !== 32) {\n            throw new Error(\"invalid response - sendTransaction\");\n        }\n        const result = tx;\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n        result.wait = (confirms, timeout) => __awaiter(this, void 0, void 0, function* () {\n            if (confirms == null) {\n                confirms = 1;\n            }\n            if (timeout == null) {\n                timeout = 0;\n            }\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n            const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) {\n                return null;\n            }\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        });\n        return result;\n    }\n    sendTransaction(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const hexTx = yield Promise.resolve(signedTransaction).then(t => hexlify(t));\n            const tx = this.formatter.transaction(signedTransaction);\n            if (tx.confirmations == null) {\n                tx.confirmations = 0;\n            }\n            const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            try {\n                const hash = yield this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n                return this._wrapTransaction(tx, hash, blockNumber);\n            }\n            catch (error) {\n                error.transaction = tx;\n                error.transactionHash = tx.hash;\n                throw error;\n            }\n        });\n    }\n    _getTransactionRequest(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const values = yield transaction;\n            const tx = {};\n            [\"from\", \"to\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v) : null));\n            });\n            [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v) : null));\n            });\n            [\"type\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v : null));\n            });\n            if (values.accessList) {\n                tx.accessList = this.formatter.accessList(values.accessList);\n            }\n            [\"data\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v) : null));\n            });\n            return this.formatter.transactionRequest(yield resolveProperties(tx));\n        });\n    }\n    _getFilter(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            filter = yield filter;\n            const result = {};\n            if (filter.address != null) {\n                result.address = this._getAddress(filter.address);\n            }\n            [\"blockHash\", \"topics\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = filter[key];\n            });\n            [\"fromBlock\", \"toBlock\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = this._getBlockTag(filter[key]);\n            });\n            return this.formatter.filter(yield resolveProperties(result));\n        });\n    }\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"call\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"call\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction)\n            });\n            const result = yield this.perform(\"estimateGas\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"estimateGas\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    _getAddress(addressOrName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            addressOrName = yield addressOrName;\n            if (typeof (addressOrName) !== \"string\") {\n                logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n            }\n            const address = yield this.resolveName(addressOrName);\n            if (address == null) {\n                logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `resolveName(${JSON.stringify(addressOrName)})`\n                });\n            }\n            return address;\n        });\n    }\n    _getBlock(blockHashOrBlockTag, includeTransactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            blockHashOrBlockTag = yield blockHashOrBlockTag;\n            // If blockTag is a number (not \"latest\", etc), this is the block number\n            let blockNumber = -128;\n            const params = {\n                includeTransactions: !!includeTransactions\n            };\n            if (isHexString(blockHashOrBlockTag, 32)) {\n                params.blockHash = blockHashOrBlockTag;\n            }\n            else {\n                try {\n                    params.blockTag = yield this._getBlockTag(blockHashOrBlockTag);\n                    if (isHexString(params.blockTag)) {\n                        blockNumber = parseInt(params.blockTag.substring(2), 16);\n                    }\n                }\n                catch (error) {\n                    logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n                }\n            }\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const block = yield this.perform(\"getBlock\", params);\n                // Block was not found\n                if (block == null) {\n                    // For blockhashes, if we didn't say it existed, that blockhash may\n                    // not exist. If we did see it though, perhaps from a log, we know\n                    // it exists, and this node is just not caught up yet.\n                    if (params.blockHash != null) {\n                        if (this._emitted[\"b:\" + params.blockHash] == null) {\n                            return null;\n                        }\n                    }\n                    // For block tags, if we are asking for a future block, we return null\n                    if (params.blockTag != null) {\n                        if (blockNumber > this._emitted.block) {\n                            return null;\n                        }\n                    }\n                    // Retry on the next block\n                    return undefined;\n                }\n                // Add transactions\n                if (includeTransactions) {\n                    let blockNumber = null;\n                    for (let i = 0; i < block.transactions.length; i++) {\n                        const tx = block.transactions[i];\n                        if (tx.blockNumber == null) {\n                            tx.confirmations = 0;\n                        }\n                        else if (tx.confirmations == null) {\n                            if (blockNumber == null) {\n                                blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                            }\n                            // Add the confirmations using the fast block number (pessimistic)\n                            let confirmations = (blockNumber - tx.blockNumber) + 1;\n                            if (confirmations <= 0) {\n                                confirmations = 1;\n                            }\n                            tx.confirmations = confirmations;\n                        }\n                    }\n                    const blockWithTxs = this.formatter.blockWithTransactions(block);\n                    blockWithTxs.transactions = blockWithTxs.transactions.map((tx) => this._wrapTransaction(tx));\n                    return blockWithTxs;\n                }\n                return this.formatter.block(block);\n            }), { oncePoll: this });\n        });\n    }\n    getBlock(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, false));\n    }\n    getBlockWithTransactions(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, true));\n    }\n    getTransaction(transactionHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransaction\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                const tx = this.formatter.transactionResponse(result);\n                if (tx.blockNumber == null) {\n                    tx.confirmations = 0;\n                }\n                else if (tx.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - tx.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    tx.confirmations = confirmations;\n                }\n                return this._wrapTransaction(tx);\n            }), { oncePoll: this });\n        });\n    }\n    getTransactionReceipt(transactionHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransactionReceipt\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                // \"geth-etc\" returns receipts before they are ready\n                if (result.blockHash == null) {\n                    return undefined;\n                }\n                const receipt = this.formatter.receipt(result);\n                if (receipt.blockNumber == null) {\n                    receipt.confirmations = 0;\n                }\n                else if (receipt.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    receipt.confirmations = confirmations;\n                }\n                return receipt;\n            }), { oncePoll: this });\n        });\n    }\n    getLogs(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({ filter: this._getFilter(filter) });\n            const logs = yield this.perform(\"getLogs\", params);\n            logs.forEach((log) => {\n                if (log.removed == null) {\n                    log.removed = false;\n                }\n            });\n            return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n        });\n    }\n    getEtherPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            return this.perform(\"getEtherPrice\", {});\n        });\n    }\n    _getBlockTag(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            blockTag = yield blockTag;\n            if (typeof (blockTag) === \"number\" && blockTag < 0) {\n                if (blockTag % 1) {\n                    logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n                }\n                let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                blockNumber += blockTag;\n                if (blockNumber < 0) {\n                    blockNumber = 0;\n                }\n                return this.formatter.blockTag(blockNumber);\n            }\n            return this.formatter.blockTag(blockTag);\n        });\n    }\n    getResolver(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const address = yield this._getResolver(name);\n                if (address == null) {\n                    return null;\n                }\n                return new Resolver(this, address, name);\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                return null;\n            }\n        });\n    }\n    _getResolver(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Get the resolver from the blockchain\n            const network = yield this.getNetwork();\n            // No ENS...\n            if (!network.ensAddress) {\n                logger.throwError(\"network does not support ENS\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"ENS\", network: network.name });\n            }\n            // keccak256(\"resolver(bytes32)\")\n            const transaction = {\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            };\n            try {\n                return this.formatter.callAddress(yield this.call(transaction));\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                throw error;\n            }\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            name = yield name;\n            // If it is already an address, nothing to resolve\n            try {\n                return Promise.resolve(this.formatter.address(name));\n            }\n            catch (error) {\n                // If is is a hexstring, the address is bad (See #694)\n                if (isHexString(name)) {\n                    throw error;\n                }\n            }\n            if (typeof (name) !== \"string\") {\n                logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n            }\n            // Get the addr from the resovler\n            const resolver = yield this.getResolver(name);\n            if (!resolver) {\n                return null;\n            }\n            return yield resolver.getAddress();\n        });\n    }\n    lookupAddress(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            address = yield address;\n            address = this.formatter.address(address);\n            const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n            const resolverAddress = yield this._getResolver(reverseName);\n            if (!resolverAddress) {\n                return null;\n            }\n            // keccak(\"name(bytes32)\")\n            let bytes = arrayify(yield this.call({\n                to: resolverAddress,\n                data: (\"0x691f3431\" + namehash(reverseName).substring(2))\n            }));\n            // Strip off the dynamic string pointer (0x20)\n            if (bytes.length < 32 || !BigNumber.from(bytes.slice(0, 32)).eq(32)) {\n                return null;\n            }\n            bytes = bytes.slice(32);\n            // Not a length-prefixed string\n            if (bytes.length < 32) {\n                return null;\n            }\n            // Get the length of the string (from the length-prefix)\n            const length = BigNumber.from(bytes.slice(0, 32)).toNumber();\n            bytes = bytes.slice(32);\n            // Length longer than available data\n            if (length > bytes.length) {\n                return null;\n            }\n            const name = toUtf8String(bytes.slice(0, length));\n            // Make sure the reverse record matches the foward record\n            const addr = yield this.resolveName(name);\n            if (addr != address) {\n                return null;\n            }\n            return name;\n        });\n    }\n    getAvatar(nameOrAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resolver = null;\n            if (isHexString(nameOrAddress)) {\n                // Address; reverse lookup\n                const address = this.formatter.address(nameOrAddress);\n                const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n                const resolverAddress = yield this._getResolver(reverseName);\n                if (!resolverAddress) {\n                    return null;\n                }\n                resolver = new Resolver(this, resolverAddress, \"_\", address);\n            }\n            else {\n                // ENS name; forward lookup\n                resolver = yield this.getResolver(nameOrAddress);\n                if (!resolver) {\n                    return null;\n                }\n            }\n            const avatar = yield resolver.getAvatar();\n            if (avatar == null) {\n                return null;\n            }\n            return avatar.url;\n        });\n    }\n    perform(method, params) {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n    _startEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _stopEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _addEventListener(eventName, listener, once) {\n        const event = new Event(getEventTag(eventName), listener, once);\n        this._events.push(event);\n        this._startEvent(event);\n        return this;\n    }\n    on(eventName, listener) {\n        return this._addEventListener(eventName, listener, false);\n    }\n    once(eventName, listener) {\n        return this._addEventListener(eventName, listener, true);\n    }\n    emit(eventName, ...args) {\n        let result = false;\n        let stopped = [];\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) {\n                return true;\n            }\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n            result = true;\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n            return true;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!eventName) {\n            return this._events.length;\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n    listeners(eventName) {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n    off(eventName, listener) {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n        const stopped = [];\n        let found = false;\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) {\n                return true;\n            }\n            if (found) {\n                return true;\n            }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n    removeAllListeners(eventName) {\n        let stopped = [];\n        if (eventName == null) {\n            stopped = this._events;\n            this._events = [];\n        }\n        else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) {\n                    return true;\n                }\n                stopped.push(event);\n                return false;\n            });\n        }\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n}\n//# sourceMappingURL=base-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\nconst errorGas = [\"call\", \"estimateGas\"];\nfunction checkError(method, error, params) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n            return e.data;\n        }\n        logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n            error, data: \"0x\"\n        });\n    }\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof (error.error.message) === \"string\") {\n        message = error.error.message;\n    }\n    else if (typeof (error.body) === \"string\") {\n        message = error.body;\n    }\n    else if (typeof (error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n    const transaction = params.transaction || params.signedTransaction;\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"nonce too low\"\n    if (message.match(/nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nfunction timer(timeout) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\nfunction getResult(payload) {\n    if (payload.error) {\n        // @TODO: not any\n        const error = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n    return payload.result;\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nconst _constructorGuard = {};\nexport class JsonRpcSigner extends Signer {\n    constructor(constructorGuard, provider, addressOrIndex) {\n        logger.checkNew(new.target, JsonRpcSigner);\n        super();\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n        defineReadOnly(this, \"provider\", provider);\n        if (addressOrIndex == null) {\n            addressOrIndex = 0;\n        }\n        if (typeof (addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n        }\n        else if (typeof (addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n    connect(provider) {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n    connectUnchecked() {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n    getAddress() {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index]);\n        });\n    }\n    sendUncheckedTransaction(transaction) {\n        transaction = shallowCopy(transaction);\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) {\n                address = address.toLowerCase();\n            }\n            return address;\n        });\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                if (to == null) {\n                    return null;\n                }\n                const address = yield this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            }));\n        }\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            }\n            else {\n                tx.from = sender;\n            }\n            const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });\n            return this.provider.send(\"eth_sendTransaction\", [hexTx]).then((hash) => {\n                return hash;\n            }, (error) => {\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n    signTransaction(transaction) {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // This cannot be mined any earlier than any recent block\n            const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n            // Send the transaction\n            const hash = yield this.sendUncheckedTransaction(transaction);\n            try {\n                // Unfortunately, JSON-RPC only provides and opaque transaction hash\n                // for a response, and we need the actual transaction, so we poll\n                // for it; it should show up very quickly\n                return yield poll(() => __awaiter(this, void 0, void 0, function* () {\n                    const tx = yield this.provider.getTransaction(hash);\n                    if (tx === null) {\n                        return undefined;\n                    }\n                    return this.provider._wrapTransaction(tx, hash, blockNumber);\n                }), { oncePoll: this.provider });\n            }\n            catch (error) {\n                error.transactionHash = hash;\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"personal_sign\", [hexlify(data), address.toLowerCase()]);\n        });\n    }\n    _legacySignMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names (in-place)\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                return this.provider.resolveName(name);\n            });\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        });\n    }\n    unlock(password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = this.provider;\n            const address = yield this.getAddress();\n            return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n        });\n    }\n}\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction) {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return {\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\nconst allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n};\nexport class JsonRpcProvider extends BaseProvider {\n    constructor(url, network) {\n        logger.checkNew(new.target, JsonRpcProvider);\n        let networkOrReady = network;\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Default URL\n        if (!url) {\n            url = getStatic(this.constructor, \"defaultUrl\")();\n        }\n        if (typeof (url) === \"string\") {\n            defineReadOnly(this, \"connection\", Object.freeze({\n                url: url\n            }));\n        }\n        else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n        this._nextId = 42;\n    }\n    get _cache() {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = {};\n        }\n        return this._eventLoopCache;\n    }\n    static defaultUrl() {\n        return \"http:/\\/localhost:8545\";\n    }\n    detectNetwork() {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n    _uncachedDetectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield timer(0);\n            let chainId = null;\n            try {\n                chainId = yield this.send(\"eth_chainId\", []);\n            }\n            catch (error) {\n                try {\n                    chainId = yield this.send(\"net_version\", []);\n                }\n                catch (error) { }\n            }\n            if (chainId != null) {\n                const getNetwork = getStatic(this.constructor, \"getNetwork\");\n                try {\n                    return getNetwork(BigNumber.from(chainId).toNumber());\n                }\n                catch (error) {\n                    return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                        chainId: chainId,\n                        event: \"invalidNetwork\",\n                        serverError: error\n                    });\n                }\n            }\n            return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                event: \"noNetwork\"\n            });\n        });\n    }\n    getSigner(addressOrIndex) {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n    getUncheckedSigner(addressOrIndex) {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n    listAccounts() {\n        return this.send(\"eth_accounts\", []).then((accounts) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n            return result;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n            throw error;\n        });\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n        return result;\n    }\n    prepareRequest(method, params) {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [\"eth_blockNumber\", []];\n            case \"getGasPrice\":\n                return [\"eth_gasPrice\", []];\n            case \"getBalance\":\n                return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n            case \"getTransactionCount\":\n                return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n            case \"getCode\":\n                return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n            case \"getStorageAt\":\n                return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n            case \"sendTransaction\":\n                return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n                }\n                else if (params.blockHash) {\n                    return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n                }\n                return null;\n            case \"getTransaction\":\n                return [\"eth_getTransactionByHash\", [params.transactionHash]];\n            case \"getTransactionReceipt\":\n                return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n            case \"call\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_call\", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];\n            }\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, { from: true })]];\n            }\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [\"eth_getLogs\", [params.filter]];\n            default:\n                break;\n        }\n        return null;\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Legacy networks do not like the type field being passed along (which\n            // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n            if (method === \"call\" || method === \"estimateGas\") {\n                const tx = params.transaction;\n                if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                    // If there are no EIP-1559 properties, it might be non-EIP-a559\n                    if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                        const feeData = yield this.getFeeData();\n                        if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                            // Network doesn't know about EIP-1559 (and hence type)\n                            params = shallowCopy(params);\n                            params.transaction = shallowCopy(tx);\n                            delete params.transaction.type;\n                        }\n                    }\n                }\n            }\n            const args = this.prepareRequest(method, params);\n            if (args == null) {\n                logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n            }\n            try {\n                return yield this.send(args[0], args[1]);\n            }\n            catch (error) {\n                return checkError(method, error, params);\n            }\n        });\n    }\n    _startEvent(event) {\n        if (event.tag === \"pending\") {\n            this._startPending();\n        }\n        super._startEvent(event);\n    }\n    _startPending() {\n        if (this._pendingFilter != null) {\n            return;\n        }\n        const self = this;\n        const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n        pendingFilter.then(function (filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n                    if (self._pendingFilter != pendingFilter) {\n                        return null;\n                    }\n                    let seq = Promise.resolve();\n                    hashes.forEach(function (hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function () {\n                            return self.getTransaction(hash).then(function (tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n                    return seq.then(function () {\n                        return timer(1000);\n                    });\n                }).then(function () {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [filterId]);\n                        return;\n                    }\n                    setTimeout(function () { poll(); }, 0);\n                    return null;\n                }).catch((error) => { });\n            }\n            poll();\n            return filterId;\n        }).catch((error) => { });\n    }\n    _stopEvent(event) {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction, allowExtra) {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) {\n                    allowed[key] = true;\n                }\n            }\n        }\n        checkProperties(transaction, allowed);\n        const result = {};\n        // Some nodes (INFURA ropsten; INFURA mainnet is fine) do not like leading zeros.\n        [\"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            const value = hexValue(transaction[key]);\n            if (key === \"gasLimit\") {\n                key = \"gas\";\n            }\n            result[key] = value;\n        });\n        [\"from\", \"to\", \"data\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            result[key] = hexlify(transaction[key]);\n        });\n        if (transaction.accessList) {\n            result[\"accessList\"] = accessListify(transaction.accessList);\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=json-rpc-provider.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nlet WS = null;\ntry {\n    WS = WebSocket;\n    if (WS == null) {\n        throw new Error(\"inject please\");\n    }\n}\ncatch (error) {\n    const logger = new Logger(version);\n    WS = function () {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    };\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n//# sourceMappingURL=ws.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\nlet NextId = 1;\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\nexport class WebSocketProvider extends JsonRpcProvider {\n    constructor(url, network) {\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n        super(url, network);\n        this._pollingInterval = -1;\n        this._wsReady = false;\n        defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        defineReadOnly(this, \"_requests\", {});\n        defineReadOnly(this, \"_subs\", {});\n        defineReadOnly(this, \"_subIds\", {});\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n        // Stall sending requests until the socket is open...\n        this._websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this._websocket.send(this._requests[id].payload);\n            });\n        };\n        this._websocket.onmessage = (messageEvent) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n                }\n                else {\n                    let error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(error, \"code\", result.error.code || null);\n                        defineReadOnly(error, \"response\", data);\n                    }\n                    else {\n                        error = new Error(\"unknown error\");\n                    }\n                    request.callback(error, undefined);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n                }\n            }\n            else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result);\n                }\n            }\n            else {\n                console.warn(\"this should not happen\");\n            }\n        };\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) {\n            fauxPoll.unref();\n        }\n    }\n    detectNetwork() {\n        return this._detectNetwork;\n    }\n    get pollingInterval() {\n        return 0;\n    }\n    resetEventsBlock(blockNumber) {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n    set pollingInterval(value) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n    poll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return null;\n        });\n    }\n    set polling(value) {\n        if (!value) {\n            return;\n        }\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n    send(method, params) {\n        const rid = NextId++;\n        return new Promise((resolve, reject) => {\n            function callback(error, result) {\n                if (error) {\n                    return reject(error);\n                }\n                return resolve(result);\n            }\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n            this._requests[String(rid)] = { callback, payload };\n            if (this._wsReady) {\n                this._websocket.send(payload);\n            }\n        });\n    }\n    static defaultUrl() {\n        return \"ws:/\\/localhost:8546\";\n    }\n    _subscribe(tag, param, processFunc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let subIdPromise = this._subIds[tag];\n            if (subIdPromise == null) {\n                subIdPromise = Promise.all(param).then((param) => {\n                    return this.send(\"eth_subscribe\", param);\n                });\n                this._subIds[tag] = subIdPromise;\n            }\n            const subId = yield subIdPromise;\n            this._subs[subId] = { tag, processFunc };\n        });\n    }\n    _startEvent(event) {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [\"newHeads\"], (result) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n            case \"pending\":\n                this._subscribe(\"pending\", [\"newPendingTransactions\"], (result) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n            case \"filter\":\n                this._subscribe(event.tag, [\"logs\", this._getFilter(event.filter)], (result) => {\n                    if (result.removed == null) {\n                        result.removed = false;\n                    }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n            case \"tx\": {\n                const emitReceipt = (event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) {\n                            return;\n                        }\n                        this.emit(hash, receipt);\n                    });\n                };\n                // In case it is already mined\n                emitReceipt(event);\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [\"newHeads\"], (result) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n    _stopEvent(event) {\n        let tag = event.tag;\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        }\n        else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n        const subId = this._subIds[tag];\n        if (!subId) {\n            return;\n        }\n        delete this._subIds[tag];\n        subId.then((subId) => {\n            if (!this._subs[subId]) {\n                return;\n            }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [subId]);\n        });\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Wait until we have connected before trying to disconnect\n            if (this._websocket.readyState === WebSocket.CONNECTING) {\n                yield (new Promise((resolve) => {\n                    this._websocket.onopen = function () {\n                        resolve(true);\n                    };\n                    this._websocket.onerror = function () {\n                        resolve(false);\n                    };\n                }));\n            }\n            // Hangup\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n            this._websocket.close(1000);\n        });\n    }\n}\n//# sourceMappingURL=websocket-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    detectNetwork() {\n        const _super = Object.create(null, {\n            detectNetwork: { get: () => super.detectNetwork }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            let network = this.network;\n            if (network == null) {\n                network = yield _super.detectNetwork.call(this);\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // If still not set, set it\n                if (this._network == null) {\n                    // A static network does not support \"any\"\n                    defineReadOnly(this, \"_network\", network);\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return network;\n        });\n    }\n}\nexport class UrlJsonRpcProvider extends StaticJsonRpcProvider {\n    constructor(network, apiKey) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n        // Normalize the Network and API Key\n        network = getStatic(new.target, \"getNetwork\")(network);\n        apiKey = getStatic(new.target, \"getApiKey\")(apiKey);\n        const connection = getStatic(new.target, \"getUrl\")(network, apiKey);\n        super(connection, network);\n        if (typeof (apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        }\n        else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly(this, key, apiKey[key]);\n            });\n        }\n    }\n    _startPending() {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n    isCommunityResource() {\n        return false;\n    }\n    getSigner(address) {\n        return logger.throwError(\"API provider does not support signing\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"getSigner\" });\n    }\n    listAccounts() {\n        return Promise.resolve([]);\n    }\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey) {\n        return apiKey;\n    }\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network, apiKey) {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n//# sourceMappingURL=url-json-rpc-provider.js.map","\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\nexport class AlchemyWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new AlchemyProvider(network, apiKey);\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n            .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        if (apiKey == null) {\n            return defaultApiKey;\n        }\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.alchemyapi.io/v2/\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.alchemyapi.io/v2/\";\n                break;\n            case \"kovan\":\n                host = \"eth-kovan.alchemyapi.io/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arb-rinkeby.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-kovan\":\n                host = \"opt-kovan.g.alchemy.com/v2/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt, url) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=alchemy-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return host;\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            // The Cloudflare provider does not support eth_blockNumber,\n            // so we get the latest block and pull it from that\n            if (method === \"getBlockNumber\") {\n                const block = yield _super.perform.call(this, \"getBlock\", { blockTag: \"latest\" });\n                return block.number;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n}\n//# sourceMappingURL=cloudflare-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction) {\n    const result = {};\n    for (let key in transaction) {\n        if (transaction[key] == null) {\n            continue;\n        }\n        let value = transaction[key];\n        if (key === \"type\" && value === 0) {\n            continue;\n        }\n        // Quantity-types require no leading zero, unless 0\n        if ({ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true }[key]) {\n            value = hexValue(hexlify(value));\n        }\n        else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${set.address}\",storageKeys:[\"${set.storageKeys.join('\",\"')}\"]}`;\n            }).join(\",\") + \"]\";\n        }\n        else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\nfunction getResult(result) {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n    if (result.status != 1 || result.message != \"OK\") {\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n    return result.result;\n}\nfunction getJsonResult(result) {\n    // This response indicates we are being throttled\n    if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n    if (result.error) {\n        // @TODO: not any\n        const error = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) {\n            error.code = result.error.code;\n        }\n        if (result.error.data) {\n            error.data = result.error.data;\n        }\n        throw error;\n    }\n    return result.result;\n}\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag) {\n    if (blockTag === \"pending\") {\n        throw new Error(\"pending not supported\");\n    }\n    if (blockTag === \"latest\") {\n        return blockTag;\n    }\n    return parseInt(blockTag.substring(2), 16);\n}\nconst defaultApiKey = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\nfunction checkError(method, error, transaction) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) {\n                data = \"0x\" + data.replace(/^.*0x/i, \"\");\n            }\n            if (isHexString(data)) {\n                return data;\n            }\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof (error.error.message) === \"string\") {\n            message = error.error.message;\n        }\n        else if (typeof (error.body) === \"string\") {\n            message = error.body;\n        }\n        else if (typeof (error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nexport class EtherscanProvider extends BaseProvider {\n    constructor(network, apiKey) {\n        logger.checkNew(new.target, EtherscanProvider);\n        super(network);\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || defaultApiKey);\n    }\n    getBaseUrl() {\n        switch (this.network ? this.network.name : \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"ropsten\":\n                return \"https:/\\/api-ropsten.etherscan.io\";\n            case \"rinkeby\":\n                return \"https:/\\/api-rinkeby.etherscan.io\";\n            case \"kovan\":\n                return \"https:/\\/api-kovan.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            default:\n        }\n        return logger.throwArgumentError(\"unsupported network\", \"network\", name);\n    }\n    getUrl(module, params) {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${key}=${value}`;\n            }\n            return accum;\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${this.apiKey}` : \"\");\n        return `${this.baseUrl}/api?module=${module}${query}${apiKey}`;\n    }\n    getPostUrl() {\n        return `${this.baseUrl}/api`;\n    }\n    getPostData(module, params) {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n    fetch(module, params, post) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = (post ? this.getPostUrl() : this.getUrl(module, params));\n            const payload = (post ? this.getPostData(module, params) : null);\n            const procFunc = (module === \"proxy\") ? getJsonResult : getResult;\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: url,\n                provider: this\n            });\n            const connection = {\n                url: url,\n                throttleSlotInterval: 1000,\n                throttleCallback: (attempt, url) => {\n                    if (this.isCommunityResource()) {\n                        showThrottleMessage();\n                    }\n                    return Promise.resolve(true);\n                }\n            };\n            let payloadStr = null;\n            if (payload) {\n                connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n                payloadStr = Object.keys(payload).map((key) => {\n                    return `${key}=${payload[key]}`;\n                }).join(\"&\");\n            }\n            const result = yield fetchJson(connection, payloadStr, procFunc || getJsonResult);\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: url,\n                response: deepCopy(result),\n                provider: this\n            });\n            return result;\n        });\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.network;\n        });\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            switch (method) {\n                case \"getBlockNumber\":\n                    return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n                case \"getGasPrice\":\n                    return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n                case \"getBalance\":\n                    // Returns base-10 result\n                    return this.fetch(\"account\", {\n                        action: \"balance\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getTransactionCount\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionCount\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getCode\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getCode\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getStorageAt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getStorageAt\",\n                        address: params.address,\n                        position: params.position,\n                        tag: params.blockTag\n                    });\n                case \"sendTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_sendRawTransaction\",\n                        hex: params.signedTransaction\n                    }, true).catch((error) => {\n                        return checkError(\"sendTransaction\", error, params.signedTransaction);\n                    });\n                case \"getBlock\":\n                    if (params.blockTag) {\n                        return this.fetch(\"proxy\", {\n                            action: \"eth_getBlockByNumber\",\n                            tag: params.blockTag,\n                            boolean: (params.includeTransactions ? \"true\" : \"false\")\n                        });\n                    }\n                    throw new Error(\"getBlock by blockHash not implemented\");\n                case \"getTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionByHash\",\n                        txhash: params.transactionHash\n                    });\n                case \"getTransactionReceipt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionReceipt\",\n                        txhash: params.transactionHash\n                    });\n                case \"call\": {\n                    if (params.blockTag !== \"latest\") {\n                        throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                    }\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_call\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"call\", error, params.transaction);\n                    }\n                }\n                case \"estimateGas\": {\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_estimateGas\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"estimateGas\", error, params.transaction);\n                    }\n                }\n                case \"getLogs\": {\n                    const args = { action: \"getLogs\" };\n                    if (params.filter.fromBlock) {\n                        args.fromBlock = checkLogTag(params.filter.fromBlock);\n                    }\n                    if (params.filter.toBlock) {\n                        args.toBlock = checkLogTag(params.filter.toBlock);\n                    }\n                    if (params.filter.address) {\n                        args.address = params.filter.address;\n                    }\n                    // @TODO: We can handle slightly more complicated logs using the logs API\n                    if (params.filter.topics && params.filter.topics.length > 0) {\n                        if (params.filter.topics.length > 1) {\n                            logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                        }\n                        if (params.filter.topics.length === 1) {\n                            const topic0 = params.filter.topics[0];\n                            if (typeof (topic0) !== \"string\" || topic0.length !== 66) {\n                                logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                            }\n                            args.topic0 = topic0;\n                        }\n                    }\n                    const logs = yield this.fetch(\"logs\", args);\n                    // Cache txHash => blockHash\n                    let blocks = {};\n                    // Add any missing blockHash to the logs\n                    for (let i = 0; i < logs.length; i++) {\n                        const log = logs[i];\n                        if (log.blockHash != null) {\n                            continue;\n                        }\n                        if (blocks[log.blockNumber] == null) {\n                            const block = yield this.getBlock(log.blockNumber);\n                            if (block) {\n                                blocks[log.blockNumber] = block.hash;\n                            }\n                        }\n                        log.blockHash = blocks[log.blockNumber];\n                    }\n                    return logs;\n                }\n                case \"getEtherPrice\":\n                    if (this.network.name !== \"homestead\") {\n                        return 0.0;\n                    }\n                    return parseFloat((yield this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n                default:\n                    break;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    getHistory(addressOrName, startBlock, endBlock) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const params = {\n                action: \"txlist\",\n                address: (yield this.resolveName(addressOrName)),\n                startblock: ((startBlock == null) ? 0 : startBlock),\n                endblock: ((endBlock == null) ? 99999999 : endBlock),\n                sort: \"asc\"\n            };\n            const result = yield this.fetch(\"account\", params);\n            return result.map((tx) => {\n                [\"contractAddress\", \"to\"].forEach(function (key) {\n                    if (tx[key] == \"\") {\n                        delete tx[key];\n                    }\n                });\n                if (tx.creates == null && tx.contractAddress != null) {\n                    tx.creates = tx.contractAddress;\n                }\n                const item = this.formatter.transactionResponse(tx);\n                if (tx.timeStamp) {\n                    item.timestamp = parseInt(tx.timeStamp);\n                }\n                return item;\n            });\n        });\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=etherscan-provider.js.map","\"use strict\";\nexport function shuffled(array) {\n    array = array.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n    return array;\n}\n//# sourceMappingURL=shuffle.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction now() { return (new Date()).getTime(); }\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks) {\n    let result = null;\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n        // Null! We do not know our network; bail.\n        if (network == null) {\n            return null;\n        }\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n            }\n        }\n        else {\n            result = network;\n        }\n    }\n    return result;\n}\nfunction median(values, maxDelta) {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n    return (a + b) / 2;\n}\nfunction serialize(value) {\n    if (value === null) {\n        return \"null\";\n    }\n    else if (typeof (value) === \"number\" || typeof (value) === \"boolean\") {\n        return JSON.stringify(value);\n    }\n    else if (typeof (value) === \"string\") {\n        return value;\n    }\n    else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    }\n    else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    }\n    else if (typeof (value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof (v) === \"function\") {\n                v = \"[function]\";\n            }\n            else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n    throw new Error(\"unknown value type: \" + typeof (value));\n}\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n;\nfunction stall(duration) {\n    let cancel = null;\n    let timer = null;\n    let promise = (new Promise((resolve) => {\n        cancel = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        };\n        timer = setTimeout(cancel, duration);\n    }));\n    const wait = (func) => {\n        promise = promise.then(func);\n        return promise;\n    };\n    function getPromise() {\n        return promise;\n    }\n    return { cancel, getPromise, wait };\n}\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n;\nfunction exposeDebugConfig(config, now) {\n    const result = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) {\n        result.start = config.start;\n    }\n    if (now) {\n        result.duration = (now - config.start);\n    }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        }\n        else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\nfunction normalizedTally(normalize, quorum) {\n    return function (configs) {\n        // Count the votes for each result\n        const tally = {};\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) {\n                tally[value] = { count: 0, result: c.result };\n            }\n            tally[value].count++;\n        });\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n        // No quroum\n        return undefined;\n    };\n}\nfunction getProcessFunc(provider, method, params) {\n    let normalize = serialize;\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) {\n                    return undefined;\n                }\n                blockNumber = Math.ceil(blockNumber);\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) {\n                    blockNumber++;\n                }\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n                return provider._highestBlockNumber;\n            };\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            };\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function (configs) {\n                return median(configs.map((c) => c.result));\n            };\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function (tx) {\n                if (tx == null) {\n                    return null;\n                }\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            };\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            }\n            else {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    return serialize(block);\n                };\n            }\n            break;\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n}\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nfunction waitForSync(config, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const provider = (config.provider);\n        if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n            return provider;\n        }\n        return poll(() => {\n            return new Promise((resolve, reject) => {\n                setTimeout(function () {\n                    // We are synced\n                    if (provider.blockNumber >= blockNumber) {\n                        return resolve(provider);\n                    }\n                    // We're done; just quit\n                    if (config.cancelled) {\n                        return resolve(null);\n                    }\n                    // Try again, next block\n                    return resolve(undefined);\n                }, 0);\n            });\n        }, { oncePoll: provider });\n    });\n}\nfunction getRunner(config, currentBlockNumber, method, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let provider = config.provider;\n        switch (method) {\n            case \"getBlockNumber\":\n            case \"getGasPrice\":\n                return provider[method]();\n            case \"getEtherPrice\":\n                if (provider.getEtherPrice) {\n                    return provider.getEtherPrice();\n                }\n                break;\n            case \"getBalance\":\n            case \"getTransactionCount\":\n            case \"getCode\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.address, params.blockTag || \"latest\");\n            case \"getStorageAt\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n            case \"getBlock\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[(params.includeTransactions ? \"getBlockWithTransactions\" : \"getBlock\")](params.blockTag || params.blockHash);\n            case \"call\":\n            case \"estimateGas\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.transaction);\n            case \"getTransaction\":\n            case \"getTransactionReceipt\":\n                return provider[method](params.transactionHash);\n            case \"getLogs\": {\n                let filter = params.filter;\n                if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getLogs(filter);\n            }\n        }\n        return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n            method: method,\n            params: params\n        });\n    });\n}\nexport class FallbackProvider extends BaseProvider {\n    constructor(providers, quorum) {\n        logger.checkNew(new.target, FallbackProvider);\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n        const providerConfigs = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n            const config = shallowCopy(configOrProvider);\n            if (config.priority == null) {\n                config.priority = 1;\n            }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n            }\n            if (config.weight == null) {\n                config.weight = 1;\n            }\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${index}].weight`, weight);\n            }\n            return Object.freeze(config);\n        });\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n        if (quorum == null) {\n            quorum = total / 2;\n        }\n        else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n        // Are all providers' networks are known\n        let networkOrReady = checkNetworks(providerConfigs.map((c) => (c.provider).network));\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n        this._highestBlockNumber = -1;\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const networks = yield Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n            return checkNetworks(networks);\n        });\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Sending transactions is special; always broadcast it to all backends\n            if (method === \"sendTransaction\") {\n                const results = yield Promise.all(this.providerConfigs.map((c) => {\n                    return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                        return result.hash;\n                    }, (error) => {\n                        return error;\n                    });\n                }));\n                // Any success is good enough (other errors are likely \"already seen\" errors\n                for (let i = 0; i < results.length; i++) {\n                    const result = results[i];\n                    if (typeof (result) === \"string\") {\n                        return result;\n                    }\n                }\n                // They were all an error; pick the first error\n                throw results[0];\n            }\n            // We need to make sure we are in sync with our backends, so we need\n            // to know this before we can make a lot of calls\n            if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n                yield this.getBlockNumber();\n            }\n            const processFunc = getProcessFunc(this, method, params);\n            // Shuffle the providers and then sort them by their priority; we\n            // shallowCopy them since we will store the result in them too\n            const configs = shuffled(this.providerConfigs.map(shallowCopy));\n            configs.sort((a, b) => (a.priority - b.priority));\n            const currentBlockNumber = this._highestBlockNumber;\n            let i = 0;\n            let first = true;\n            while (true) {\n                const t0 = now();\n                // Compute the inflight weight (exclude anything past)\n                let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                    .reduce((accum, c) => (accum + c.weight), 0);\n                // Start running enough to meet quorum\n                while (inflightWeight < this.quorum && i < configs.length) {\n                    const config = configs[i++];\n                    const rid = nextRid++;\n                    config.start = now();\n                    config.staller = stall(config.stallTimeout);\n                    config.staller.wait(() => { config.staller = null; });\n                    config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                        config.done = true;\n                        config.result = result;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    }, (error) => {\n                        config.done = true;\n                        config.error = error;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    });\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, null),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                    inflightWeight += config.weight;\n                }\n                // Wait for anything meaningful to finish or stall out\n                const waiting = [];\n                configs.forEach((c) => {\n                    if (c.done || !c.runner) {\n                        return;\n                    }\n                    waiting.push(c.runner);\n                    if (c.staller) {\n                        waiting.push(c.staller.getPromise());\n                    }\n                });\n                if (waiting.length) {\n                    yield Promise.race(waiting);\n                }\n                // Check the quorum and process the results; the process function\n                // may additionally decide the quorum is not met\n                const results = configs.filter((c) => (c.done && c.error == null));\n                if (results.length >= this.quorum) {\n                    const result = processFunc(results);\n                    if (result !== undefined) {\n                        // Shut down any stallers\n                        configs.forEach(c => {\n                            if (c.staller) {\n                                c.staller.cancel();\n                            }\n                            c.cancelled = true;\n                        });\n                        return result;\n                    }\n                    if (!first) {\n                        yield stall(100).getPromise();\n                    }\n                    first = false;\n                }\n                // No result, check for errors that should be forwarded\n                const errors = configs.reduce((accum, c) => {\n                    if (!c.done || c.error == null) {\n                        return accum;\n                    }\n                    const code = (c.error).code;\n                    if (ForwardErrors.indexOf(code) >= 0) {\n                        if (!accum[code]) {\n                            accum[code] = { error: c.error, weight: 0 };\n                        }\n                        accum[code].weight += c.weight;\n                    }\n                    return accum;\n                }, ({}));\n                Object.keys(errors).forEach((errorCode) => {\n                    const tally = errors[errorCode];\n                    if (tally.weight < this.quorum) {\n                        return;\n                    }\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) {\n                            c.staller.cancel();\n                        }\n                        c.cancelled = true;\n                    });\n                    const e = (tally.error);\n                    const props = {};\n                    ForwardProperties.forEach((name) => {\n                        if (e[name] == null) {\n                            return;\n                        }\n                        props[name] = e[name];\n                    });\n                    logger.throwError(e.reason || e.message, errorCode, props);\n                });\n                // All configs have run to completion; we will never get more data\n                if (configs.filter((c) => !c.done).length === 0) {\n                    break;\n                }\n            }\n            // Shut down any stallers; shouldn't be any\n            configs.forEach(c => {\n                if (c.staller) {\n                    c.staller.cancel();\n                }\n                c.cancelled = true;\n            });\n            return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n                method: method,\n                params: params,\n                //results: configs.map((c) => c.result),\n                //errors: configs.map((c) => c.error),\n                results: configs.map((c) => exposeDebugConfig(c)),\n                provider: this\n            });\n        });\n    }\n}\n//# sourceMappingURL=fallback-provider.js.map","\"use strict\";\nconst IpcProvider = null;\nexport { IpcProvider };\n//# sourceMappingURL=ipc-provider.js.map","\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nconst defaultProjectId = \"84842078b09946638c03157f83405213\";\nexport class InfuraWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        const apiKeyObj = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n        if (apiKey == null) {\n            return apiKeyObj;\n        }\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n        }\n        else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof (apiKey.projectId) === \"string\"), \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof (apiKey.projectSecret) === \"string\"), \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n        }\n        else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"ropsten\":\n                host = \"ropsten.infura.io\";\n                break;\n            case \"rinkeby\":\n                host = \"rinkeby.infura.io\";\n                break;\n            case \"kovan\":\n                host = \"kovan.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-kovan\":\n                host = \"optimism-kovan.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arbitrum-rinkeby.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        const connection = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt, url) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\n//# sourceMappingURL=infura-provider.js.map","import { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// Experimental\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [];\n        }\n        const inflightRequest = { request, resolve: null, reject: null };\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n        this._pendingBatch.push(inflightRequest);\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            error.code = payload.error.code;\n                            error.data = payload.error.data;\n                            inflightRequest.reject(error);\n                        }\n                        else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n            }, 10);\n        }\n        return promise;\n    }\n}\n//# sourceMappingURL=json-rpc-batch-provider.js.map","/* istanbul ignore file */\n\"use strict\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n    static getUrl(network, apiKey) {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n//# sourceMappingURL=nodesmith-provider.js.map","\"use strict\";\nimport { getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// These are load-balancer-based application IDs\nconst defaultApplicationIds = {\n    homestead: \"6004bcd10040261633ade990\",\n    ropsten: \"6004bd4d0040261633ade991\",\n    rinkeby: \"6004bda20040261633ade994\",\n    goerli: \"6004bd860040261633ade992\",\n};\nexport class PocketProvider extends UrlJsonRpcProvider {\n    constructor(network, apiKey) {\n        // We need a bit of creativity in the constructor because\n        // Pocket uses different default API keys based on the network\n        if (apiKey == null) {\n            const n = getStatic(new.target, \"getNetwork\")(network);\n            if (n) {\n                const applicationId = defaultApplicationIds[n.name];\n                if (applicationId) {\n                    apiKey = {\n                        applicationId: applicationId,\n                        loadBalancer: true\n                    };\n                }\n            }\n            // If there was any issue above, we don't know this network\n            if (apiKey == null) {\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n            }\n        }\n        super(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        // Most API Providers allow null to get the default configuration, but\n        // Pocket requires the network to decide the default provider, so we\n        // rely on hijacking the constructor to add a sensible default for us\n        if (apiKey == null) {\n            logger.throwArgumentError(\"PocketProvider.getApiKey does not support null apiKey\", \"apiKey\", apiKey);\n        }\n        const apiKeyObj = {\n            applicationId: null,\n            loadBalancer: false,\n            applicationSecretKey: null\n        };\n        // Parse applicationId and applicationSecretKey\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n        }\n        else if (apiKey.applicationSecretKey != null) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"applicationSecretKey requires an applicationId\", \"applicationId\", apiKey.applicationId);\n            logger.assertArgument((typeof (apiKey.applicationSecretKey) === \"string\"), \"invalid applicationSecretKey\", \"applicationSecretKey\", \"[REDACTED]\");\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else if (apiKey.applicationId) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"apiKey.applicationId must be a string\", \"apiKey.applicationId\", apiKey.applicationId);\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        let url = null;\n        if (apiKey.loadBalancer) {\n            url = `https:/\\/${host}/v1/lb/${apiKey.applicationId}`;\n        }\n        else {\n            url = `https:/\\/${host}/v1/${apiKey.applicationId}`;\n        }\n        const connection = { url };\n        // Initialize empty headers\n        connection.headers = {};\n        // Apply application secret key\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.applicationId === defaultApplicationIds[this.network.name]);\n    }\n}\n//# sourceMappingURL=pocket-provider.js.map","\"use strict\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nlet _nextId = 1;\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n    const fetcher = \"Web3LegacyFetcher\";\n    return function (method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n            sendFunc(request, (error, response) => {\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n                    return reject(error);\n                }\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    error.code = response.error.code;\n                    error.data = response.error.data;\n                    return reject(error);\n                }\n                resolve(response.result);\n            });\n        });\n    };\n}\nfunction buildEip1193Fetcher(provider) {\n    return function (method, params) {\n        if (params == null) {\n            params = [];\n        }\n        const request = { method, params };\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n            return response;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n            throw error;\n        });\n    };\n}\nexport class Web3Provider extends JsonRpcProvider {\n    constructor(provider, network) {\n        logger.checkNew(new.target, Web3Provider);\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n        let path = null;\n        let jsonRpcFetchFunc = null;\n        let subprovider = null;\n        if (typeof (provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n        }\n        else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n            subprovider = provider;\n            if (provider.request) {\n                if (path === \"\") {\n                    path = \"eip-1193:\";\n                }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            }\n            else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            }\n            else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            }\n            else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n            if (!path) {\n                path = \"unknown:\";\n            }\n        }\n        super(path, network);\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n    send(method, params) {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n//# sourceMappingURL=web3-provider.js.map","\"use strict\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { BaseProvider, Resolver } from \"./base-provider\";\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Helper Functions\nfunction getDefaultProvider(network, options) {\n    if (network == null) {\n        network = \"homestead\";\n    }\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof (network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1]) {\n                case \"http\":\n                    return new JsonRpcProvider(network);\n                case \"ws\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n    return n._defaultProvider({\n        FallbackProvider,\n        AlchemyProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n        IpcProvider,\n    }, options);\n}\n////////////////////////\n// Exports\nexport { \n// Abstract Providers (or Abstract-ish)\nProvider, BaseProvider, Resolver, UrlJsonRpcProvider, \n///////////////////////\n// Concrete Providers\nFallbackProvider, AlchemyProvider, AlchemyWebSocketProvider, CloudflareProvider, EtherscanProvider, InfuraProvider, InfuraWebSocketProvider, JsonRpcProvider, JsonRpcBatchProvider, NodesmithProvider, PocketProvider, StaticJsonRpcProvider, Web3Provider, WebSocketProvider, IpcProvider, \n///////////////////////\n// Signer\nJsonRpcSigner, \n///////////////////////\n// Functions\ngetDefaultProvider, getNetwork, isCommunityResource, isCommunityResourcable, showThrottleMessage, \n///////////////////////\n// Objects\nFormatter };\n//# sourceMappingURL=index.js.map","export const version = \"solidity/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case \"address\":\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\" : \"0x00\");\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n    }\n    let match = type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\");\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = BigNumber.from(value).toTwos(size);\n        return zeroPad(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type);\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${type}`, \"value\", value);\n        }\n        if (isArray) {\n            return arrayify((value + Zeros).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${type}`, \"value\", value);\n        }\n        const result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n    return logger.throwArgumentError(\"invalid type\", \"type\", type);\n}\n// @TODO: Array Enum\nexport function pack(types, values) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values);\n    }\n    const tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\nexport function keccak256(types, values) {\n    return hashKeccak256(pack(types, values));\n}\nexport function sha256(types, values) {\n    return hashSha256(pack(types, values));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\nexport function formatBytes32String(text) {\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([bytes, HashZero]).slice(0, 32));\n}\nexport function parseBytes32String(bytes) {\n    const data = arrayify(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n//# sourceMappingURL=bytes32.js.map","export const version = \"units/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value) {\n    const comps = String(value).split(\".\");\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") {\n        whole = whole.substring(1);\n    }\n    if (whole === \"\") {\n        whole = \"0\";\n    }\n    let suffix = \"\";\n    if (comps.length === 2) {\n        suffix = \".\" + (comps[1] || \"0\");\n    }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        }\n        else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n    return negative + formatted.join(\",\") + suffix;\n}\nexport function formatUnits(value, unitName) {\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return formatFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function parseUnits(value, unitName) {\n    if (typeof (value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return parseFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nexport function parseEther(ether) {\n    return parseUnits(ether, 18);\n}\n//# sourceMappingURL=index.js.map","export const version = \"ethers/5.5.2\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\nimport * as constants from \"@ethersproject/constants\";\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\nimport * as utils from \"./utils\";\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n////////////////////////\n// Compile-Time Constants\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Exports\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist };\n//# sourceMappingURL=ethers.js.map","\"use strict\";\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\nimport * as ethers from \"./ethers\";\ntry {\n    const anyGlobal = window;\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n}\ncatch (error) { }\nexport { ethers };\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist } from \"./ethers\";\n//# sourceMappingURL=index.js.map","import {ethers} from \"ethers\";\r\nconst HNRContractAbi =[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"payees\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"fees\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"swapAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_uniV2Router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_samuraiNodeManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20PaymentReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newLiquidityWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldLiquidityWallet\",\"type\":\"address\"}],\"name\":\"LiquidityWalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"PayeeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"SetAutomatedMarketMakerPair\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIntoLiqudity\",\"type\":\"uint256\"}],\"name\":\"SwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"}],\"name\":\"UpdateSamuraiNodeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"}],\"name\":\"UpdateUniswapV2Router\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"nodeTier\",\"type\":\"string\"}],\"name\":\"_getTierRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"automatedMarketMakerPairs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"blacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"burnNodeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cashoutAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cashoutFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blocktime\",\"type\":\"uint256\"}],\"name\":\"cashoutReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newNodePrice\",\"type\":\"uint256\"}],\"name\":\"changeBukePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"changeBukeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newNodePrice\",\"type\":\"uint256\"}],\"name\":\"changeMononofuPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"changeMononofuReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newNodePrice\",\"type\":\"uint256\"}],\"name\":\"changeMushaPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"changeMushaReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newVal\",\"type\":\"bool\"}],\"name\":\"changeSwapLiquify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nodeTier\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimTime\",\"type\":\"uint256\"}],\"name\":\"createNodeWithPrivilege\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nodeTier\",\"type\":\"string\"}],\"name\":\"createNodeWithTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributionPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"futureFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"futurePool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getAddressKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBukePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBukeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMononofuPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMononofuReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMushaPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMushaReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNodeNumberOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNodesCreationTime\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNodesLastClaims\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNodesNames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNodesRewards\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNodesRewardsClaimed\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNodesTiers\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getRewardAmountOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"nodeTier\",\"type\":\"string\"}],\"name\":\"getTierNodePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalNodesCreated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalRewardStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityPoolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"payee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"samuraiNodeManager\",\"outputs\":[{\"internalType\":\"contract ISamuraiNodeManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setAutomatedMarketMakerPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapTokensAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"totalReleased\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReleased\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateCashoutFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateFutureFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"wall\",\"type\":\"address\"}],\"name\":\"updateFutureWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateLiquidityFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateRewardSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateRewardsFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"wall\",\"type\":\"address\"}],\"name\":\"updateRewardsWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateSamuraiNodeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVal\",\"type\":\"uint256\"}],\"name\":\"updateSwapTokensAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateUniswapV2Router\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}];\r\nconst HNRContractAddress = \"0x36667966c79dEC0dCDA0E2a41370fb58857F5182\";\r\n\r\nexport async function setChain(){\r\n    try {\r\n            var chainSet = await ethereum.request({\r\n            method: 'wallet_switchEthereumChain',\r\n            params: [{ chainId: '0xFA' }],\r\n        });\r\n        if(chainSet){\r\n            this.$router.go();\r\n            chainSet = fasle;\r\n        }\r\n    } catch (switchError) {\r\n        // This error code indicates that the chain has not been added to MetaMask.\r\n        if (switchError.code === 4902) {\r\n            try {\r\n                await ethereum.request({\r\n                    method: 'wallet_addEthereumChain',\r\n                    params: [{\r\n                        chainId: '0xFA',\r\n                        chainName: 'Fantom Opera',\r\n                        nativeCurrency: {\r\n                            name: 'Fantom Coin',\r\n                            symbol: 'FTM',\r\n                            decimals: 18\r\n                        },\r\n                        rpcUrls: ['https://rpc.ftm.tools/'],\r\n                        blockExplorerUrls: ['https://ftmscan.com/']\r\n                    }],\r\n                });\r\n                CustomToken()\r\n                this.$router.go();\r\n            } catch (addError) {\r\n                console.log(\"add chian error: \"+ addError.message);\r\n            }\r\n        }\r\n        else{\r\n            console.log(\"switch error: \"+switchError)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function CustomToken() {\r\n    const tokenAddress = '0x36667966c79dEC0dCDA0E2a41370fb58857F5182';\r\n    const tokenSymbol = 'HNR';\r\n    const tokenDecimals = 18;\r\n    //const tokenImage = 'https://storageapi.fleek.co/aeb85deb-410a-4c50-8834-96486196b392-bucket/logo-1.png';\r\n\r\n    try {\r\n        // wasAdded is a boolean. Like any RPC method, an error may be thrown.\r\n        const wasAdded = await ethereum.request({\r\n            method: 'wallet_watchAsset',\r\n            params: {\r\n                type: 'ERC20', // Initially only supports ERC20, but eventually more!\r\n                options: {\r\n                    address: tokenAddress, // The address that the token is at.\r\n                    symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\r\n                    decimals: tokenDecimals, // The number of decimals in the token\r\n                    //image: tokenImage, // A string url of the token logo\r\n                },\r\n            },\r\n        });\r\n\r\n        if (wasAdded) {\r\n            console.log('Thanks for your interest!');\r\n        } else {\r\n            console.log('Your loss!');\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport async function cashoutAll(web3,account){\r\n    const HNRContractInstance = new web3.eth.Contract(HNRContractAbi, HNRContractAddress);\r\n    try{\r\n        var receipt = await HNRContractInstance.methods.cashoutAll()\r\n        .send({\r\n             from:account\r\n        })\r\n            return(receipt);\r\n    }catch(error){\r\n        console.log(\"Cashout All: \" + error);\r\n    }\r\n}\r\n\r\n\r\nexport async function createNode(web3,name,account){\r\n    const HNRContractInstance = new web3.eth.Contract(HNRContractAbi, HNRContractAddress);\r\n    try{\r\n        var receipt = await HNRContractInstance.methods.createNodeWithTokens(name,'MUSHA')\r\n        .send({\r\n             from:account\r\n        })\r\n            return(receipt);\r\n    }catch(error){\r\n        console.log(\"Create Node: \" + error);\r\n    }\r\n}\r\n\r\nfunction sleep(ms) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n }\r\n\r\n export function getMetamask(){ \r\n     window.open(\r\n         \"https://metamask.io/\",\r\n         '_blank' // <- This is what makes it open in a new window.\r\n     );           \r\n }\r\n\r\n \r\n export async function getBalance(web3,account){\r\n    const HNRContractInstance = new web3.eth.Contract(HNRContractAbi, HNRContractAddress);\r\n    try{\r\n        var receipt = await HNRContractInstance.methods.balanceOf(account).call();\r\n            if(receipt == undefined){receipt = 0;}\r\n            console.log(receipt)\r\n            return ethers.utils.formatUnits(receipt,18);\r\n    }catch(error){\r\n        console.log(\"get balance error: \" + error);\r\n    }\r\n    this.lpContractInstance =null;\r\n}","<template>\r\n<main id=\"main\">\r\n    <div class=\"content\">\r\n            <h3 class=\"account\">\r\n                Connected Account <span id=\"account\" class=\"purple\">{{account}}</span>\r\n                <button v-if=\"!starAdded\" @click=\"Functions.CustomToken()\" class=\"addStar\">Add HNR to <img width=\"30px\" src=\"https://jaguarswap.com/images/tokens/metamask.png\"></button>\r\n                <div v-if=\"!connected\" class=\"connect\">\r\n                    <button  @click=\"matics()\" class=\"connectWallet\"><i class=\"fas fa-network-wired\"></i>Connect</button>\r\n                </div>\r\n                <div v-if=\"connected\" class=\"disconnect\">\r\n                    <button @click=\"disconnect()\" class=\"connectWallet\"><i class=\"fas fa-network-wired\"></i>Disconnect</button>\r\n                </div>\r\n            </h3>\r\n        <h4 class=\"heading center\">Quick and dirty HNR interaction site</h4>\r\n        <p class=\"sm-heading center\">Official site\r\n            <a href=\"https://samurai.financial\" target=\"_new\">Samuari Financial</a>\r\n        </p>\r\n        <div class=\"cards\">\r\n            <div class=\"container\">\r\n                <div class=\"card\" style=\"min-width:50%\">\r\n                    <div class=\"grid\">\r\n                        <div class=\"label\">\r\n                            <h2>Current HNR Balance: {{Balance}}</h2>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"grid\">\r\n                        <div class=\"label\">\r\n                            <h2>Last Claim: {{claimDate}}</h2>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"grid\">\r\n                        <button @click=\"cashOut()\">Claim reward</button>\r\n                    </div>\r\n                </div>\r\n            </div>           \r\n        </div>\r\n        <div class=\"cards\">\r\n            <div class=\"container\">\r\n                <div class=\"card\" style=\"min-width:50%\">\r\n                    <div class=\"grid\">\r\n                        <div class=\"label\">\r\n                            <h2>Create Musha Node</h2>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"grid\">\r\n                        <div class=\"label\">\r\n                            <h2>Node Name: </h2>\r\n                        </div>\r\n                        <div class=\"cont  large-text\">\r\n                            <input v-model=\"nodeName\" placeholder=\"New Node Name\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"grid\">\r\n                        <button @click=\"createNode()\">Create Musha Node</button>\r\n                    </div>\r\n                </div>\r\n            </div>           \r\n        </div>\r\n    </div>\r\n    <div v-if=\"messages\" class=\"messages\">\r\n            <h4>{{messages}}</h4>\r\n        </div>\r\n</main>\r\n</template>\r\n\r\n<script>\r\n\r\nimport getWeb3 from './web3.js';\r\nimport Web3 from 'web3';\r\nimport {ethers} from \"ethers\";\r\nimport { commify } from '@ethersproject/units';\r\nimport * as Functions from \"../components/functions.js\";\r\n\r\nexport default {\r\n    components: {},\r\n    data() {\r\n        return {\r\n            account: \"Not Connected\",\r\n            web3:null,\r\n            messages:false,\r\n            connected:false,\r\n            starAdded:false,\r\n            web3: null,\r\n            Balance:null,\r\n            claimDate:null,\r\n            nodeName:null\r\n        }\r\n    },\r\n    watch: {\r\n        '$route': {\r\n            handler(newValue, oldValue) {\r\n\r\n            }\r\n        }\r\n    },\r\n    async created() {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            console.log('MetaMask is installed!');\r\n            if(this.$route.params.web3 == null || this.$route.params.account == null){\r\n                console.log(\"account not set\");\r\n                await this.matics();;\r\n            }\r\n            else{\r\n                console.log(\"account already set\");\r\n                this.connected= true;\r\n                this.account = this.$route.params.account;\r\n                this.web3 = this.$route.params.web3;\r\n                var chainId = new this.web3.eth.getChainId();\r\n                if(chainId != 0xFA){Functions.setChain()};\r\n                this.getBalance();\r\n            }\r\n        }\r\n        else{\r\n            this.matics();\r\n            if(confirm(\"Would you like to get MetaMask?\")){\r\n                Functions.getMetamask();\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        async matics(){\r\n            getWeb3().then((result) => {\r\n                //console.log(result);\r\n                if(result == 'Non-Ethereum browser detected. You should consider trying MetaMask!'){\r\n                    this.messages = result;\r\n                    setTimeout(d=>{\r\n                        this.messages = false;\r\n                    },5000)\r\n                }\r\n                else{\r\n                    const web3 = result;// we instantiate our contract next\r\n                    this.web3 = web3;\r\n                    var chainId = new web3.eth.getChainId();\r\n                    if(chainId != 0xFA){Functions.setChain()};\r\n                    web3.eth.getAccounts().then((accounts) => {\r\n                        if(accounts.length > 0){\r\n                            this.connected = true;\r\n                            this.account = accounts[0];\r\n                            console.log(this.account)\r\n                            this.messages = \" Account: \" + this.account;\r\n                            setTimeout(d=>{this.messages = false},1000);\r\n                            this.getBalance();\r\n                        }\r\n                        else{\r\n                            this.messages = \"No account Connected\"\r\n                            setTimeout(d=>{\r\n                                this.messages = false\r\n                            },5000)\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        async getBalance(){\r\n            this.Balance = await Functions.getBalance(this.web3,this.account);\r\n        },\r\n        async cashOut(){\r\n            await Functions.cashoutAll(this.web3,this.account);\r\n        },\r\n        async createNode(){\r\n            await Functions.createNode(this.web3,this.nodeName,this.account)\r\n        },\r\n        async disconnect(){\r\n            this.account = \"Not Connected\";\r\n            this.$route.params.account = null;\r\n            this.$route.params.web3 = null;\r\n            this.web3 = null;\r\n            this.connected = false;\r\n        },\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=5427c533&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n//# sourceMappingURL=addresses.js.map","export const version = \"random/5.5.0\";\n//# sourceMappingURL=_version.js.map"],"sourceRoot":""}