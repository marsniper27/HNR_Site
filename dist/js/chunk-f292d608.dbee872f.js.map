{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.date.to-string.js","webpack:///./node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js","webpack:///./node_modules/core-js/modules/es.regexp.to-string.js","webpack:///./node_modules/@ethersproject/constants/lib.esm/hashes.js","webpack:///./node_modules/@ethersproject/random/lib.esm/random.js","webpack:///./node_modules/@ethersproject/units/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/units/lib.esm/index.js","webpack:///./node_modules/aes-js/index.js","webpack:///./node_modules/@ethersproject/constants/lib.esm/strings.js","webpack:///./node_modules/bech32/index.js","webpack:///./node_modules/@ethersproject/constants/lib.esm/addresses.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/address.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/array.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/boolean.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/null.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/number.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/string.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/tuple.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/fragments.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/abi-coder.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/interface.js","webpack:///./node_modules/@ethersproject/abstract-provider/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/abstract-provider/lib.esm/index.js","webpack:///./node_modules/@ethersproject/abstract-signer/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/abstract-signer/lib.esm/index.js","webpack:///./node_modules/@ethersproject/contracts/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/contracts/lib.esm/index.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/message.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/typed-data.js","webpack:///./node_modules/@ethersproject/basex/lib.esm/index.js","webpack:///./node_modules/@ethersproject/sha2/lib.esm/types.js","webpack:///./node_modules/@ethersproject/sha2/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/sha2/lib.esm/sha2.js","webpack:///./node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/wordlist.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/lang-en.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/wordlists.js","webpack:///./node_modules/@ethersproject/hdnode/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/hdnode/lib.esm/index.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/utils.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/keystore.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/inspect.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/index.js","webpack:///./node_modules/@ethersproject/wallet/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/wallet/lib.esm/index.js","webpack:///./node_modules/@ethersproject/networks/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/networks/lib.esm/index.js","webpack:///./node_modules/@ethersproject/strings/lib.esm/idna.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/namehash.js","webpack:///./node_modules/@ethersproject/base64/lib.esm/base64.js","webpack:///./node_modules/@ethersproject/web/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/web/lib.esm/geturl.js","webpack:///./node_modules/@ethersproject/web/lib.esm/index.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/formatter.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/base-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/ws.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/websocket-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/alchemy-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/cloudflare-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/etherscan-provider.js","webpack:///./node_modules/@ethersproject/random/lib.esm/shuffle.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/fallback-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/ipc-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/infura-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/json-rpc-batch-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/nodesmith-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/pocket-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/web3-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/index.js","webpack:///./node_modules/@ethersproject/solidity/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/solidity/lib.esm/index.js","webpack:///./node_modules/@ethersproject/strings/lib.esm/bytes32.js","webpack:///./node_modules/ethers/lib.esm/_version.js","webpack:///./node_modules/ethers/lib.esm/ethers.js","webpack:///./node_modules/ethers/lib.esm/index.js","webpack:///./node_modules/@ethersproject/random/lib.esm/_version.js"],"names":["uncurryThis","redefine","DatePrototype","Date","prototype","INVALID_DATE","TO_STRING","un$DateToString","getTime","String","NaN","value","this","logger","_constructorGuard","Zero","from","NegativeOne","throwFault","message","fault","operation","params","undefined","throwError","errors","NUMERIC_FAULT","zeros","length","getMultiplier","decimals","toNumber","e","substring","throwArgumentError","formatFixed","multiplier","negative","lt","mul","fraction","mod","toString","match","whole","div","parseFixed","comps","split","wholeValue","fractionValue","wei","add","FixedFormat","constructorGuard","signed","width","UNSUPPORTED_OPERATION","name","_multiplier","Object","freeze","parseInt","check","key","type","defaultValue","FixedNumber","hex","format","checkNew","_hex","_value","_isFixedNumber","other","_checkFormat","a","b","fromValue","sub","push","result","hasFraction","isNegative","subUnsafe","ONE","toFormat","addUnsafe","factor","bump","BUMP","mulUnsafe","floor","divUnsafe","fromTwos","toTwos","toHexString","parseFloat","fromString","fixedFormat","numeric","decimal","Error","fromBytes","error","code","INVALID_ARGUMENT","PROPER_FUNCTION_NAME","PROPER","anObject","isPrototypeOf","$toString","fails","regExpFlags","RegExpPrototype","RegExp","n$ToString","getFlags","NOT_GENERIC","call","source","flags","INCORRECT_NAME","R","p","rf","f","unsafe","HashZero","anyGlobal","window","global","crypto","msCrypto","randomBytes","Uint8Array","getRandomValues","warn","buffer","version","names","commify","suffix","formatted","unshift","index","join","formatUnits","unitName","indexOf","parseUnits","formatEther","parseEther","ether","root","checkInt","checkInts","arrayish","i","coerceArray","arg","copy","ArrayBuffer","isView","slice","Array","isArray","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","set","convertUtf8","toBytes","text","encodeURI","c","charCodeAt","substr","bytes","fromCharCode","convertHex","Hex","v","numberOfRounds","16","24","32","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","defineProperty","_prepare","rounds","_Ke","_Kd","roundKeyCount","KC","tk","tt","rconpointer","t","r","encrypt","plaintext","decrypt","ciphertext","ModeOfOperationECB","description","_aes","block","ModeOfOperationCBC","iv","_lastCipherblock","j","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","pkcs7pad","data","padder","pkcs7strip","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utils","utf8","padding","pkcs7","pad","strip","_arrayTest","module","exports","EtherSymbol","ALPHABET","ALPHABET_MAP","z","x","charAt","TypeError","polymodStep","pre","prefixChk","prefix","chk","encode","words","LIMIT","toLowerCase","__decode","str","lowered","uppered","toUpperCase","lastIndexOf","wordChars","decodeUnsafe","res","apply","arguments","decode","convert","inBits","outBits","bits","maxV","toWordsUnsafe","toWords","fromWordsUnsafe","fromWords","AddressZero","checkResultErrors","checkErrors","path","object","childPath","Coder","localName","dynamic","wordSize","_data","_dataLength","_padding","writer","_writeData","paddingOffset","BUFFER_OVERRUN","offset","_getValue","coerceFunc","allowLoose","_offset","_coerceFunc","coerce","loose","alignedLength","Math","ceil","_peekBytes","readBytes","super","_throwError","writeValue","reader","readValue","coder","pack","coders","values","arrayValues","unique","map","argument","staticWriter","dynamicWriter","updateFuncs","forEach","dynamicOffset","updateFunc","writeUpdatableValue","baseOffset","func","appendWriter","unpack","baseReader","subReader","offsetReader","baseType","uniqueNames","reduce","accum","enumerable","get","defaultChild","count","checkArgumentCount","isZero","writeBytes","size","maxUintValue","mask","bounds","gt","types","ModifiersBytes","calldata","memory","storage","ModifiersNest","checkModifier","parseParamType","param","allowIndexed","originalParam","newNode","parent","node","state","allowType","indexed","replace","allowParams","verifyType","components","child","allowName","allowArray","sibling","readArray","populate","FormatTypes","sighash","minimal","full","json","paramTypeArray","arrayLength","arrayChildren","fromObject","_isParamType","comp","JSON","parse","stringify","isParamType","ParamTypify","parseParams","allowIndex","splitNesting","_isFragment","isFragment","EventFragment","ErrorFragment","trim","anonymous","inputs","input","isEventFragment","verifyIdentifier","regexParen","modifier","parseGas","gas","parseModifiers","constant","payable","stateMutability","console","log","verifyState","isConstructorFragment","parens","outputs","output","isFunctionFragment","returns","checkForbidden","fragment","sig","isErrorFragment","regexIdentifier","depth","paramTypeBytes","paramTypeNumber","_getCoder","component","_getWordSize","_getWriter","_getReader","defaultAbiCoder","_isIndexed","BuiltinErrors","signature","reason","wrapAccessError","property","wrap","fragments","abi","filter","bucket","deploy","functions","events","address","eventFragment","nameOrSignatureOrSighash","getSighash","matching","keys","nameOrSignatureOrTopic","topichash","getEventTopic","constructor","getFunction","getError","_","getEvent","_abiCoder","_encodeParams","_decodeParams","functionFragment","errorArgs","errorName","errorSignature","selector","builtin","CALL_EXCEPTION","method","UNEXPECTED_ARGUMENT","topics","encodeTopic","pop","dataTypes","dataValues","topicHash","expected","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","hash","tx","args","topic","decodeEventLog","hexData","errorFragment","_isInterface","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","done","then","_isForkEvent","checkAbstract","gasPrice","getBlock","getGasPrice","catch","maxFeePerGas","maxPriorityFeePerGas","baseFeePerGas","eventName","listener","on","off","_isProvider","allowedTransactionKeys","forwardErrors","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","blockTag","_checkProvider","provider","getBalance","getAddress","getTransactionCount","transaction","checkTransaction","estimateGas","populateTransaction","signedTx","signTransaction","sendTransaction","network","getNetwork","chainId","getFeeData","resolveName","all","to","hasEip1559","feeData","nonce","gasLimit","UNPREDICTABLE_GAS_LIMIT","getChainId","results","_isSigner","_fail","domain","accessList","customData","resolver","nameOrPromise","resolveAddresses","paramType","makeError","contract","overrides","signer","override","resolved","resolvedAddress","interface","encodeFunctionData","ro","intrinsic","roValue","leftovers","l","buildPopulate","buildEstimate","signerOrProvider","addContractWait","wait","bind","confirmations","receipt","logs","event","parsed","parseLog","eventSignature","removeListener","blockHash","getTransaction","transactionHash","getTransactionReceipt","buildCall","collapseSimple","deployTransaction","_deployed","decodeFunctionResult","buildSend","txRequest","buildDefault","getEventTag","tag","_listeners","once","item","listenerCount","argsCopy","setTimeout","ErrorRunningEvent","contractInterface","prepareEvent","decodeError","addressOrName","Contract","isSigner","isProvider","uniqueFilters","filters","encodeFilterTopics","uniqueSignatures","callStatic","signatures","isInterface","_deployedPromise","getCode","contractAddress","deployed","isIndexed","runningEvent","_runningEvents","_normalizeRunningEvent","emit","_wrappedEmits","_checkRunningEvents","addListener","wrappedEmit","_wrapEvent","getEmit","fromBlockOrBlockhash","toBlock","_getRunningEvent","fromBlock","getLogs","_addEventListener","run","listeners","removeAllListeners","bytecode","bytecodeHex","encodeDeploy","unsignedTx","getDeployTransaction","getContract","compilerOutput","MISSING_ARGUMENT","evm","getInterface","messagePrefix","hashMessage","fill","One","MaxUint256","hexPadRight","padOffset","hexTrue","hexFalse","domainFieldTypes","verifyingContract","salt","domainFieldNames","checkString","domainChecks","getBaseEncoder","boundsUpper","boundsLower","encodeType","fields","links","parents","subtypes","field","encoder","primaryTypes","n","checkCircular","found","subtype","primaryType","st","sort","_types","_encoderCache","_getEncoder","subEncoder","getEncoder","encodedType","encodeData","hashStruct","callback","_visit","domainFields","EIP712Domain","hashDomain","ensCache","visit","domainValues","domainTypes","typesWithDomain","alphabet","_alphabetMap","digits","carry","base","string","k","_leader","q","byte","reverse","Base58","SupportedAlgorithm","ripemd160","update","digest","sha256","sha512","computeHmac","algorithm","hmac","pbkdf2","password","iterations","keylen","hashAlgorithm","hLen","DK","block1","T","U","destPos","len","exportWordlist","locale","mnemonic","wordlist","word","getWord","getWordIndex","lang","_ethers","wordlists","loadWords","langEn","register","en","MasterSecret","HardenedBit","getUpperMask","getLowerMask","bytes32","base58check","getWordlist","defaultPath","privateKey","publicKey","parentFingerprint","chainCode","mnemonicOrPath","signingKey","compressedPublicKey","I","IL","IR","ki","Ki","ek","_addPoint","srcMnemonic","phrase","fingerprint","shift","_derive","seed","seedArray","entropyToMnemonic","mnemonicToEntropy","_fromSeed","mnemonicToSeed","extendedKey","NFKD","checkNormalize","entropy","normalize","bit","entropyBits","checksumBits","checksumMask","checksum","indices","remainingBits","isValidMnemonic","getAccountPath","looseArrayify","hexString","zpad","getPassword","NFKC","searchPath","currentChild","matchingChild","uuidV4","hasMnemonic","_isKeystoreAccount","_decrypt","cipher","aesCtr","_getAccount","computedMAC","mnemonicKey","account","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","fromMnemonic","derivePath","pbkdf2Sync","passwordBytes","dkLen","prfFunc","_computeKdfKey","pbkdf2Func","scryptFunc","progressCallback","kdf","N","prf","decryptSync","syncScrypt","scrypt","options","client","random","uuidRandom","uuid","derivedKey","macPrefix","mac","id","Crypto","cipherparams","kdfparams","dklen","now","timestamp","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","_isCrowdsaleAccount","ethaddr","encseed","encryptedSeed","aesCbc","seedHex","seedHexBytes","isCrowdsaleWallet","isKeystoreWallet","getJsonWalletAddress","decryptJsonWallet","decryptJsonWalletSync","isAccount","isSigningKey","curve","_mnemonic","_signingKey","signDigest","populated","resolveNames","extraEntropy","verifyMessage","verifyTypedData","isRenetworkable","ethDefaultProvider","providers","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","AlchemyProvider","alchemy","PocketProvider","skip","CloudflareProvider","FallbackProvider","quorum","renetwork","etcDefaultProvider","url","JsonRpcProvider","homestead","ensAddress","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","classic","classicMorden","classicTestnet","classicKotti","xdai","matic","maticmum","optimism","arbitrum","bnb","bnbt","standard","defaultProvider","bytes2","createTable","lo","pair","createRangeTable","hi","h","matchMap","ranges","range","d","Table_A_1_ranges","Table_B_1_flags","Table_B_2_ranges","s","Table_B_2_lut_abs","Table_B_2_lut_rel","Table_B_2_complex","Table_C_ranges","flatten","_nameprepTableA1","codepoint","_nameprepTableB2","codes","complex","_nameprepTableC","nameprep","codesTableB2","Zeros","Partition","isValidName","namehash","current","partition","label","textData","atob","btoa","getUrl","href","request","headers","body","skipFetchSetup","mode","cache","credentials","redirect","referrer","response","fetch","arrayBuffer","statusCode","status","statusMessage","statusText","staller","duration","bodyify","_fetchData","connection","processFunc","attemptLimit","throttleLimit","assertArgument","throttleCallback","throttleSlotInterval","allow304","timeout","allowGzip","user","allowInsecureAuthentication","authorization","reData","dataMatch","SERVER_ERROR","requestBody","requestMethod","flatHeaders","header","runningTimeout","timer","promise","TIMEOUT","cancel","clearTimeout","runningFetch","attempt","location","tryAgain","stall","retryAfter","pow","serverError","throttleRetry","race","fetchJson","processJsonFunc","updated","hasContentType","poll","ceiling","interval","retryLimit","oncePoll","onceBlock","formats","getDefaultFormats","bigNumber","number","strictData","allowNull","blockNumber","transactionIndex","uint256","creates","raw","transactionRequest","receiptLog","arrayOf","logIndex","gasUsed","logsBloom","cumulativeGasUsed","effectiveGasPrice","parentHash","difficulty","miner","extraData","transactions","blockWithTransactions","transactionResponse","filterLog","removed","boolean","allowFalsish","strict","author","_difficulty","_block","networkId","byzantium","checkKey","checkValue","nullValue","replaceValue","array","isCommunityResourcable","isCommunityResource","throttleMessage","showThrottleMessage","checkTopic","serializeTopics","sorted","deserializeTopics","isForkEvent","PollableEvents","coinInfos","symbol","p2pkh","p2sh","ilk","bytes32ify","base58Encode","matchers","_parseString","_parseBytes","formatter","parameters","coinType","hexBytes","coinInfo","callAddress","_fetchBytes","_getAddress","linkage","avatar","getText","content","owner","_resolvedAddress","addr","tokenId","tokenOwner","balance","metadataUrl","metadata","image","ipfs","swarm","keyBytes","defaultFormatter","nextPollId","_events","_emitted","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","_maxInternalBlockNumber","_lastBlockNumber","_pollingInterval","_fastQueryDate","_network","UNKNOWN_ERROR","NETWORK_ERROR","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","pollId","runners","_getInternalBlockNumber","pollingInterval","abs","previousBlockNumber","eventBlockNumber","runner","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","getBlockNumber","_waitForTransaction","replaceable","cancelFuncs","alreadyDone","minedHandler","lastBlockNumber","startBlock","scannedBlock","replaceHandler","mined","getBlockWithTransactions","ti","waitForTransaction","eq","TRANSACTION_REPLACED","cancelled","replacement","_wrapTransaction","unref","_getBlockTag","position","expectedHash","returnedHash","confirms","signedTransaction","hexTx","_getTransactionRequest","blockHashOrBlockTag","includeTransactions","blockWithTxs","_getBlock","_getFilter","_getResolver","getResolver","reverseName","resolverAddress","nameOrAddress","getAvatar","NOT_IMPLEMENTED","pollable","_startEvent","stopped","eventTag","_stopEvent","errorGas","checkError","responseText","getResult","payload","getLowerCase","addressOrIndex","UncheckedJsonRpcSigner","_address","_index","send","accounts","fromAddress","estimate","sender","hexlifyTransaction","sendUncheckedTransaction","getPayload","networkOrReady","_nextId","_eventLoopCache","_cache","_uncachedDetectNetwork","getSigner","connectUnchecked","jsonrpc","action","prepareRequest","_startPending","_pendingFilter","self","pendingFilter","filterId","hashes","seq","allowExtra","allowed","WS","WebSocket","NextId","_wsReady","_websocket","onopen","_requests","onmessage","messageEvent","_subs","subscription","fauxPoll","_detectNetwork","rid","subIdPromise","_subIds","subId","_subscribe","emitReceipt","readyState","CONNECTING","onerror","close","_super","create","apiKey","defaultApiKey","host","getTransactionPostData","maxFeePerGs","storageKeys","getJsonResult","checkLogTag","getBaseUrl","query","baseUrl","apikey","post","getPostUrl","getPostData","procFunc","payloadStr","txhash","postData","topic0","blocks","ethusd","endBlock","startblock","endblock","timeStamp","shuffled","tmp","checkNetworks","median","maxDelta","middle","serialize","isBigNumber","nextRid","getPromise","ForwardErrors","ForwardProperties","exposeDebugConfig","config","weight","start","normalizedTally","configs","tally","getProcessFunc","_highestBlockNumber","waitForSync","getRunner","currentBlockNumber","getEtherPrice","getStorageAt","providerConfigs","configOrProvider","stallTimeout","priority","total","first","t0","inflightWeight","backend","waiting","errorCode","props","IpcProvider","defaultProjectId","projectId","projectSecret","apiKeyObj","_pendingBatch","inflightRequest","_pendingBatchAggregator","batch","inflight","defaultApplicationIds","applicationId","loadBalancer","applicationSecretKey","buildWeb3LegacyFetcher","sendFunc","fetcher","buildEip1193Fetcher","jsonRpcFetchFunc","subprovider","isMetaMask","sendAsync","getDefaultProvider","NodesmithProvider","Web3Provider","regexBytes","regexNumber","regexArray","_pack","byteLength","tight","keccak256","formatBytes32String","parseBytes32String"],"mappings":"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AAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,EAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,EAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAC//CC,EAAI,CAAC,GAAM,EAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,EAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,EAAM,IAAM,IAAM,GAAM,EAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,EAAM,IAAM,IAAM,IAAM,EAAM,EAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,EAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KAG//CC,EAAK,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,EAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAC1/FC,EAAK,CAAC,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,EAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,SAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAC1/FC,EAAK,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,SAAY,WAAY,UAAY,WAAY,UAAY,WAAY,SAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,EAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAC1/FC,EAAK,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,SAAY,WAAY,UAAY,WAAY,UAAY,WAAY,SAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,EAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAG1/FC,EAAK,CAAC,WAAY,WAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,SAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,EAAY,UAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAC1/FC,EAAK,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,EAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,SAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,SAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAC1/FC,EAAK,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,SAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,EAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAC1/FC,EAAK,CAAC,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,SAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,WAAY,SAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,SAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,EAAY,WAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,YAG1/FC,EAAK,CAAC,EAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,SAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,SAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,UAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAC1/FC,EAAK,CAAC,EAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,SAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,SAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,SAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,SAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAC1/FC,EAAK,CAAC,EAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,UAAY,UAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,UAAY,UAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,UAAY,UAAY,WAAY,UAAY,UAAY,UAAY,UAAY,SAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAC1/FC,EAAK,CAAC,EAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,UAAY,UAAY,UAAY,UAAY,SAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WA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","file":"js/chunk-f292d608.dbee872f.js","sourcesContent":["var uncurryThis = require('../internals/function-uncurry-this');\nvar redefine = require('../internals/redefine');\n\nvar DatePrototype = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar un$DateToString = uncurryThis(DatePrototype[TO_STRING]);\nvar getTime = uncurryThis(DatePrototype.getTime);\n\n// `Date.prototype.toString` method\n// https://tc39.es/ecma262/#sec-date.prototype.tostring\nif (String(new Date(NaN)) != INVALID_DATE) {\n  redefine(DatePrototype, TO_STRING, function toString() {\n    var value = getTime(this);\n    // eslint-disable-next-line no-self-compare -- NaN check\n    return value === value ? un$DateToString(this) : INVALID_DATE;\n  });\n}\n","\"use strict\";\nimport { arrayify, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BigNumber, isBigNumberish } from \"./bignumber\";\nconst _constructorGuard = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\nfunction throwFault(message, fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nexport function formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n    const negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    }\n    else {\n        value = whole + \".\" + fraction;\n    }\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nexport function parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") {\n        fraction = \"0\";\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nexport class FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        if (typeof (value) === \"number\") {\n            value = `fixed128x${value}`;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            const check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\nexport class FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        logger.checkNew(new.target, FixedNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    _checkFormat(other) {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n    addUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n    floor() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    ceiling() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n    isZero() {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n    isNegative() {\n        return (this._value[0] === \"-\");\n    }\n    toString() { return this._value; }\n    toHexString(width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return FixedNumber.fromString(this._value, format);\n    }\n    static fromValue(value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n    static fromString(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        const numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        let hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static fromBytes(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n//# sourceMappingURL=fixednumber.js.map","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar $toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar regExpFlags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar n$ToString = RegExpPrototype[TO_STRING];\nvar getFlags = uncurryThis(regExpFlags);\n\nvar NOT_GENERIC = fails(function () { return n$ToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = PROPER_FUNCTION_NAME && n$ToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = $toString(R.source);\n    var rf = R.flags;\n    var f = $toString(rf === undefined && isPrototypeOf(RegExpPrototype, R) && !('flags' in RegExpPrototype) ? getFlags(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n//# sourceMappingURL=hashes.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\nlet anyGlobal = null;\ntry {\n    anyGlobal = window;\n    if (anyGlobal == null) {\n        throw new Error(\"try next\");\n    }\n}\ncatch (error) {\n    try {\n        anyGlobal = global;\n        if (anyGlobal == null) {\n            throw new Error(\"try next\");\n        }\n    }\n    catch (error) {\n        anyGlobal = {};\n    }\n}\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nexport function randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n}\n;\n//# sourceMappingURL=random.js.map","export const version = \"units/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value) {\n    const comps = String(value).split(\".\");\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") {\n        whole = whole.substring(1);\n    }\n    if (whole === \"\") {\n        whole = \"0\";\n    }\n    let suffix = \"\";\n    if (comps.length === 2) {\n        suffix = \".\" + (comps[1] || \"0\");\n    }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        }\n        else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n    return negative + formatted.join(\",\") + suffix;\n}\nexport function formatUnits(value, unitName) {\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return formatFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function parseUnits(value, unitName) {\n    if (typeof (value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return parseFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nexport function parseEther(ether) {\n    return parseUnits(ether, 18);\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\"; // \"\\uD835\\uDF63\";\n//# sourceMappingURL=strings.js.map","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n//# sourceMappingURL=addresses.js.map","export const version = \"abi/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nexport function checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nexport class Coder {\n    constructor(name, type, localName, dynamic) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    _throwError(message, value) {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n}\nexport class Writer {\n    constructor(wordSize) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n    get data() {\n        return hexConcat(this._data);\n    }\n    get length() { return this._dataLength; }\n    _writeData(data) {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this._writeData(concat(writer._data));\n    }\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value) {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([bytes, this._padding.slice(paddingOffset)]);\n        }\n        return this._writeData(bytes);\n    }\n    _getValue(value) {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n        }\n        return bytes;\n    }\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value) {\n        return this._writeData(this._getValue(value));\n    }\n    writeUpdatableValue() {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\nexport class Reader {\n    constructor(data, wordSize, coerceFunc, allowLoose) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n        this._offset = 0;\n    }\n    get data() { return hexlify(this._data); }\n    get consumed() { return this._offset; }\n    // The default Coerce function\n    static coerce(name, value) {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) {\n            value = value.toNumber();\n        }\n        return value;\n    }\n    coerce(name, value) {\n        if (this._coerceFunc) {\n            return this._coerceFunc(name, value);\n        }\n        return Reader.coerce(name, value);\n    }\n    _peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            }\n            else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength);\n    }\n    subReader(offset) {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n    readBytes(length, loose) {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    readValue() {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, value) {\n        try {\n            value = getAddress(value);\n        }\n        catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    constructor(coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n    defaultValue() {\n        return this.coder.defaultValue();\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nimport { Coder, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\nexport function pack(writer, coders, values) {\n    let arrayValues = null;\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\nexport function unpack(reader, coders) {\n    let values = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) {\n                accum[name] = 0;\n            }\n            accum[name]++;\n        }\n        return accum;\n    }, {});\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder, index) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) {\n            return;\n        }\n        if (name === \"length\") {\n            name = \"_length\";\n        }\n        if (values[name] != null) {\n            return;\n        }\n        const value = values[index];\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n        else {\n            values[name] = value;\n        }\n    });\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n    return Object.freeze(values);\n}\nexport class ArrayCoder extends Coder {\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        this.coder = coder;\n        this.length = length;\n    }\n    defaultValue() {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n    encode(writer, value) {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new AnonymousCoder(this.coder));\n        }\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n//# sourceMappingURL=array.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, value) {\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n//# sourceMappingURL=boolean.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    defaultValue() {\n        return \"0x\";\n    }\n    encode(writer, value) {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n    defaultValue() {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n    encode(writer, value) {\n        let data = arrayify(value);\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class NullCoder extends Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    defaultValue() {\n        return null;\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes([]);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n//# sourceMappingURL=null.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\nimport { Coder } from \"./abstract-coder\";\nexport class NumberCoder extends Coder {\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        this.size = size;\n        this.signed = signed;\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, value) {\n        let v = BigNumber.from(value);\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        }\n        else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n        return writer.writeValue(v);\n    }\n    decode(reader) {\n        let value = reader.readValue().mask(this.size * 8);\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        return reader.coerce(this.name, value);\n    }\n}\n//# sourceMappingURL=number.js.map","\"use strict\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { DynamicBytesCoder } from \"./bytes\";\nexport class StringCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    defaultValue() {\n        return \"\";\n    }\n    encode(writer, value) {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n    decode(reader) {\n        return toUtf8String(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\nexport class TupleCoder extends Coder {\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, value) {\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n//# sourceMappingURL=tuple.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nconst _constructorGuard = {};\nlet ModifiersBytes = { calldata: true, memory: true, storage: true };\nlet ModifiersNest = { calldata: true, memory: true };\nfunction checkModifier(type, name) {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) {\n            return true;\n        }\n    }\n    else if (type === \"address\") {\n        if (name === \"payable\") {\n            return true;\n        }\n    }\n    else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) {\n            return true;\n        }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param, allowIndexed) {\n    let originalParam = param;\n    function throwError(i) {\n        logger.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n    function newNode(parent) {\n        let node = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) {\n            node.indexed = false;\n        }\n        return node;\n    }\n    let parent = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                }\n                else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [newNode(node)];\n                node = node.components[0];\n                break;\n            case \")\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let child = node;\n                node = node.parent;\n                if (!node) {\n                    throwError(i);\n                }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n            case \",\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let sibling = newNode(node.parent);\n                //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n            // Hit a space...\n            case \" \":\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) {\n                                throwError(i);\n                            }\n                            if (node.indexed) {\n                                throwError(i);\n                            }\n                            node.indexed = true;\n                            node.name = \"\";\n                        }\n                        else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        }\n                        else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n                break;\n            case \"[\":\n                if (!node.state.allowArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n            case \"]\":\n                if (!node.state.readArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                }\n                else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                }\n                else if (node.state.readArray) {\n                    node.type += c;\n                }\n                else {\n                    throwError(i);\n                }\n        }\n    }\n    if (node.parent) {\n        logger.throwArgumentError(\"unexpected eof\", \"param\", param);\n    }\n    delete parent.state;\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) {\n            throwError(originalParam.length - 7);\n        }\n        if (node.indexed) {\n            throwError(originalParam.length - 7);\n        }\n        node.indexed = true;\n        node.name = \"\";\n    }\n    else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n    parent.type = verifyType(parent.type);\n    return parent;\n}\nfunction populate(object, params) {\n    for (let key in params) {\n        defineReadOnly(object, key, params[key]);\n    }\n}\nexport const FormatTypes = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n    // JSON-format a la Solidity\n    json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nexport class ParamType {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new ParamType()\"\n            });\n        }\n        populate(this, params);\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        }\n        else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\" : this.type)\n            });\n        }\n        this._isParamType = true;\n        Object.freeze(this);\n    }\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n        }\n        else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    static from(value, allowIndexed) {\n        if (typeof (value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ParamType.isParamType(value)) {\n            return value;\n        }\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null : !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject) : null)\n        });\n    }\n    static fromString(value, allowIndexed) {\n        function ParamTypify(node) {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n    static isParamType(value) {\n        return !!(value != null && value._isParamType);\n    }\n}\n;\nfunction parseParams(value, allowIndex) {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\nexport class Fragment {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n        this._isFragment = true;\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n        return Fragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n    static fromString(value) {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n        if (value.split(\" \")[0] === \"event\") {\n            return EventFragment.fromString(value.substring(5).trim());\n        }\n        else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        }\n        else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        }\n        else if (value.split(\" \")[0] === \"error\") {\n            return ErrorFragment.fromString(value.substring(5).trim());\n        }\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n    static isFragment(value) {\n        return !!(value && value._isFragment);\n    }\n}\nexport class EventFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (EventFragment.isEventFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n        const params = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n        return new EventFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch (modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n    static isEventFragment(value) {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\nfunction parseGas(value, params) {\n    params.gas = null;\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n    return value;\n}\nfunction parseModifiers(value, params) {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\nfunction verifyState(value) {\n    let result = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n    }\n    else if (value.payable != null) {\n        result.payable = !!value.payable;\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n        result.constant = !!value.constant;\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        }\n        else {\n            result.stateMutability = (result.payable ? \"payable\" : \"nonpayable\");\n        }\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n    }\n    else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\" : \"payable\");\n    }\n    else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n    return result;\n}\nexport class ConstructorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n        let result = \"constructor(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ConstructorFragment.isConstructorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n        const params = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"constructor\" };\n        value = parseGas(value, params);\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n        params.inputs = parseParams(parens[2].trim(), false);\n        parseModifiers(parens[3].trim(), params);\n        return ConstructorFragment.fromObject(params);\n    }\n    static isConstructorFragment(value) {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\nexport class FunctionFragment extends ConstructorFragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            }\n            else if (this.constant) {\n                result += \"view \";\n            }\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map((output) => output.format(format)).join(\", \") + \") \";\n            }\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (FunctionFragment.isFunctionFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new FunctionFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"function\" };\n        value = parseGas(value, params);\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        parseModifiers(parens[3].trim(), params);\n        // We have outputs\n        if (comps.length > 1) {\n            let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        }\n        else {\n            params.outputs = [];\n        }\n        return FunctionFragment.fromObject(params);\n    }\n    static isFunctionFragment(value) {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n//export class StructFragment extends Fragment {\n//}\nfunction checkForbidden(fragment) {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${sig} error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\nexport class ErrorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ErrorFragment.isErrorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : [])\n        };\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n    static fromString(value) {\n        let params = { type: \"error\" };\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n    static isErrorFragment(value) {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\nfunction verifyType(type) {\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    }\n    else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n    // @TODO: more verification\n    return type;\n}\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value) {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n    }\n    return value;\n}\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nfunction splitNesting(value) {\n    value = value.trim();\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        }\n        else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            }\n            else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) {\n        result.push(accum);\n    }\n    return result;\n}\n//# sourceMappingURL=fragments.js.map","\"use strict\";\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Reader, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\nimport { ParamType } from \"./fragments\";\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nexport class AbiCoder {\n    constructor(coerceFunc) {\n        logger.checkNew(new.target, AbiCoder);\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n    _getCoder(param) {\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n    _getWordSize() { return 32; }\n    _getReader(data, allowLoose) {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n    _getWriter() {\n        return new Writer(this._getWordSize());\n    }\n    getDefaultValue(types) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n    encode(types, values) {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    decode(types, data, loose) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\nexport const defaultAbiCoder = new AbiCoder();\n//# sourceMappingURL=abi-coder.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\nimport { defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, ParamType } from \"./fragments\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport { checkResultErrors };\nexport class LogDescription extends Description {\n}\nexport class TransactionDescription extends Description {\n}\nexport class ErrorDescription extends Description {\n}\nexport class Indexed extends Description {\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n}\nconst BuiltinErrors = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [\"string\"], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [\"uint256\"] }\n};\nfunction wrapAccessError(property, error) {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n    wrap.error = error;\n    return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    constructor(fragments) {\n        logger.checkNew(new.target, Interface);\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n        defineReadOnly(this, \"_abiCoder\", getStatic(new.target, \"getAbiCoder\")());\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"errors\", {});\n        defineReadOnly(this, \"events\", {});\n        defineReadOnly(this, \"structs\", {});\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n            bucket[signature] = fragment;\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n    format(format) {\n        if (!format) {\n            format = FormatTypes.full;\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n            return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n        return abi;\n    }\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder() {\n        return defaultAbiCoder;\n    }\n    static getAddress(address) {\n        return getAddress(address);\n    }\n    static getSighash(fragment) {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n    static getEventTopic(eventFragment) {\n        return id(eventFragment.format());\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n            return this.functions[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic) {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n            return this.events[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n            return this.errors[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment) {\n        if (typeof (fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            }\n            catch (error) {\n                try {\n                    fragment = this.getError(fragment);\n                }\n                catch (_) {\n                    throw error;\n                }\n            }\n        }\n        return getStatic(this.constructor, \"getSighash\")(fragment);\n    }\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        return getStatic(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n    _decodeParams(params, data) {\n        return this._abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this._abiCoder.encode(params, values);\n    }\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    decodeErrorResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${fragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n    encodeErrorResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [])\n        ]));\n    }\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [])\n        ]));\n    }\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        let bytes = arrayify(data);\n        let reason = null;\n        let errorArgs = null;\n        let errorName = null;\n        let errorSignature = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                }\n                catch (error) { }\n                break;\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) {\n                        reason = errorArgs[0];\n                    }\n                }\n                else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    }\n                    catch (error) {\n                        console.log(error);\n                    }\n                }\n                break;\n            }\n        }\n        return logger.throwError(\"call revert exception\", Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            errorArgs, errorName, errorSignature, reason\n        });\n    }\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));\n    }\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            });\n        }\n        let topics = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return id(value);\n            }\n            else if (param.type === \"bytes\") {\n                return keccak256(hexlify(value));\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                this._abiCoder.encode([\"address\"], [value]);\n            }\n            return hexZeroPad(hexlify(value), 32);\n        };\n        values.forEach((value, index) => {\n            let param = eventFragment.inputs[index];\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this._abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this._abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment, data, topics) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n        let indexed = [];\n        let nonIndexed = [];\n        let dynamic = [];\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)) : null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n        let result = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n                }\n                else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n                }\n                else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        result[index] = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    result[index] = error;\n                }\n            }\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value); }\n                    });\n                }\n                else {\n                    result[param.name] = value;\n                }\n            }\n        });\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${i}`, value); }\n                });\n            }\n        }\n        return Object.freeze(result);\n    }\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx) {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log) {\n        let fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n        return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n    parseError(data) {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n    static isInterface(value) {\n        return !!(value && value._isInterface);\n    }\n}\n//# sourceMappingURL=interface.js.map","export const version = \"abstract-provider/5.5.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\nexport class ForkEvent extends Description {\n    static isForkEvent(value) {\n        return !!(value && value._isForkEvent);\n    }\n}\nexport class BlockForkEvent extends ForkEvent {\n    constructor(blockHash, expiry) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\nexport class TransactionForkEvent extends ForkEvent {\n    constructor(hash, expiry) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\nexport class TransactionOrderForkEvent extends ForkEvent {\n    constructor(beforeHash, afterHash, expiry) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n///////////////////////////////\n// Exported Abstracts\nexport class Provider {\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n    getFeeData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { block, gasPrice } = yield resolveProperties({\n                block: this.getBlock(\"latest\"),\n                gasPrice: this.getGasPrice().catch((error) => {\n                    // @TODO: Why is this now failing on Calaveras?\n                    //console.log(error);\n                    return null;\n                })\n            });\n            let maxFeePerGas = null, maxPriorityFeePerGas = null;\n            if (block && block.baseFeePerGas) {\n                // We may want to compute this more accurately in the future,\n                // using the formula \"check if the base fee is correct\".\n                // See: https://eips.ethereum.org/EIPS/eip-1559\n                maxPriorityFeePerGas = BigNumber.from(\"2500000000\");\n                maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n            }\n            return { maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n        });\n    }\n    // Alias for \"on\"\n    addListener(eventName, listener) {\n        return this.on(eventName, listener);\n    }\n    // Alias for \"off\"\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n    static isProvider(value) {\n        return !!(value && value._isProvider);\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"abstract-signer/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst allowedTransactionKeys = [\n    \"accessList\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n;\n;\nexport class Signer {\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n    ///////////////////\n    // Sub-classes MAY override these\n    getBalance(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getBalance\");\n            return yield this.provider.getBalance(this.getAddress(), blockTag);\n        });\n    }\n    getTransactionCount(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getTransactionCount\");\n            return yield this.provider.getTransactionCount(this.getAddress(), blockTag);\n        });\n    }\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"estimateGas\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.estimateGas(tx);\n        });\n    }\n    // Populates \"from\" if unspecified, and calls with the transaction\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"call\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.call(tx, blockTag);\n        });\n    }\n    // Populates all fields in a transaction, signs it and sends it to the network\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"sendTransaction\");\n            const tx = yield this.populateTransaction(transaction);\n            const signedTx = yield this.signTransaction(tx);\n            return yield this.provider.sendTransaction(signedTx);\n        });\n    }\n    getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getChainId\");\n            const network = yield this.provider.getNetwork();\n            return network.chainId;\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getGasPrice\");\n            return yield this.provider.getGasPrice();\n        });\n    }\n    getFeeData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getFeeData\");\n            return yield this.provider.getFeeData();\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"resolveName\");\n            return yield this.provider.resolveName(name);\n        });\n    }\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction) {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n        const tx = shallowCopy(transaction);\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n        }\n        else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n        return tx;\n    }\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    populateTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            if (tx.to != null) {\n                tx.to = Promise.resolve(tx.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                    if (to == null) {\n                        return null;\n                    }\n                    const address = yield this.resolveName(to);\n                    if (address == null) {\n                        logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                    }\n                    return address;\n                }));\n                // Prevent this error from causing an UnhandledPromiseException\n                tx.to.catch((error) => { });\n            }\n            // Do not allow mixing pre-eip-1559 and eip-1559 properties\n            const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n            if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n                logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n            }\n            else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n                logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n            }\n            if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n                // Fully-formed EIP-1559 transaction (skip getFeeData)\n                tx.type = 2;\n            }\n            else if (tx.type === 0 || tx.type === 1) {\n                // Explicit Legacy or EIP-2930 transaction\n                // Populate missing gasPrice\n                if (tx.gasPrice == null) {\n                    tx.gasPrice = this.getGasPrice();\n                }\n            }\n            else {\n                // We need to get fee data to determine things\n                const feeData = yield this.getFeeData();\n                if (tx.type == null) {\n                    // We need to auto-detect the intended type of this transaction...\n                    if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                        // The network supports EIP-1559!\n                        // Upgrade transaction from null to eip-1559\n                        tx.type = 2;\n                        if (tx.gasPrice != null) {\n                            // Using legacy gasPrice property on an eip-1559 network,\n                            // so use gasPrice as both fee properties\n                            const gasPrice = tx.gasPrice;\n                            delete tx.gasPrice;\n                            tx.maxFeePerGas = gasPrice;\n                            tx.maxPriorityFeePerGas = gasPrice;\n                        }\n                        else {\n                            // Populate missing fee data\n                            if (tx.maxFeePerGas == null) {\n                                tx.maxFeePerGas = feeData.maxFeePerGas;\n                            }\n                            if (tx.maxPriorityFeePerGas == null) {\n                                tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                            }\n                        }\n                    }\n                    else if (feeData.gasPrice != null) {\n                        // Network doesn't support EIP-1559...\n                        // ...but they are trying to use EIP-1559 properties\n                        if (hasEip1559) {\n                            logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                                operation: \"populateTransaction\"\n                            });\n                        }\n                        // Populate missing fee data\n                        if (tx.gasPrice == null) {\n                            tx.gasPrice = feeData.gasPrice;\n                        }\n                        // Explicitly set untyped transaction to legacy\n                        tx.type = 0;\n                    }\n                    else {\n                        // getFeeData has failed us.\n                        logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"signer.getFeeData\"\n                        });\n                    }\n                }\n                else if (tx.type === 2) {\n                    // Explicitly using EIP-1559\n                    // Populate missing fee data\n                    if (tx.maxFeePerGas == null) {\n                        tx.maxFeePerGas = feeData.maxFeePerGas;\n                    }\n                    if (tx.maxPriorityFeePerGas == null) {\n                        tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                    }\n                }\n            }\n            if (tx.nonce == null) {\n                tx.nonce = this.getTransactionCount(\"pending\");\n            }\n            if (tx.gasLimit == null) {\n                tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                    if (forwardErrors.indexOf(error.code) >= 0) {\n                        throw error;\n                    }\n                    return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                        error: error,\n                        tx: tx\n                    });\n                });\n            }\n            if (tx.chainId == null) {\n                tx.chainId = this.getChainId();\n            }\n            else {\n                tx.chainId = Promise.all([\n                    Promise.resolve(tx.chainId),\n                    this.getChainId()\n                ]).then((results) => {\n                    if (results[1] !== 0 && results[0] !== results[1]) {\n                        logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                    }\n                    return results[0];\n                });\n            }\n            return yield resolveProperties(tx);\n        });\n    }\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n    _checkProvider(operation) {\n        if (!this.provider) {\n            logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: (operation || \"_checkProvider\")\n            });\n        }\n    }\n    static isSigner(value) {\n        return !!(value && value._isSigner);\n    }\n}\nexport class VoidSigner extends Signer {\n    constructor(address, provider) {\n        logger.checkNew(new.target, VoidSigner);\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    _fail(message, operation) {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n    signMessage(message) {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n    signTransaction(transaction) {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n    _signTypedData(domain, types, value) {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n    connect(provider) {\n        return new VoidSigner(this.address, provider);\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"contracts/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { checkResultErrors, Indexed, Interface } from \"@ethersproject/abi\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n///////////////////////////////\nconst allowedTransactionKeys = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true\n};\nfunction resolveName(resolver, nameOrPromise) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const name = yield nameOrPromise;\n        if (typeof (name) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n        }\n        // If it is already an address, just use it (after adding checksum)\n        try {\n            return getAddress(name);\n        }\n        catch (error) { }\n        if (!resolver) {\n            logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"resolveName\"\n            });\n        }\n        const address = yield resolver.resolveName(name);\n        if (address == null) {\n            logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n        }\n        return address;\n    });\n}\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nfunction resolveAddresses(resolver, value, paramType) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (Array.isArray(paramType)) {\n            return yield Promise.all(paramType.map((paramType, index) => {\n                return resolveAddresses(resolver, ((Array.isArray(value)) ? value[index] : value[paramType.name]), paramType);\n            }));\n        }\n        if (paramType.type === \"address\") {\n            return yield resolveName(resolver, value);\n        }\n        if (paramType.type === \"tuple\") {\n            return yield resolveAddresses(resolver, value, paramType.components);\n        }\n        if (paramType.baseType === \"array\") {\n            if (!Array.isArray(value)) {\n                return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"value\",\n                    value\n                }));\n            }\n            return yield Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n        }\n        return value;\n    });\n}\nfunction populateTransaction(contract, fragment, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // If an extra argument is given, it is overrides\n        let overrides = {};\n        if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            overrides = shallowCopy(args.pop());\n        }\n        // Make sure the parameter count matches\n        logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n        // Populate \"from\" override (allow promises)\n        if (contract.signer) {\n            if (overrides.from) {\n                // Contracts with a Signer are from the Signer's frame-of-reference;\n                // but we allow overriding \"from\" if it matches the signer\n                overrides.from = resolveProperties({\n                    override: resolveName(contract.signer, overrides.from),\n                    signer: contract.signer.getAddress()\n                }).then((check) => __awaiter(this, void 0, void 0, function* () {\n                    if (getAddress(check.signer) !== check.override) {\n                        logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"overrides.from\"\n                        });\n                    }\n                    return check.override;\n                }));\n            }\n            else {\n                overrides.from = contract.signer.getAddress();\n            }\n        }\n        else if (overrides.from) {\n            overrides.from = resolveName(contract.provider, overrides.from);\n            //} else {\n            // Contracts without a signer can override \"from\", and if\n            // unspecified the zero address is used\n            //overrides.from = AddressZero;\n        }\n        // Wait for all dependencies to be resolved (prefer the signer over the provider)\n        const resolved = yield resolveProperties({\n            args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n            address: contract.resolvedAddress,\n            overrides: (resolveProperties(overrides) || {})\n        });\n        // The ABI coded transaction\n        const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n        const tx = {\n            data: data,\n            to: resolved.address\n        };\n        // Resolved Overrides\n        const ro = resolved.overrides;\n        // Populate simple overrides\n        if (ro.nonce != null) {\n            tx.nonce = BigNumber.from(ro.nonce).toNumber();\n        }\n        if (ro.gasLimit != null) {\n            tx.gasLimit = BigNumber.from(ro.gasLimit);\n        }\n        if (ro.gasPrice != null) {\n            tx.gasPrice = BigNumber.from(ro.gasPrice);\n        }\n        if (ro.maxFeePerGas != null) {\n            tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas);\n        }\n        if (ro.maxPriorityFeePerGas != null) {\n            tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas);\n        }\n        if (ro.from != null) {\n            tx.from = ro.from;\n        }\n        if (ro.type != null) {\n            tx.type = ro.type;\n        }\n        if (ro.accessList != null) {\n            tx.accessList = accessListify(ro.accessList);\n        }\n        // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n        if (tx.gasLimit == null && fragment.gas != null) {\n            // Compute the intrinsic gas cost for this transaction\n            // @TODO: This is based on the yellow paper as of Petersburg; this is something\n            // we may wish to parameterize in v6 as part of the Network object. Since this\n            // is always a non-nil to address, we can ignore G_create, but may wish to add\n            // similar logic to the ContractFactory.\n            let intrinsic = 21000;\n            const bytes = arrayify(data);\n            for (let i = 0; i < bytes.length; i++) {\n                intrinsic += 4;\n                if (bytes[i]) {\n                    intrinsic += 64;\n                }\n            }\n            tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n        }\n        // Populate \"value\" override\n        if (ro.value) {\n            const roValue = BigNumber.from(ro.value);\n            if (!roValue.isZero() && !fragment.payable) {\n                logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: overrides.value\n                });\n            }\n            tx.value = roValue;\n        }\n        if (ro.customData) {\n            tx.customData = shallowCopy(ro.customData);\n        }\n        // Remove the overrides\n        delete overrides.nonce;\n        delete overrides.gasLimit;\n        delete overrides.gasPrice;\n        delete overrides.from;\n        delete overrides.value;\n        delete overrides.type;\n        delete overrides.accessList;\n        delete overrides.maxFeePerGas;\n        delete overrides.maxPriorityFeePerGas;\n        delete overrides.customData;\n        // Make sure there are no stray overrides, which may indicate a\n        // typo or using an unsupported key.\n        const leftovers = Object.keys(overrides).filter((key) => (overrides[key] != null));\n        if (leftovers.length) {\n            logger.throwError(`cannot override ${leftovers.map((l) => JSON.stringify(l)).join(\",\")}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides\",\n                overrides: leftovers\n            });\n        }\n        return tx;\n    });\n}\nfunction buildPopulate(contract, fragment) {\n    return function (...args) {\n        return populateTransaction(contract, fragment, args);\n    };\n}\nfunction buildEstimate(contract, fragment) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!signerOrProvider) {\n                logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"estimateGas\"\n                });\n            }\n            const tx = yield populateTransaction(contract, fragment, args);\n            return yield signerOrProvider.estimateGas(tx);\n        });\n    };\n}\nfunction addContractWait(contract, tx) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations) => {\n        return wait(confirmations).then((receipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event = deepCopy(log);\n                let parsed = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                }\n                catch (e) { }\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data, topics) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n                // Useful operations\n                event.removeListener = () => { return contract.provider; };\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                };\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                };\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                };\n                return event;\n            });\n            return receipt;\n        });\n    };\n}\nfunction buildCall(contract, fragment, collapseSimple) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Extract the \"blockTag\" override if present\n            let blockTag = undefined;\n            if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n                const overrides = shallowCopy(args.pop());\n                if (overrides.blockTag != null) {\n                    blockTag = yield overrides.blockTag;\n                }\n                delete overrides.blockTag;\n                args.push(overrides);\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed(blockTag);\n            }\n            // Call a node and get the result\n            const tx = yield populateTransaction(contract, fragment, args);\n            const result = yield signerOrProvider.call(tx, blockTag);\n            try {\n                let value = contract.interface.decodeFunctionResult(fragment, result);\n                if (collapseSimple && fragment.outputs.length === 1) {\n                    value = value[0];\n                }\n                return value;\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    error.address = contract.address;\n                    error.args = args;\n                    error.transaction = tx;\n                }\n                throw error;\n            }\n        });\n    };\n}\nfunction buildSend(contract, fragment) {\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!contract.signer) {\n                logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"sendTransaction\"\n                });\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed();\n            }\n            const txRequest = yield populateTransaction(contract, fragment, args);\n            const tx = yield contract.signer.sendTransaction(txRequest);\n            // Tweak the tx.wait so the receipt has extra properties\n            addContractWait(contract, tx);\n            return tx;\n        });\n    };\n}\nfunction buildDefault(contract, fragment, collapseSimple) {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\nfunction getEventTag(filter) {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\") : \"\");\n}\nclass RunningEvent {\n    constructor(tag, filter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [];\n    }\n    addListener(listener, once) {\n        this._listeners.push({ listener: listener, once: once });\n    }\n    removeListener(listener) {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) {\n                return true;\n            }\n            done = true;\n            return false;\n        });\n    }\n    removeAllListeners() {\n        this._listeners = [];\n    }\n    listeners() {\n        return this._listeners.map((i) => i.listener);\n    }\n    listenerCount() {\n        return this._listeners.length;\n    }\n    run(args) {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n            const argsCopy = args.slice();\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n        return listenerCount;\n    }\n    prepareEvent(event) {\n    }\n    // Returns the array that will be applied to an emit\n    getEmit(event) {\n        return [event];\n    }\n}\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    constructor(address, contractInterface, fragment, topics) {\n        const filter = {\n            address: address\n        };\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) {\n                logger.throwArgumentError(\"topic mismatch\", \"topics\", topics);\n            }\n            filter.topics = topics.slice();\n        }\n        else {\n            filter.topics = [topic];\n        }\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n        event.decode = (data, topics) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        }\n        catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n    getEmit(event) {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) {\n            throw errors[0].error;\n        }\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    constructor(address, contractInterface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n            event.decode = (data, topics) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n            event.args = parsed.args;\n        }\n        catch (error) {\n            // No matching event\n        }\n    }\n}\nexport class BaseContract {\n    constructor(addressOrName, contractInterface, signerOrProvider) {\n        logger.checkNew(new.target, Contract);\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        }\n        else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n        defineReadOnly(this, \"callStatic\", {});\n        defineReadOnly(this, \"estimateGas\", {});\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"populateTransaction\", {});\n        defineReadOnly(this, \"filters\", {});\n        {\n            const uniqueFilters = {};\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                    };\n                });\n                if (!uniqueFilters[event.name]) {\n                    uniqueFilters[event.name] = [];\n                }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                }\n                else {\n                    logger.warn(`Duplicate definition of ${name} (${filters.join(\", \")})`);\n                }\n            });\n        }\n        defineReadOnly(this, \"_runningEvents\", {});\n        defineReadOnly(this, \"_wrappedEmits\", {});\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        }\n        else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            }\n            catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n        const uniqueNames = {};\n        const uniqueSignatures = {};\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${name}`]) {\n                    uniqueNames[`%${name}`] = [];\n                }\n                uniqueNames[`%${name}`].push(signature);\n            }\n            if (this[signature] == null) {\n                defineReadOnly(this, signature, buildDefault(this, fragment, true));\n            }\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) {\n                return;\n            }\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n            const signature = signatures[0];\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if (this[name] == null) {\n                    defineReadOnly(this, name, this[signature]);\n                }\n            }\n            catch (e) { }\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n    static getContractAddress(transaction) {\n        return getContractAddress(transaction);\n    }\n    static getInterface(contractInterface) {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n    // @TODO: Allow timeout?\n    deployed() {\n        return this._deployed();\n    }\n    _deployed(blockTag) {\n        if (!this._deployedPromise) {\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n            }\n            else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n        return this._deployedPromise;\n    }\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n    fallback(overrides) {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" });\n        }\n        const tx = shallowCopy(overrides || {});\n        [\"from\", \"to\"].forEach(function (key) {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider) {\n        if (typeof (signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n        const contract = new (this.constructor)(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n        return contract;\n    }\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName) {\n        return new (this.constructor)(addressOrName, this.interface, this.signer || this.provider);\n    }\n    static isIndexed(value) {\n        return Indexed.isIndexed(value);\n    }\n    _normalizeRunningEvent(runningEvent) {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n        }\n        return runningEvent;\n    }\n    _getRunningEvent(eventName) {\n        if (typeof (eventName) === \"string\") {\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName);\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof (topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            }\n            catch (error) { }\n            // Filter by the unknown topichash\n            const filter = {\n                address: this.address,\n                topics: eventName.topics\n            };\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n    _checkRunningEvents(runningEvent) {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent, log, listener) {\n        const event = deepCopy(log);\n        event.removeListener = () => {\n            if (!listener) {\n                return;\n            }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); };\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); };\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); };\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n        return event;\n    }\n    _addEventListener(runningEvent, listener, once) {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" });\n        }\n        runningEvent.addListener(listener, once);\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    }\n                    catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n    queryFilter(event, fromBlockOrBlockhash, toBlock) {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n        if (typeof (fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            filter.blockHash = fromBlockOrBlockhash;\n        }\n        else {\n            filter.fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash : 0);\n            filter.toBlock = ((toBlock != null) ? toBlock : \"latest\");\n        }\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n    on(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n    once(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n    emit(eventName, ...args) {\n        if (!this.provider) {\n            return false;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!this.provider) {\n            return 0;\n        }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n    listeners(eventName) {\n        if (!this.provider) {\n            return [];\n        }\n        if (eventName == null) {\n            const result = [];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener);\n                });\n            }\n            return result;\n        }\n        return this._getRunningEvent(eventName).listeners();\n    }\n    removeAllListeners(eventName) {\n        if (!this.provider) {\n            return this;\n        }\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    off(eventName, listener) {\n        if (!this.provider) {\n            return this;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n}\nexport class Contract extends BaseContract {\n}\nexport class ContractFactory {\n    constructor(contractInterface, bytecode, signer) {\n        let bytecodeHex = null;\n        if (typeof (bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        }\n        else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        }\n        else if (bytecode && typeof (bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = bytecode.object;\n        }\n        else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") {\n            bytecodeHex = \"0x\" + bytecodeHex;\n        }\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args) {\n        let tx = {};\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n        return tx;\n    }\n    deploy(...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let overrides = {};\n            // If 1 extra parameter was passed in, it contains overrides\n            if (args.length === this.interface.deploy.inputs.length + 1) {\n                overrides = args.pop();\n            }\n            // Make sure the call matches the constructor signature\n            logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n            // Resolve ENS names and promises in the arguments\n            const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n            params.push(overrides);\n            // Get the deployment transaction (with optional overrides)\n            const unsignedTx = this.getDeployTransaction(...params);\n            // Send the deployment transaction\n            const tx = yield this.signer.sendTransaction(unsignedTx);\n            const address = getStatic(this.constructor, \"getContractAddress\")(tx);\n            const contract = getStatic(this.constructor, \"getContract\")(address, this.interface, this.signer);\n            // Add the modified wait that wraps events\n            addContractWait(contract, tx);\n            defineReadOnly(contract, \"deployTransaction\", tx);\n            return contract;\n        });\n    }\n    attach(address) {\n        return (this.constructor).getContract(address, this.interface, this.signer);\n    }\n    connect(signer) {\n        return new (this.constructor)(this.interface, this.bytecode, signer);\n    }\n    static fromSolidity(compilerOutput, signer) {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n        if (typeof (compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n        const abi = compilerOutput.abi;\n        let bytecode = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        }\n        else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n        return new this(abi, bytecode, signer);\n    }\n    static getInterface(contractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n    static getContractAddress(tx) {\n        return getContractAddress(tx);\n    }\n    static getContract(address, contractInterface, signer) {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n//# sourceMappingURL=index.js.map","import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=message.js.map","export const version = \"hash/5.5.0\";\n//# sourceMappingURL=_version.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { id } from \"./id\";\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst NegativeOne = BigNumber.from(-1);\nconst Zero = BigNumber.from(0);\nconst One = BigNumber.from(1);\nconst MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nfunction hexPadRight(value) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return hexConcat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        if (typeof (value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        }\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        try {\n            return BigNumber.from(value).toString();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function (value) {\n        try {\n            return getAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) {\n                throw new Error(\"bad length\");\n            }\n            return hexlify(bytes);\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1) : width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;\n            return function (value) {\n                const v = BigNumber.from(value);\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${type}`, \"value\", value);\n                }\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n            return function (value) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${type}`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\nexport class TypedDataEncoder {\n    constructor(types) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n        defineReadOnly(this, \"_encoderCache\", {});\n        defineReadOnly(this, \"_types\", {});\n        // Link struct types to their direct child structs\n        const links = {};\n        // Link structs to structs which contain them as a child\n        const parents = {};\n        // Link all subtypes within a given struct\n        const subtypes = {};\n        Object.keys(types).forEach((type) => {\n            links[type] = {};\n            parents[type] = [];\n            subtypes[type] = {};\n        });\n        for (const name in types) {\n            const uniqueNames = {};\n            types[name].forEach((field) => {\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    return;\n                }\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        }\n        else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", types);\n        }\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n        // Check for circular type references\n        function checkCircular(type, found) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n            }\n            found[type] = true;\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) {\n                    return;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n            delete found[type];\n        }\n        checkCircular(this.primaryType, {});\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n    getEncoder(type) {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n    _getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(hexConcat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            };\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    encodeType(name) {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        }\n        return result;\n    }\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v) => this._visit(subtype, v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    static encode(domain, types, value) {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n    static resolveNames(domain, types, value, resolveName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Make a copy to isolate it from the object passed in\n            domain = shallowCopy(domain);\n            // Look up all ENS names\n            const ensCache = {};\n            // Do we need to look up the domain's verifyingContract?\n            if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n                ensCache[domain.verifyingContract] = \"0x\";\n            }\n            // We are going to use the encoder to visit all the base values\n            const encoder = TypedDataEncoder.from(types);\n            // Get a list of all the addresses\n            encoder.visit(value, (type, value) => {\n                if (type === \"address\" && !isHexString(value, 20)) {\n                    ensCache[value] = \"0x\";\n                }\n                return value;\n            });\n            // Lookup each name\n            for (const name in ensCache) {\n                ensCache[name] = yield resolveName(name);\n            }\n            // Replace the domain verifyingContract if needed\n            if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n                domain.verifyingContract = ensCache[domain.verifyingContract];\n            }\n            // Replace all ENS names with their address\n            value = encoder.visit(value, (type, value) => {\n                if (type === \"address\" && ensCache[value]) {\n                    return ensCache[value];\n                }\n                return value;\n            });\n            return { domain, value };\n        });\n    }\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        }\n        else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof (value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n//# sourceMappingURL=typed-data.js.map","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nexport class BaseX {\n    constructor(alphabet) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n        defineReadOnly(this, \"_alphabetMap\", {});\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n    encode(value) {\n        let source = arrayify(value);\n        if (source.length === 0) {\n            return \"\";\n        }\n        let digits = [0];\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n        let string = \"\";\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n        return string;\n    }\n    decode(value) {\n        if (typeof (value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        let bytes = [];\n        if (value.length === 0) {\n            return new Uint8Array(bytes);\n        }\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0);\n        }\n        return arrayify(new Uint8Array(bytes.reverse()));\n    }\n}\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\nexport { Base32, Base58 };\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n//# sourceMappingURL=index.js.map","export var SupportedAlgorithm;\n(function (SupportedAlgorithm) {\n    SupportedAlgorithm[\"sha256\"] = \"sha256\";\n    SupportedAlgorithm[\"sha512\"] = \"sha512\";\n})(SupportedAlgorithm || (SupportedAlgorithm = {}));\n;\n//# sourceMappingURL=types.js.map","export const version = \"sha2/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac } from \"@ethersproject/sha2\";\nexport function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen);\n    const block1 = new Uint8Array(salt.length + 4);\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n    let r;\n    let T;\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(hashAlgorithm, password, block1));\n        if (!hLen) {\n            hLen = U.length;\n            T = new Uint8Array(hLen);\n            l = Math.ceil(keylen / hLen);\n            r = keylen - (l - 1) * hLen;\n        }\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++)\n                T[k] ^= U[k];\n        }\n        const destPos = (i - 1) * hLen;\n        const len = (i === l ? r : hLen);\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n    return hexlify(DK);\n}\n//# sourceMappingURL=pbkdf2.js.map","export const version = \"wordlists/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n// This gets overridden by rollup\nconst exportWordlist = false;\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\nexport class Wordlist {\n    constructor(locale) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n    static check(wordlist) {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n    static register(lang, name) {\n        if (!name) {\n            name = lang.locale;\n        }\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = window;\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                        defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            }\n            catch (error) { }\n        }\n    }\n}\n//# sourceMappingURL=wordlist.js.map","\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langEn = new LangEn();\nWordlist.register(langEn);\nexport { langEn };\n//# sourceMappingURL=lang-en.js.map","\"use strict\";\nimport { langEn as en } from \"./lang-en\";\nexport const wordlists = {\n    en: en\n};\n//# sourceMappingURL=wordlists.js.map","export const version = \"hdnode/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { wordlists } from \"@ethersproject/wordlists\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\nconst HardenedBit = 0x80000000;\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits);\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return (1 << bits) - 1;\n}\nfunction bytes32(value) {\n    return hexZeroPad(hexlify(value), 32);\n}\nfunction base58check(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nfunction getWordlist(wordlist) {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n    if (typeof (wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n    return wordlist;\n}\nconst _constructorGuard = {};\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n;\nexport class HDNode {\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n        logger.checkNew(new.target, HDNode);\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        }\n        else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        defineReadOnly(this, \"chainCode\", chainCode);\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n        }\n        else if (typeof (mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n        }\n        else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        if (this.depth >= 256) {\n            throw new Error(\"Depth too large!\");\n        }\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\" : \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([\"0x00\", this.privateKey]) : this.publicKey),\n        ]));\n    }\n    neuter() {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n    _derive(index) {\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n        }\n        const data = new Uint8Array(37);\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n            // Hardened path\n            if (path) {\n                path += \"'\";\n            }\n        }\n        else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) {\n            data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        // The private key\n        let ki = null;\n        // The public key\n        let Ki = null;\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        }\n        else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n        let mnemonicOrPath = path;\n        const srcMnemonic = this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n    derivePath(path) {\n        const components = path.split(\"/\");\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n        if (components[0] === \"m\") {\n            components.shift();\n        }\n        let result = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(HardenedBit + index);\n            }\n            else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(index);\n            }\n            else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n        return result;\n    }\n    static _fromSeed(seed, mnemonic) {\n        const seedArray = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) {\n            throw new Error(\"invalid seed\");\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n    static fromMnemonic(mnemonic, password, wordlist) {\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n    static fromSeed(seed) {\n        return HDNode._fromSeed(seed, null);\n    }\n    static fromExtendedKey(extendedKey) {\n        const bytes = Base58.decode(extendedKey);\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\nexport function mnemonicToSeed(mnemonic, password) {\n    if (!password) {\n        password = \"\";\n    }\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\nexport function mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = getWordlist(wordlist);\n    logger.checkNormalize();\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) {\n        throw new Error(\"invalid mnemonic\");\n    }\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) {\n            throw new Error(\"invalid mnemonic\");\n        }\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = 32 * words.length / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\nexport function entropyToMnemonic(entropy, wordlist) {\n    wordlist = getWordlist(wordlist);\n    entropy = arrayify(entropy);\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nexport function isValidMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getAccountPath(index) {\n    if (typeof (index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${index}'/0/0`;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\nexport function looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\nexport function zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexport function getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\nexport function searchPath(object, path) {\n    let currentChild = object;\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes) {\n    const bytes = arrayify(randomBytes);\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=utils.js.map","export const version = \"json-wallets/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Exported Types\nfunction hasMnemonic(value) {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\nexport class KeystoreAccount extends Description {\n    isKeystoreAccount(value) {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\nfunction _decrypt(data, key, ciphertext) {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n    return null;\n}\nfunction _getAccount(data, key) {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n    const mnemonicKey = key.slice(32, 64);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n        }\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n    const account = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n            account.mnemonic = node.mnemonic;\n        }\n        catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n    return new KeystoreAccount(account);\n}\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n    const passwordBytes = getPassword(password);\n    const kdf = searchPath(data, \"crypto/kdf\");\n    if (kdf && typeof (kdf) === \"string\") {\n        const throwError = function (name, value) {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        };\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n            // Check for all required parameters\n            if (!N || !r || !p) {\n                throwError(\"kdf\", kdf);\n            }\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) {\n                throwError(\"N\", N);\n            }\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            let prfFunc = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            }\n            else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            }\n            else {\n                throwError(\"prf\", prf);\n            }\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\nexport function decryptSync(json, password) {\n    const data = JSON.parse(json);\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\nexport function decrypt(json, password, progressCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const data = JSON.parse(json);\n        const key = yield _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n        return _getAccount(data, key);\n    });\n}\nexport function encrypt(account, password, options, progressCallback) {\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // The options are optional, so adjust the call as needed\n    if (typeof (options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    const privateKey = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n    let entropy = null;\n    let path = null;\n    let locale = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n    let client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    let salt = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    }\n    else {\n        salt = randomBytes(32);\n        ;\n    }\n    // Override initialization vector\n    let iv = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) {\n            throw new Error(\"invalid iv\");\n        }\n    }\n    else {\n        iv = randomBytes(16);\n    }\n    // Override the uuid\n    let uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error(\"invalid uuid\");\n        }\n    }\n    else {\n        uuidRandom = randomBytes(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]));\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            Crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                zpad(now.getUTCDate(), 2) + \"T\" +\n                zpad(now.getUTCHours(), 2) + \"-\" +\n                zpad(now.getUTCMinutes(), 2) + \"-\" +\n                zpad(now.getUTCSeconds(), 2) + \".0Z\");\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n        return JSON.stringify(data);\n    });\n}\n//# sourceMappingURL=keystore.js.map","\"use strict\";\nimport aes from \"aes-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\nexport class CrowdsaleAccount extends Description {\n    isCrowdsaleAccount(value) {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json, password) {\n    const data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    const seedHexBytes = toUtf8Bytes(seedHex);\n    const privateKey = keccak256(seedHexBytes);\n    return new CrowdsaleAccount({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n//# sourceMappingURL=crowdsale.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexport function isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nexport function getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=inspect.js.map","\"use strict\";\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore } from \"./keystore\";\nfunction decryptJsonWallet(json, password, progressCallback) {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        const account = decryptCrowdsale(json, password);\n        if (progressCallback) {\n            progressCallback(1);\n        }\n        return Promise.resolve(account);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nfunction decryptJsonWalletSync(json, password) {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n    throw new Error(\"invalid JSON wallet\");\n}\nexport { decryptCrowdsale, decryptKeystore, decryptKeystoreSync, encryptKeystore, isCrowdsaleWallet, isKeystoreWallet, getJsonWalletAddress, decryptJsonWallet, decryptJsonWalletSync, };\n//# sourceMappingURL=index.js.map","export const version = \"wallet/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { arrayify, concat, hexDataSlice, isHexString, joinSignature } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction isAccount(value) {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\nfunction hasMnemonic(value) {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\nexport class Wallet extends Signer {\n    constructor(privateKey, provider) {\n        logger.checkNew(new.target, Wallet);\n        super();\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => ({\n                    phrase: srcMnemonic.phrase,\n                    path: srcMnemonic.path || defaultPath,\n                    locale: srcMnemonic.locale || \"en\"\n                }));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            }\n            else {\n                defineReadOnly(this, \"_mnemonic\", () => null);\n            }\n        }\n        else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => privateKey);\n            }\n            else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof (privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n            defineReadOnly(this, \"_mnemonic\", () => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    get mnemonic() { return this._mnemonic(); }\n    get privateKey() { return this._signingKey().privateKey; }\n    get publicKey() { return this._signingKey().publicKey; }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    connect(provider) {\n        return new Wallet(this, provider);\n    }\n    signTransaction(transaction) {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n            const signature = this._signingKey().signDigest(keccak256(serialize(tx)));\n            return serialize(tx, signature);\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                if (this.provider == null) {\n                    logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"resolveName\",\n                        value: name\n                    });\n                }\n                return this.provider.resolveName(name);\n            });\n            return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n        });\n    }\n    encrypt(password, options, progressCallback) {\n        if (typeof (options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n        if (progressCallback && typeof (progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n        if (!options) {\n            options = {};\n        }\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options) {\n        let entropy = randomBytes(16);\n        if (!options) {\n            options = {};\n        }\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));\n        }\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n    static fromEncryptedJson(json, password, progressCallback) {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n    static fromEncryptedJsonSync(json, password) {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n    static fromMnemonic(mnemonic, path, wordlist) {\n        if (!path) {\n            path = defaultPath;\n        }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\nexport function verifyMessage(message, signature) {\n    return recoverAddress(hashMessage(message), signature);\n}\nexport function verifyTypedData(domain, types, value, signature) {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n//# sourceMappingURL=index.js.map","export const version = \"networks/5.5.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nfunction isRenetworkable(value) {\n    return (value && typeof (value.renetwork) === \"function\");\n}\nfunction ethDefaultProvider(network) {\n    const func = function (providers, options) {\n        if (options == null) {\n            options = {};\n        }\n        const providerList = [];\n        if (providers.InfuraProvider) {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            }\n            catch (error) { }\n        }\n        if (providers.EtherscanProvider) {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            }\n            catch (error) { }\n        }\n        if (providers.AlchemyProvider) {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            }\n            catch (error) { }\n        }\n        if (providers.PocketProvider) {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [\"goerli\", \"ropsten\", \"rinkeby\"];\n            try {\n                const provider = new providers.PocketProvider(network);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            }\n            catch (error) { }\n        }\n        if (providers.CloudflareProvider) {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            }\n            catch (error) { }\n        }\n        if (providerList.length === 0) {\n            return null;\n        }\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            }\n            else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n        return providerList[0];\n    };\n    func.renetwork = function (network) {\n        return ethDefaultProvider(network);\n    };\n    return func;\n}\nfunction etcDefaultProvider(url, network) {\n    const func = function (providers, options) {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n        return null;\n    };\n    func.renetwork = function (network) {\n        return etcDefaultProvider(url, network);\n    };\n    return func;\n}\nconst homestead = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\nconst ropsten = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\nconst classicMordor = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n// See: https://chainlist.org\nconst networks = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n    homestead: homestead,\n    mainnet: homestead,\n    morden: { chainId: 2, name: \"morden\" },\n    ropsten: ropsten,\n    testnet: ropsten,\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n    xdai: { chainId: 100, name: \"xdai\" },\n    matic: { chainId: 137, name: \"matic\" },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n    optimism: { chainId: 10, name: \"optimism\" },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n};\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network) {\n    // No network (null)\n    if (network == null) {\n        return null;\n    }\n    if (typeof (network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n    if (typeof (network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) {\n            return null;\n        }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n    const standard = networks[network.name];\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof (network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        }\n        else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\nfunction bytes2(data) {\n    if ((data.length % 4) !== 0) {\n        throw new Error(\"bad data\");\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\nfunction createTable(data, func) {\n    if (!func) {\n        func = function (value) { return [parseInt(value, 16)]; };\n    }\n    let lo = 0;\n    let result = {};\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n    return result;\n}\nfunction createRangeTable(data) {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        }\n        else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\nfunction matchMap(value, ranges) {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n                continue;\n            }\n            return range;\n        }\n    }\n    return null;\n}\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\nconst Table_B_2_ranges = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [23], l: 127 },\n    { h: 54, s: 1, e: [48], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n    { h: 26, s: 32, e: [17], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [38], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [17], l: 56 },\n    { h: 24, s: -119601, e: [17], l: 58 },\n    { h: 24, s: -119659, e: [17], l: 58 },\n    { h: 24, s: -119717, e: [17], l: 58 },\n    { h: 24, s: -119775, e: [17], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nfunction flatten(values) {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, []);\n}\nexport function _nameprepTableA1(codepoint) {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\nexport function _nameprepTableB2(codepoint) {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) {\n        return [codepoint + range.s];\n    }\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) {\n        return codes;\n    }\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) {\n        return [codepoint + shift[0]];\n    }\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) {\n        return complex;\n    }\n    return null;\n}\nexport function _nameprepTableC(codepoint) {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\nexport function nameprep(value) {\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n        return value.toLowerCase();\n    }\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n        }\n        if (code >= 0xfe00 && code <= 0xfe0f) {\n            return [];\n        }\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) {\n            return codesTableB2;\n        }\n        // No Substitution\n        return [code];\n    }));\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n    // IDNA extras\n    let name = _toUtf8String(codes);\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n    // IDNA: 4.2.4\n    if (name.length > 63) {\n        throw new Error(\"too long\");\n    }\n    return name;\n}\n//# sourceMappingURL=idna.js.map","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { nameprep, toUtf8Bytes } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nexport function isValidName(name) {\n    try {\n        const comps = name.split(\".\");\n        for (let i = 0; i < comps.length; i++) {\n            if (nameprep(comps[i]).length === 0) {\n                throw new Error(\"empty\");\n            }\n        }\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function namehash(name) {\n    /* istanbul ignore if */\n    if (typeof (name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n    let current = name;\n    let result = Zeros;\n    while (current.length) {\n        const partition = current.match(Partition);\n        if (partition == null || partition[2] === \"\") {\n            logger.throwArgumentError(\"invalid ENS address; missing component\", \"name\", name);\n        }\n        const label = toUtf8Bytes(nameprep(partition[3]));\n        result = keccak256(concat([result, keccak256(label)]));\n        current = partition[2] || \"\";\n    }\n    return hexlify(result);\n}\n//# sourceMappingURL=namehash.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function decode(textData) {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\nexport function encode(data) {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n//# sourceMappingURL=base64.js.map","export const version = \"web/5.5.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (options == null) {\n            options = {};\n        }\n        const request = {\n            method: (options.method || \"GET\"),\n            headers: (options.headers || {}),\n            body: (options.body || undefined),\n        };\n        if (options.skipFetchSetup !== true) {\n            request.mode = \"cors\"; // no-cors, cors, *same-origin\n            request.cache = \"no-cache\"; // *default, no-cache, reload, force-cache, only-if-cached\n            request.credentials = \"same-origin\"; // include, *same-origin, omit\n            request.redirect = \"follow\"; // manual, *follow, error\n            request.referrer = \"client\"; // no-referrer, *client\n        }\n        ;\n        const response = yield fetch(href, request);\n        const body = yield response.arrayBuffer();\n        const headers = {};\n        if (response.headers.forEach) {\n            response.headers.forEach((value, key) => {\n                headers[key.toLowerCase()] = value;\n            });\n        }\n        else {\n            ((response.headers).keys)().forEach((key) => {\n                headers[key.toLowerCase()] = response.headers.get(key);\n            });\n        }\n        return {\n            headers: headers,\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            body: arrayify(new Uint8Array(body)),\n        };\n    });\n}\n//# sourceMappingURL=geturl.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getUrl } from \"./geturl\";\nfunction staller(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\nfunction bodyify(value, type) {\n    if (value == null) {\n        return null;\n    }\n    if (typeof (value) === \"string\") {\n        return value;\n    }\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            }\n            catch (error) { }\n            ;\n        }\n        return hexlify(value);\n    }\n    return value;\n}\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData(connection, body, processFunc) {\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof (connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit : 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0), \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n    const throttleCallback = ((typeof (connection) === \"object\") ? connection.throttleCallback : null);\n    const throttleSlotInterval = ((typeof (connection) === \"object\" && typeof (connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval : 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0), \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n    const headers = {};\n    let url = null;\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options = {\n        method: \"GET\",\n    };\n    let allow304 = false;\n    let timeout = 2 * 60 * 1000;\n    if (typeof (connection) === \"string\") {\n        url = connection;\n    }\n    else if (typeof (connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n        url = connection.url;\n        if (typeof (connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n        options.allowGzip = !!connection.allowGzip;\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\"basic authentication requires a secure https url\", Logger.errors.INVALID_ARGUMENT, { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" });\n            }\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n    }\n    const reData = new RegExp(\"^data:([a-z0-9-]+/[a-z0-9-]+);base64,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData) : null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": dataMatch[1] },\n                body: base64Decode(dataMatch[2])\n            };\n            let result = response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(result);\n        }\n        catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n    const flatHeaders = {};\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n    const runningTimeout = (function () {\n        let timer = null;\n        const promise = new Promise(function (resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) {\n                        return;\n                    }\n                    timer = null;\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n        const cancel = function () {\n            if (timer == null) {\n                return;\n            }\n            clearTimeout(timer);\n            timer = null;\n        };\n        return { promise, cancel };\n    })();\n    const runningFetch = (function () {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let attempt = 0; attempt < attemptLimit; attempt++) {\n                let response = null;\n                try {\n                    response = yield getUrl(url, options);\n                    if (attempt < attemptLimit) {\n                        if (response.statusCode === 301 || response.statusCode === 302) {\n                            // Redirection; for now we only support absolute locataions\n                            const location = response.headers.location || \"\";\n                            if (options.method === \"GET\" && location.match(/^https:/)) {\n                                url = response.headers.location;\n                                continue;\n                            }\n                        }\n                        else if (response.statusCode === 429) {\n                            // Exponential back-off throttling\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                let stall = 0;\n                                const retryAfter = response.headers[\"retry-after\"];\n                                if (typeof (retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                    stall = parseInt(retryAfter) * 1000;\n                                }\n                                else {\n                                    stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                }\n                                //console.log(\"Stalling 429\");\n                                yield staller(stall);\n                                continue;\n                            }\n                        }\n                    }\n                }\n                catch (error) {\n                    response = error.response;\n                    if (response == null) {\n                        runningTimeout.cancel();\n                        logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            serverError: error,\n                            url: url\n                        });\n                    }\n                }\n                let body = response.body;\n                if (allow304 && response.statusCode === 304) {\n                    body = null;\n                }\n                else if (response.statusCode < 200 || response.statusCode >= 300) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                        status: response.statusCode,\n                        headers: response.headers,\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n                if (processFunc) {\n                    try {\n                        const result = yield processFunc(body, response);\n                        runningTimeout.cancel();\n                        return result;\n                    }\n                    catch (error) {\n                        // Allow the processFunc to trigger a throttle\n                        if (error.throttleRetry && attempt < attemptLimit) {\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                //console.log(\"Stalling callback\");\n                                yield staller(timeout);\n                                continue;\n                            }\n                        }\n                        runningTimeout.cancel();\n                        logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                            body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                            error: error,\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            url: url\n                        });\n                    }\n                }\n                runningTimeout.cancel();\n                // If we had a processFunc, it either returned a T or threw above.\n                // The \"body\" is now a Uint8Array.\n                return body;\n            }\n            return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n                requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                requestMethod: options.method,\n                url: url\n            });\n        });\n    })();\n    return Promise.race([runningTimeout.promise, runningFetch]);\n}\nexport function fetchJson(connection, json, processFunc) {\n    let processJsonFunc = (value, response) => {\n        let result = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            }\n            catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n        return result;\n    };\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n        // Create a connection with the content-type set for JSON\n        const updated = (typeof (connection) === \"string\") ? ({ url: connection }) : shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        }\n        else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n    return _fetchData(connection, body, processJsonFunc);\n}\nexport function poll(func, options) {\n    if (!options) {\n        options = {};\n    }\n    options = shallowCopy(options);\n    if (options.floor == null) {\n        options.floor = 0;\n    }\n    if (options.ceiling == null) {\n        options.ceiling = 10000;\n    }\n    if (options.interval == null) {\n        options.interval = 250;\n    }\n    return new Promise(function (resolve, reject) {\n        let timer = null;\n        let done = false;\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = () => {\n            if (done) {\n                return false;\n            }\n            done = true;\n            if (timer) {\n                clearTimeout(timer);\n            }\n            return true;\n        };\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) {\n                    reject(new Error(\"timeout\"));\n                }\n            }, options.timeout);\n        }\n        const retryLimit = options.retryLimit;\n        let attempt = 0;\n        function check() {\n            return func().then(function (result) {\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) {\n                        resolve(result);\n                    }\n                }\n                else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n                }\n                else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n                    // Otherwise, exponential back-off (up to 10s) our next request\n                }\n                else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) {\n                            reject(new Error(\"retry limit reached\"));\n                        }\n                        return;\n                    }\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) {\n                        timeout = options.floor;\n                    }\n                    if (timeout > options.ceiling) {\n                        timeout = options.ceiling;\n                    }\n                    setTimeout(check, timeout);\n                }\n                return null;\n            }, function (error) {\n                if (cancel()) {\n                    reject(error);\n                }\n            });\n        }\n        check();\n    });\n}\n//# sourceMappingURL=index.js.map","export const version = \"providers/5.5.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class Formatter {\n    constructor() {\n        logger.checkNew(new.target, Formatter);\n        this.formats = this.getDefaultFormats();\n    }\n    getDefaultFormats() {\n        const formats = ({});\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n        const strictData = (v) => { return this.data(v, true); };\n        formats.transaction = {\n            hash: hash,\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n            confirmations: Formatter.allowNull(number, null),\n            from: address,\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n            creates: Formatter.allowNull(address, null),\n            raw: Formatter.allowNull(data),\n        };\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n        formats.block = {\n            hash: hash,\n            parentHash: hash,\n            number: number,\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n            miner: address,\n            extraData: data,\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n            topics: Formatter.arrayOf(hash),\n            transactionHash: hash,\n            logIndex: number,\n        };\n        return formats;\n    }\n    accessList(accessList) {\n        return accessListify(accessList || []);\n    }\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number) {\n        if (number === \"0x\") {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    type(number) {\n        if (number === \"0x\" || number == null) {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    // Strict! Used on input.\n    bigNumber(value) {\n        return BigNumber.from(value);\n    }\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value) {\n        if (typeof (value) === \"boolean\") {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") {\n                return true;\n            }\n            if (value === \"false\") {\n                return false;\n            }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n    hex(value, strict) {\n        if (typeof (value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") {\n                value = \"0x\" + value;\n            }\n            if (isHexString(value)) {\n                return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n    data(value, strict) {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n    // Requires an address\n    // Strict! Used on input.\n    address(value) {\n        return getAddress(value);\n    }\n    callAddress(value) {\n        if (!isHexString(value, 32)) {\n            return null;\n        }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null : address;\n    }\n    contractAddress(value) {\n        return getContractAddress(value);\n    }\n    // Strict! Used on input.\n    blockTag(blockTag) {\n        if (blockTag == null) {\n            return \"latest\";\n        }\n        if (blockTag === \"earliest\") {\n            return \"0x0\";\n        }\n        if (blockTag === \"latest\" || blockTag === \"pending\") {\n            return blockTag;\n        }\n        if (typeof (blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(blockTag);\n        }\n        throw new Error(\"invalid blockTag\");\n    }\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value, strict) {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value) {\n        if (value == null) {\n            return null;\n        }\n        const v = BigNumber.from(value);\n        try {\n            return v.toNumber();\n        }\n        catch (error) { }\n        return null;\n    }\n    uint256(value) {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n    _block(value, format) {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty : value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null : BigNumber.from(difficulty));\n        return result;\n    }\n    block(value) {\n        return this._block(value, this.formats.block);\n    }\n    blockWithTransactions(value) {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n    // Strict! Used on input.\n    transactionRequest(value) {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n    transactionResponse(transaction) {\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {\n            transaction.accessList = [];\n        }\n        const result = Formatter.check(this.formats.transaction, transaction);\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            result.chainId = chainId;\n        }\n        else {\n            let chainId = transaction.networkId;\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            if (typeof (chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) {\n                    chainId = 0;\n                }\n                chainId = parseInt(chainId);\n            }\n            if (typeof (chainId) !== \"number\") {\n                chainId = 0;\n            }\n            result.chainId = chainId;\n        }\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n        return result;\n    }\n    transaction(value) {\n        return parseTransaction(value);\n    }\n    receiptLog(value) {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n    receipt(value) {\n        const result = Formatter.check(this.formats.receipt, value);\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                }\n                else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            }\n            else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n        return result;\n    }\n    topics(value) {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n        }\n        else if (value != null) {\n            return this.hash(value, true);\n        }\n        return null;\n    }\n    filter(value) {\n        return Formatter.check(this.formats.filter, value);\n    }\n    filterLog(value) {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n    static check(format, object) {\n        const result = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) {\n                    result[key] = value;\n                }\n            }\n            catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n    // if value is null-ish, nullValue is returned\n    static allowNull(format, nullValue) {\n        return (function (value) {\n            if (value == null) {\n                return nullValue;\n            }\n            return format(value);\n        });\n    }\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format, replaceValue) {\n        return (function (value) {\n            if (!value) {\n                return replaceValue;\n            }\n            return format(value);\n        });\n    }\n    // Requires an Array satisfying check\n    static arrayOf(format) {\n        return (function (array) {\n            if (!Array.isArray(array)) {\n                throw new Error(\"not an array\");\n            }\n            const result = [];\n            array.forEach(function (value) {\n                result.push(format(value));\n            });\n            return result;\n        });\n    }\n}\nexport function isCommunityResourcable(value) {\n    return (value && typeof (value.isCommunityResource) === \"function\");\n}\nexport function isCommunityResource(value) {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) {\n        return;\n    }\n    throttleMessage = true;\n    console.log(\"========= NOTICE =========\");\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n//# sourceMappingURL=formatter.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ForkEvent, Provider } from \"@ethersproject/abstract-provider\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { namehash } from \"@ethersproject/hash\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport bech32 from \"bech32\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Formatter } from \"./formatter\";\n//////////////////////////////\n// Event Serializeing\nfunction checkTopic(topic) {\n    if (topic == null) {\n        return \"null\";\n    }\n    if (hexDataLength(topic) !== 32) {\n        logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n    }\n    return topic.toLowerCase();\n}\nfunction serializeTopics(topics) {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) {\n        topics.pop();\n    }\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            // Only track unique OR-topics\n            const unique = {};\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n            return sorted.join(\"|\");\n        }\n        else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\nfunction deserializeTopics(data) {\n    if (data === \"\") {\n        return [];\n    }\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") {\n            return [];\n        }\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null : topic);\n        });\n        return ((comps.length === 1) ? comps[0] : comps);\n    });\n}\nfunction getEventTag(eventName) {\n    if (typeof (eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n    }\n    else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n    }\n    else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n    }\n    else if (eventName && typeof (eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n    throw new Error(\"invalid event - \" + eventName);\n}\n//////////////////////////////\n// Helper Object\nfunction getTime() {\n    return (new Date()).getTime();\n}\nfunction stall(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n//////////////////////////////\n// Provider Object\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\nconst PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\nexport class Event {\n    constructor(tag, listener, once) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n    }\n    get event() {\n        switch (this.type) {\n            case \"tx\":\n                return this.hash;\n            case \"filter\":\n                return this.filter;\n        }\n        return this.tag;\n    }\n    get type() {\n        return this.tag.split(\":\")[0];\n    }\n    get hash() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") {\n            return null;\n        }\n        return comps[1];\n    }\n    get filter() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") {\n            return null;\n        }\n        const address = comps[1];\n        const topics = deserializeTopics(comps[2]);\n        const filter = {};\n        if (topics.length > 0) {\n            filter.topics = topics;\n        }\n        if (address && address !== \"*\") {\n            filter.address = address;\n        }\n        return filter;\n    }\n    pollable() {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n;\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos = {\n    \"0\": { symbol: \"btc\", p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\": { symbol: \"ltc\", p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\": { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\": { symbol: \"eth\", ilk: \"eth\" },\n    \"61\": { symbol: \"etc\", ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\nfunction bytes32ify(value) {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\nfunction _parseString(result) {\n    try {\n        return toUtf8String(_parseBytes(result));\n    }\n    catch (error) { }\n    return null;\n}\nfunction _parseBytes(result) {\n    if (result === \"0x\") {\n        return null;\n    }\n    const offset = BigNumber.from(hexDataSlice(result, 0, 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\nexport class Resolver {\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider, address, name, resolvedAddress) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n    _fetchBytes(selector, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // e.g. keccak256(\"addr(bytes32,uint256)\")\n            const tx = {\n                to: this.address,\n                data: hexConcat([selector, namehash(this.name), (parameters || \"0x\")])\n            };\n            try {\n                return _parseBytes(yield this.provider.call(tx));\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                return null;\n            }\n        });\n    }\n    _getAddress(coinType, hexBytes) {\n        const coinInfo = coinInfos[String(coinType)];\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${coinType}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${coinType})`\n            });\n        }\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n        const bytes = arrayify(hexBytes);\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2pkh], (\"0x\" + p2pkh[2])]));\n                }\n            }\n        }\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2sh], (\"0x\" + p2sh[2])]));\n                }\n            }\n        }\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            }\n            else {\n                version = -1;\n            }\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n        return null;\n    }\n    getAddress(coinType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (coinType == null) {\n                coinType = 60;\n            }\n            // If Ethereum, use the standard `addr(bytes32)`\n            if (coinType === 60) {\n                try {\n                    // keccak256(\"addr(bytes32)\")\n                    const transaction = {\n                        to: this.address,\n                        data: (\"0x3b3b57de\" + namehash(this.name).substring(2))\n                    };\n                    const hexBytes = yield this.provider.call(transaction);\n                    // No address\n                    if (hexBytes === \"0x\" || hexBytes === HashZero) {\n                        return null;\n                    }\n                    return this.provider.formatter.callAddress(hexBytes);\n                }\n                catch (error) {\n                    if (error.code === Logger.errors.CALL_EXCEPTION) {\n                        return null;\n                    }\n                    throw error;\n                }\n            }\n            // keccak256(\"addr(bytes32,uint256\")\n            const hexBytes = yield this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n            // No address\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // Compute the address\n            const address = this._getAddress(coinType, hexBytes);\n            if (address == null) {\n                logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `getAddress(${coinType})`,\n                    coinType: coinType,\n                    data: hexBytes\n                });\n            }\n            return address;\n        });\n    }\n    getAvatar() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const linkage = [];\n            try {\n                // test data for ricmoo.eth\n                //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n                const avatar = yield this.getText(\"avatar\");\n                if (avatar == null) {\n                    return null;\n                }\n                for (let i = 0; i < matchers.length; i++) {\n                    const match = avatar.match(matchers[i]);\n                    if (match == null) {\n                        continue;\n                    }\n                    switch (match[1]) {\n                        case \"https\":\n                            linkage.push({ type: \"url\", content: avatar });\n                            return { linkage, url: avatar };\n                        case \"data\":\n                            linkage.push({ type: \"data\", content: avatar });\n                            return { linkage, url: avatar };\n                        case \"ipfs\":\n                            linkage.push({ type: \"ipfs\", content: avatar });\n                            return { linkage, url: `https:/\\/gateway.ipfs.io/ipfs/${avatar.substring(7)}` };\n                        case \"erc721\":\n                        case \"erc1155\": {\n                            // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                            const selector = (match[1] === \"erc721\") ? \"0xc87b56dd\" : \"0x0e89341c\";\n                            linkage.push({ type: match[1], content: avatar });\n                            // The owner of this name\n                            const owner = (this._resolvedAddress || (yield this.getAddress()));\n                            const comps = (match[2] || \"\").split(\"/\");\n                            if (comps.length !== 2) {\n                                return null;\n                            }\n                            const addr = yield this.provider.formatter.address(comps[0]);\n                            const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n                            // Check that this account owns the token\n                            if (match[1] === \"erc721\") {\n                                // ownerOf(uint256 tokenId)\n                                const tokenOwner = this.provider.formatter.callAddress(yield this.provider.call({\n                                    to: addr, data: hexConcat([\"0x6352211e\", tokenId])\n                                }));\n                                if (owner !== tokenOwner) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"owner\", content: tokenOwner });\n                            }\n                            else if (match[1] === \"erc1155\") {\n                                // balanceOf(address owner, uint256 tokenId)\n                                const balance = BigNumber.from(yield this.provider.call({\n                                    to: addr, data: hexConcat([\"0x00fdd58e\", hexZeroPad(owner, 32), tokenId])\n                                }));\n                                if (balance.isZero()) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"balance\", content: balance.toString() });\n                            }\n                            // Call the token contract for the metadata URL\n                            const tx = {\n                                to: this.provider.formatter.address(comps[0]),\n                                data: hexConcat([selector, tokenId])\n                            };\n                            let metadataUrl = _parseString(yield this.provider.call(tx));\n                            if (metadataUrl == null) {\n                                return null;\n                            }\n                            linkage.push({ type: \"metadata-url\", content: metadataUrl });\n                            // ERC-1155 allows a generic {id} in the URL\n                            if (match[1] === \"erc1155\") {\n                                metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            }\n                            // Get the token metadata\n                            const metadata = yield fetchJson(metadataUrl);\n                            // Pull the image URL out\n                            if (!metadata || typeof (metadata.image) !== \"string\" || !metadata.image.match(/^(https:\\/\\/|data:)/i)) {\n                                return null;\n                            }\n                            linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n                            linkage.push({ type: \"url\", content: metadata.image });\n                            return { linkage, url: metadata.image };\n                        }\n                    }\n                }\n            }\n            catch (error) { }\n            return null;\n        });\n    }\n    getContentHash() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // keccak256(\"contenthash()\")\n            const hexBytes = yield this._fetchBytes(\"0xbc1c58d1\");\n            // No contenthash\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // IPFS (CID: 1, Type: DAG-PB)\n            const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n            if (ipfs) {\n                const length = parseInt(ipfs[3], 16);\n                if (ipfs[4].length === length * 2) {\n                    return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n                }\n            }\n            // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n            const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n            if (swarm) {\n                if (swarm[1].length === (32 * 2)) {\n                    return \"bzz:/\\/\" + swarm[1];\n                }\n            }\n            return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"getContentHash()\",\n                data: hexBytes\n            });\n        });\n    }\n    getText(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The key encoded as parameter to fetchBytes\n            let keyBytes = toUtf8Bytes(key);\n            // The nodehash consumes the first slot, so the string pointer targets\n            // offset 64, with the length at offset 64 and data starting at offset 96\n            keyBytes = concat([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);\n            // Pad to word-size (32 bytes)\n            if ((keyBytes.length % 32) !== 0) {\n                keyBytes = concat([keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32))]);\n            }\n            const hexBytes = yield this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            return toUtf8String(hexBytes);\n        });\n    }\n}\nlet defaultFormatter = null;\nlet nextPollId = 1;\nexport class BaseProvider extends Provider {\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n    constructor(network) {\n        logger.checkNew(new.target, Provider);\n        super();\n        // Events being listened to\n        this._events = [];\n        this._emitted = { block: -2 };\n        this.formatter = new.target.getFormatter();\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) {\n            network = this.detectNetwork();\n        }\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n        }\n        else {\n            const knownNetwork = getStatic(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n            }\n            else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n        this._maxInternalBlockNumber = -1024;\n        this._lastBlockNumber = -2;\n        this._pollingInterval = 4000;\n        this._fastQueryDate = 0;\n    }\n    _ready() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._network == null) {\n                let network = null;\n                if (this._networkPromise) {\n                    try {\n                        network = yield this._networkPromise;\n                    }\n                    catch (error) { }\n                }\n                // Try the Provider's network detection (this MUST throw if it cannot)\n                if (network == null) {\n                    network = yield this.detectNetwork();\n                }\n                // This should never happen; every Provider sub-class should have\n                // suggested a network by here (or have thrown).\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // Possible this call stacked so do not call defineReadOnly again\n                if (this._network == null) {\n                    if (this.anyNetwork) {\n                        this._network = network;\n                    }\n                    else {\n                        defineReadOnly(this, \"_network\", network);\n                    }\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return this._network;\n        });\n    }\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready() {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter() {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network) {\n        return getNetwork((network == null) ? \"homestead\" : network);\n    }\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    _getInternalBlockNumber(maxAge) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._ready();\n            // Allowing stale data up to maxAge old\n            if (maxAge > 0) {\n                // While there are pending internal block requests...\n                while (this._internalBlockNumber) {\n                    // ...\"remember\" which fetch we started with\n                    const internalBlockNumber = this._internalBlockNumber;\n                    try {\n                        // Check the result is not too stale\n                        const result = yield internalBlockNumber;\n                        if ((getTime() - result.respTime) <= maxAge) {\n                            return result.blockNumber;\n                        }\n                        // Too old; fetch a new value\n                        break;\n                    }\n                    catch (error) {\n                        // The fetch rejected; if we are the first to get the\n                        // rejection, drop through so we replace it with a new\n                        // fetch; all others blocked will then get that fetch\n                        // which won't match the one they \"remembered\" and loop\n                        if (this._internalBlockNumber === internalBlockNumber) {\n                            break;\n                        }\n                    }\n                }\n            }\n            const reqTime = getTime();\n            const checkInternalBlockNumber = resolveProperties({\n                blockNumber: this.perform(\"getBlockNumber\", {}),\n                networkError: this.getNetwork().then((network) => (null), (error) => (error))\n            }).then(({ blockNumber, networkError }) => {\n                if (networkError) {\n                    // Unremember this bad internal block number\n                    if (this._internalBlockNumber === checkInternalBlockNumber) {\n                        this._internalBlockNumber = null;\n                    }\n                    throw networkError;\n                }\n                const respTime = getTime();\n                blockNumber = BigNumber.from(blockNumber).toNumber();\n                if (blockNumber < this._maxInternalBlockNumber) {\n                    blockNumber = this._maxInternalBlockNumber;\n                }\n                this._maxInternalBlockNumber = blockNumber;\n                this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n                return { blockNumber, reqTime, respTime };\n            });\n            this._internalBlockNumber = checkInternalBlockNumber;\n            // Swallow unhandled exceptions; if needed they are handled else where\n            checkInternalBlockNumber.catch((error) => {\n                // Don't null the dead (rejected) fetch, if it has already been updated\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n            });\n            return (yield checkInternalBlockNumber).blockNumber;\n        });\n    }\n    poll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const pollId = nextPollId++;\n            // Track all running promises, so we can trigger a post-poll once they are complete\n            const runners = [];\n            let blockNumber = null;\n            try {\n                blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n            }\n            catch (error) {\n                this.emit(\"error\", error);\n                return;\n            }\n            this._setFastBlockNumber(blockNumber);\n            // Emit a poll event after we have the latest (fast) block number\n            this.emit(\"poll\", pollId, blockNumber);\n            // If the block has not changed, meh.\n            if (blockNumber === this._lastBlockNumber) {\n                this.emit(\"didPoll\", pollId);\n                return;\n            }\n            // First polling cycle, trigger a \"block\" events\n            if (this._emitted.block === -2) {\n                this._emitted.block = blockNumber - 1;\n            }\n            if (Math.abs((this._emitted.block) - blockNumber) > 1000) {\n                logger.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);\n                this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                    blockNumber: blockNumber,\n                    event: \"blockSkew\",\n                    previousBlockNumber: this._emitted.block\n                }));\n                this.emit(\"block\", blockNumber);\n            }\n            else {\n                // Notify all listener for each block that has passed\n                for (let i = this._emitted.block + 1; i <= blockNumber; i++) {\n                    this.emit(\"block\", i);\n                }\n            }\n            // The emitted block was updated, check for obsolete events\n            if (this._emitted.block !== blockNumber) {\n                this._emitted.block = blockNumber;\n                Object.keys(this._emitted).forEach((key) => {\n                    // The block event does not expire\n                    if (key === \"block\") {\n                        return;\n                    }\n                    // The block we were at when we emitted this event\n                    const eventBlockNumber = this._emitted[key];\n                    // We cannot garbage collect pending transactions or blocks here\n                    // They should be garbage collected by the Provider when setting\n                    // \"pending\" events\n                    if (eventBlockNumber === \"pending\") {\n                        return;\n                    }\n                    // Evict any transaction hashes or block hashes over 12 blocks\n                    // old, since they should not return null anyways\n                    if (blockNumber - eventBlockNumber > 12) {\n                        delete this._emitted[key];\n                    }\n                });\n            }\n            // First polling cycle\n            if (this._lastBlockNumber === -2) {\n                this._lastBlockNumber = blockNumber - 1;\n            }\n            // Find all transaction hashes we are waiting on\n            this._events.forEach((event) => {\n                switch (event.type) {\n                    case \"tx\": {\n                        const hash = event.hash;\n                        let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                            if (!receipt || receipt.blockNumber == null) {\n                                return null;\n                            }\n                            this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                            this.emit(hash, receipt);\n                            return null;\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                    case \"filter\": {\n                        const filter = event.filter;\n                        filter.fromBlock = this._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n                        const runner = this.getLogs(filter).then((logs) => {\n                            if (logs.length === 0) {\n                                return;\n                            }\n                            logs.forEach((log) => {\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                                this.emit(filter, log);\n                            });\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                }\n            });\n            this._lastBlockNumber = blockNumber;\n            // Once all events for this loop have been processed, emit \"didPoll\"\n            Promise.all(runners).then(() => {\n                this.emit(\"didPoll\", pollId);\n            }).catch((error) => { this.emit(\"error\", error); });\n            return;\n        });\n    }\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber) {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) {\n            this.poll();\n        }\n    }\n    get network() {\n        return this._network;\n    }\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"provider.detectNetwork\"\n            });\n        });\n    }\n    getNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const network = yield this._ready();\n            // Make sure we are still connected to the same network; this is\n            // only an external call for backends which can have the underlying\n            // network change spontaneously\n            const currentNetwork = yield this.detectNetwork();\n            if (network.chainId !== currentNetwork.chainId) {\n                // We are allowing network changes, things can get complex fast;\n                // make sure you know what you are doing if you use \"any\"\n                if (this.anyNetwork) {\n                    this._network = currentNetwork;\n                    // Reset all internal block number guards and caches\n                    this._lastBlockNumber = -2;\n                    this._fastBlockNumber = null;\n                    this._fastBlockNumberPromise = null;\n                    this._fastQueryDate = 0;\n                    this._emitted.block = -2;\n                    this._maxInternalBlockNumber = -1024;\n                    this._internalBlockNumber = null;\n                    // The \"network\" event MUST happen before this method resolves\n                    // so any events have a chance to unregister, so we stall an\n                    // additional event loop before returning from /this/ call\n                    this.emit(\"network\", currentNetwork, network);\n                    yield stall(0);\n                    return this._network;\n                }\n                const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                    event: \"changed\",\n                    network: network,\n                    detectedNetwork: currentNetwork\n                });\n                this.emit(\"error\", error);\n                throw error;\n            }\n            return network;\n        });\n    }\n    get blockNumber() {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber : -1;\n    }\n    get polling() {\n        return (this._poller != null);\n    }\n    set polling(value) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) {\n                            this.poll();\n                        }\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n        }\n        else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n    get pollingInterval() {\n        return this._pollingInterval;\n    }\n    set pollingInterval(value) {\n        if (typeof (value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n        this._pollingInterval = value;\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n    _getFastBlockNumber() {\n        const now = getTime();\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n        return this._fastBlockNumberPromise;\n    }\n    _setFastBlockNumber(blockNumber) {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n            return;\n        }\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n    waitForTransaction(transactionHash, confirmations, timeout) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._waitForTransaction(transactionHash, (confirmations == null) ? 1 : confirmations, timeout || 0, null);\n        });\n    }\n    _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const receipt = yield this.getTransactionReceipt(transactionHash);\n            // Receipt is already good\n            if ((receipt ? receipt.confirmations : 0) >= confirmations) {\n                return receipt;\n            }\n            // Poll until the receipt is good...\n            return new Promise((resolve, reject) => {\n                const cancelFuncs = [];\n                let done = false;\n                const alreadyDone = function () {\n                    if (done) {\n                        return true;\n                    }\n                    done = true;\n                    cancelFuncs.forEach((func) => { func(); });\n                    return false;\n                };\n                const minedHandler = (receipt) => {\n                    if (receipt.confirmations < confirmations) {\n                        return;\n                    }\n                    if (alreadyDone()) {\n                        return;\n                    }\n                    resolve(receipt);\n                };\n                this.on(transactionHash, minedHandler);\n                cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n                if (replaceable) {\n                    let lastBlockNumber = replaceable.startBlock;\n                    let scannedBlock = null;\n                    const replaceHandler = (blockNumber) => __awaiter(this, void 0, void 0, function* () {\n                        if (done) {\n                            return;\n                        }\n                        // Wait 1 second; this is only used in the case of a fault, so\n                        // we will trade off a little bit of latency for more consistent\n                        // results and fewer JSON-RPC calls\n                        yield stall(1000);\n                        this.getTransactionCount(replaceable.from).then((nonce) => __awaiter(this, void 0, void 0, function* () {\n                            if (done) {\n                                return;\n                            }\n                            if (nonce <= replaceable.nonce) {\n                                lastBlockNumber = blockNumber;\n                            }\n                            else {\n                                // First check if the transaction was mined\n                                {\n                                    const mined = yield this.getTransaction(transactionHash);\n                                    if (mined && mined.blockNumber != null) {\n                                        return;\n                                    }\n                                }\n                                // First time scanning. We start a little earlier for some\n                                // wiggle room here to handle the eventually consistent nature\n                                // of blockchain (e.g. the getTransactionCount was for a\n                                // different block)\n                                if (scannedBlock == null) {\n                                    scannedBlock = lastBlockNumber - 3;\n                                    if (scannedBlock < replaceable.startBlock) {\n                                        scannedBlock = replaceable.startBlock;\n                                    }\n                                }\n                                while (scannedBlock <= blockNumber) {\n                                    if (done) {\n                                        return;\n                                    }\n                                    const block = yield this.getBlockWithTransactions(scannedBlock);\n                                    for (let ti = 0; ti < block.transactions.length; ti++) {\n                                        const tx = block.transactions[ti];\n                                        // Successfully mined!\n                                        if (tx.hash === transactionHash) {\n                                            return;\n                                        }\n                                        // Matches our transaction from and nonce; its a replacement\n                                        if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                            if (done) {\n                                                return;\n                                            }\n                                            // Get the receipt of the replacement\n                                            const receipt = yield this.waitForTransaction(tx.hash, confirmations);\n                                            // Already resolved or rejected (prolly a timeout)\n                                            if (alreadyDone()) {\n                                                return;\n                                            }\n                                            // The reason we were replaced\n                                            let reason = \"replaced\";\n                                            if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                                reason = \"repriced\";\n                                            }\n                                            else if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                                reason = \"cancelled\";\n                                            }\n                                            // Explain why we were replaced\n                                            reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                                cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                                reason,\n                                                replacement: this._wrapTransaction(tx),\n                                                hash: transactionHash,\n                                                receipt\n                                            }));\n                                            return;\n                                        }\n                                    }\n                                    scannedBlock++;\n                                }\n                            }\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        }), (error) => {\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        });\n                    });\n                    if (done) {\n                        return;\n                    }\n                    this.once(\"block\", replaceHandler);\n                    cancelFuncs.push(() => {\n                        this.removeListener(\"block\", replaceHandler);\n                    });\n                }\n                if (typeof (timeout) === \"number\" && timeout > 0) {\n                    const timer = setTimeout(() => {\n                        if (alreadyDone()) {\n                            return;\n                        }\n                        reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                    }, timeout);\n                    if (timer.unref) {\n                        timer.unref();\n                    }\n                    cancelFuncs.push(() => { clearTimeout(timer); });\n                }\n            });\n        });\n    }\n    getBlockNumber() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._getInternalBlockNumber(0);\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const result = yield this.perform(\"getGasPrice\", {});\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getGasPrice\",\n                    result, error\n                });\n            }\n        });\n    }\n    getBalance(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getBalance\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getBalance\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getTransactionCount(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getTransactionCount\", params);\n            try {\n                return BigNumber.from(result).toNumber();\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getTransactionCount\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getCode(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getCode\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getCode\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getStorageAt(addressOrName, position, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag),\n                position: Promise.resolve(position).then((p) => hexValue(p))\n            });\n            const result = yield this.perform(\"getStorageAt\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getStorageAt\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx, hash, startBlock) {\n        if (hash != null && hexDataLength(hash) !== 32) {\n            throw new Error(\"invalid response - sendTransaction\");\n        }\n        const result = tx;\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n        result.wait = (confirms, timeout) => __awaiter(this, void 0, void 0, function* () {\n            if (confirms == null) {\n                confirms = 1;\n            }\n            if (timeout == null) {\n                timeout = 0;\n            }\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n            const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) {\n                return null;\n            }\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        });\n        return result;\n    }\n    sendTransaction(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const hexTx = yield Promise.resolve(signedTransaction).then(t => hexlify(t));\n            const tx = this.formatter.transaction(signedTransaction);\n            if (tx.confirmations == null) {\n                tx.confirmations = 0;\n            }\n            const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            try {\n                const hash = yield this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n                return this._wrapTransaction(tx, hash, blockNumber);\n            }\n            catch (error) {\n                error.transaction = tx;\n                error.transactionHash = tx.hash;\n                throw error;\n            }\n        });\n    }\n    _getTransactionRequest(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const values = yield transaction;\n            const tx = {};\n            [\"from\", \"to\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v) : null));\n            });\n            [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v) : null));\n            });\n            [\"type\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v : null));\n            });\n            if (values.accessList) {\n                tx.accessList = this.formatter.accessList(values.accessList);\n            }\n            [\"data\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v) : null));\n            });\n            return this.formatter.transactionRequest(yield resolveProperties(tx));\n        });\n    }\n    _getFilter(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            filter = yield filter;\n            const result = {};\n            if (filter.address != null) {\n                result.address = this._getAddress(filter.address);\n            }\n            [\"blockHash\", \"topics\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = filter[key];\n            });\n            [\"fromBlock\", \"toBlock\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = this._getBlockTag(filter[key]);\n            });\n            return this.formatter.filter(yield resolveProperties(result));\n        });\n    }\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"call\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"call\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction)\n            });\n            const result = yield this.perform(\"estimateGas\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"estimateGas\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    _getAddress(addressOrName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            addressOrName = yield addressOrName;\n            if (typeof (addressOrName) !== \"string\") {\n                logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n            }\n            const address = yield this.resolveName(addressOrName);\n            if (address == null) {\n                logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `resolveName(${JSON.stringify(addressOrName)})`\n                });\n            }\n            return address;\n        });\n    }\n    _getBlock(blockHashOrBlockTag, includeTransactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            blockHashOrBlockTag = yield blockHashOrBlockTag;\n            // If blockTag is a number (not \"latest\", etc), this is the block number\n            let blockNumber = -128;\n            const params = {\n                includeTransactions: !!includeTransactions\n            };\n            if (isHexString(blockHashOrBlockTag, 32)) {\n                params.blockHash = blockHashOrBlockTag;\n            }\n            else {\n                try {\n                    params.blockTag = yield this._getBlockTag(blockHashOrBlockTag);\n                    if (isHexString(params.blockTag)) {\n                        blockNumber = parseInt(params.blockTag.substring(2), 16);\n                    }\n                }\n                catch (error) {\n                    logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n                }\n            }\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const block = yield this.perform(\"getBlock\", params);\n                // Block was not found\n                if (block == null) {\n                    // For blockhashes, if we didn't say it existed, that blockhash may\n                    // not exist. If we did see it though, perhaps from a log, we know\n                    // it exists, and this node is just not caught up yet.\n                    if (params.blockHash != null) {\n                        if (this._emitted[\"b:\" + params.blockHash] == null) {\n                            return null;\n                        }\n                    }\n                    // For block tags, if we are asking for a future block, we return null\n                    if (params.blockTag != null) {\n                        if (blockNumber > this._emitted.block) {\n                            return null;\n                        }\n                    }\n                    // Retry on the next block\n                    return undefined;\n                }\n                // Add transactions\n                if (includeTransactions) {\n                    let blockNumber = null;\n                    for (let i = 0; i < block.transactions.length; i++) {\n                        const tx = block.transactions[i];\n                        if (tx.blockNumber == null) {\n                            tx.confirmations = 0;\n                        }\n                        else if (tx.confirmations == null) {\n                            if (blockNumber == null) {\n                                blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                            }\n                            // Add the confirmations using the fast block number (pessimistic)\n                            let confirmations = (blockNumber - tx.blockNumber) + 1;\n                            if (confirmations <= 0) {\n                                confirmations = 1;\n                            }\n                            tx.confirmations = confirmations;\n                        }\n                    }\n                    const blockWithTxs = this.formatter.blockWithTransactions(block);\n                    blockWithTxs.transactions = blockWithTxs.transactions.map((tx) => this._wrapTransaction(tx));\n                    return blockWithTxs;\n                }\n                return this.formatter.block(block);\n            }), { oncePoll: this });\n        });\n    }\n    getBlock(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, false));\n    }\n    getBlockWithTransactions(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, true));\n    }\n    getTransaction(transactionHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransaction\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                const tx = this.formatter.transactionResponse(result);\n                if (tx.blockNumber == null) {\n                    tx.confirmations = 0;\n                }\n                else if (tx.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - tx.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    tx.confirmations = confirmations;\n                }\n                return this._wrapTransaction(tx);\n            }), { oncePoll: this });\n        });\n    }\n    getTransactionReceipt(transactionHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransactionReceipt\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                // \"geth-etc\" returns receipts before they are ready\n                if (result.blockHash == null) {\n                    return undefined;\n                }\n                const receipt = this.formatter.receipt(result);\n                if (receipt.blockNumber == null) {\n                    receipt.confirmations = 0;\n                }\n                else if (receipt.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    receipt.confirmations = confirmations;\n                }\n                return receipt;\n            }), { oncePoll: this });\n        });\n    }\n    getLogs(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({ filter: this._getFilter(filter) });\n            const logs = yield this.perform(\"getLogs\", params);\n            logs.forEach((log) => {\n                if (log.removed == null) {\n                    log.removed = false;\n                }\n            });\n            return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n        });\n    }\n    getEtherPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            return this.perform(\"getEtherPrice\", {});\n        });\n    }\n    _getBlockTag(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            blockTag = yield blockTag;\n            if (typeof (blockTag) === \"number\" && blockTag < 0) {\n                if (blockTag % 1) {\n                    logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n                }\n                let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                blockNumber += blockTag;\n                if (blockNumber < 0) {\n                    blockNumber = 0;\n                }\n                return this.formatter.blockTag(blockNumber);\n            }\n            return this.formatter.blockTag(blockTag);\n        });\n    }\n    getResolver(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const address = yield this._getResolver(name);\n                if (address == null) {\n                    return null;\n                }\n                return new Resolver(this, address, name);\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                return null;\n            }\n        });\n    }\n    _getResolver(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Get the resolver from the blockchain\n            const network = yield this.getNetwork();\n            // No ENS...\n            if (!network.ensAddress) {\n                logger.throwError(\"network does not support ENS\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"ENS\", network: network.name });\n            }\n            // keccak256(\"resolver(bytes32)\")\n            const transaction = {\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            };\n            try {\n                return this.formatter.callAddress(yield this.call(transaction));\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                throw error;\n            }\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            name = yield name;\n            // If it is already an address, nothing to resolve\n            try {\n                return Promise.resolve(this.formatter.address(name));\n            }\n            catch (error) {\n                // If is is a hexstring, the address is bad (See #694)\n                if (isHexString(name)) {\n                    throw error;\n                }\n            }\n            if (typeof (name) !== \"string\") {\n                logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n            }\n            // Get the addr from the resovler\n            const resolver = yield this.getResolver(name);\n            if (!resolver) {\n                return null;\n            }\n            return yield resolver.getAddress();\n        });\n    }\n    lookupAddress(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            address = yield address;\n            address = this.formatter.address(address);\n            const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n            const resolverAddress = yield this._getResolver(reverseName);\n            if (!resolverAddress) {\n                return null;\n            }\n            // keccak(\"name(bytes32)\")\n            let bytes = arrayify(yield this.call({\n                to: resolverAddress,\n                data: (\"0x691f3431\" + namehash(reverseName).substring(2))\n            }));\n            // Strip off the dynamic string pointer (0x20)\n            if (bytes.length < 32 || !BigNumber.from(bytes.slice(0, 32)).eq(32)) {\n                return null;\n            }\n            bytes = bytes.slice(32);\n            // Not a length-prefixed string\n            if (bytes.length < 32) {\n                return null;\n            }\n            // Get the length of the string (from the length-prefix)\n            const length = BigNumber.from(bytes.slice(0, 32)).toNumber();\n            bytes = bytes.slice(32);\n            // Length longer than available data\n            if (length > bytes.length) {\n                return null;\n            }\n            const name = toUtf8String(bytes.slice(0, length));\n            // Make sure the reverse record matches the foward record\n            const addr = yield this.resolveName(name);\n            if (addr != address) {\n                return null;\n            }\n            return name;\n        });\n    }\n    getAvatar(nameOrAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resolver = null;\n            if (isHexString(nameOrAddress)) {\n                // Address; reverse lookup\n                const address = this.formatter.address(nameOrAddress);\n                const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n                const resolverAddress = yield this._getResolver(reverseName);\n                if (!resolverAddress) {\n                    return null;\n                }\n                resolver = new Resolver(this, resolverAddress, \"_\", address);\n            }\n            else {\n                // ENS name; forward lookup\n                resolver = yield this.getResolver(nameOrAddress);\n                if (!resolver) {\n                    return null;\n                }\n            }\n            const avatar = yield resolver.getAvatar();\n            if (avatar == null) {\n                return null;\n            }\n            return avatar.url;\n        });\n    }\n    perform(method, params) {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n    _startEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _stopEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _addEventListener(eventName, listener, once) {\n        const event = new Event(getEventTag(eventName), listener, once);\n        this._events.push(event);\n        this._startEvent(event);\n        return this;\n    }\n    on(eventName, listener) {\n        return this._addEventListener(eventName, listener, false);\n    }\n    once(eventName, listener) {\n        return this._addEventListener(eventName, listener, true);\n    }\n    emit(eventName, ...args) {\n        let result = false;\n        let stopped = [];\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) {\n                return true;\n            }\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n            result = true;\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n            return true;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!eventName) {\n            return this._events.length;\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n    listeners(eventName) {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n    off(eventName, listener) {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n        const stopped = [];\n        let found = false;\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) {\n                return true;\n            }\n            if (found) {\n                return true;\n            }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n    removeAllListeners(eventName) {\n        let stopped = [];\n        if (eventName == null) {\n            stopped = this._events;\n            this._events = [];\n        }\n        else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) {\n                    return true;\n                }\n                stopped.push(event);\n                return false;\n            });\n        }\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n}\n//# sourceMappingURL=base-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\nconst errorGas = [\"call\", \"estimateGas\"];\nfunction checkError(method, error, params) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n            return e.data;\n        }\n        logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n            error, data: \"0x\"\n        });\n    }\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof (error.error.message) === \"string\") {\n        message = error.error.message;\n    }\n    else if (typeof (error.body) === \"string\") {\n        message = error.body;\n    }\n    else if (typeof (error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n    const transaction = params.transaction || params.signedTransaction;\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"nonce too low\"\n    if (message.match(/nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nfunction timer(timeout) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\nfunction getResult(payload) {\n    if (payload.error) {\n        // @TODO: not any\n        const error = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n    return payload.result;\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nconst _constructorGuard = {};\nexport class JsonRpcSigner extends Signer {\n    constructor(constructorGuard, provider, addressOrIndex) {\n        logger.checkNew(new.target, JsonRpcSigner);\n        super();\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n        defineReadOnly(this, \"provider\", provider);\n        if (addressOrIndex == null) {\n            addressOrIndex = 0;\n        }\n        if (typeof (addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n        }\n        else if (typeof (addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n    connect(provider) {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n    connectUnchecked() {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n    getAddress() {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index]);\n        });\n    }\n    sendUncheckedTransaction(transaction) {\n        transaction = shallowCopy(transaction);\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) {\n                address = address.toLowerCase();\n            }\n            return address;\n        });\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                if (to == null) {\n                    return null;\n                }\n                const address = yield this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            }));\n        }\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            }\n            else {\n                tx.from = sender;\n            }\n            const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });\n            return this.provider.send(\"eth_sendTransaction\", [hexTx]).then((hash) => {\n                return hash;\n            }, (error) => {\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n    signTransaction(transaction) {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // This cannot be mined any earlier than any recent block\n            const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n            // Send the transaction\n            const hash = yield this.sendUncheckedTransaction(transaction);\n            try {\n                // Unfortunately, JSON-RPC only provides and opaque transaction hash\n                // for a response, and we need the actual transaction, so we poll\n                // for it; it should show up very quickly\n                return yield poll(() => __awaiter(this, void 0, void 0, function* () {\n                    const tx = yield this.provider.getTransaction(hash);\n                    if (tx === null) {\n                        return undefined;\n                    }\n                    return this.provider._wrapTransaction(tx, hash, blockNumber);\n                }), { oncePoll: this.provider });\n            }\n            catch (error) {\n                error.transactionHash = hash;\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"personal_sign\", [hexlify(data), address.toLowerCase()]);\n        });\n    }\n    _legacySignMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names (in-place)\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                return this.provider.resolveName(name);\n            });\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        });\n    }\n    unlock(password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = this.provider;\n            const address = yield this.getAddress();\n            return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n        });\n    }\n}\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction) {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return {\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\nconst allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n};\nexport class JsonRpcProvider extends BaseProvider {\n    constructor(url, network) {\n        logger.checkNew(new.target, JsonRpcProvider);\n        let networkOrReady = network;\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Default URL\n        if (!url) {\n            url = getStatic(this.constructor, \"defaultUrl\")();\n        }\n        if (typeof (url) === \"string\") {\n            defineReadOnly(this, \"connection\", Object.freeze({\n                url: url\n            }));\n        }\n        else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n        this._nextId = 42;\n    }\n    get _cache() {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = {};\n        }\n        return this._eventLoopCache;\n    }\n    static defaultUrl() {\n        return \"http:/\\/localhost:8545\";\n    }\n    detectNetwork() {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n    _uncachedDetectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield timer(0);\n            let chainId = null;\n            try {\n                chainId = yield this.send(\"eth_chainId\", []);\n            }\n            catch (error) {\n                try {\n                    chainId = yield this.send(\"net_version\", []);\n                }\n                catch (error) { }\n            }\n            if (chainId != null) {\n                const getNetwork = getStatic(this.constructor, \"getNetwork\");\n                try {\n                    return getNetwork(BigNumber.from(chainId).toNumber());\n                }\n                catch (error) {\n                    return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                        chainId: chainId,\n                        event: \"invalidNetwork\",\n                        serverError: error\n                    });\n                }\n            }\n            return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                event: \"noNetwork\"\n            });\n        });\n    }\n    getSigner(addressOrIndex) {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n    getUncheckedSigner(addressOrIndex) {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n    listAccounts() {\n        return this.send(\"eth_accounts\", []).then((accounts) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n            return result;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n            throw error;\n        });\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n        return result;\n    }\n    prepareRequest(method, params) {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [\"eth_blockNumber\", []];\n            case \"getGasPrice\":\n                return [\"eth_gasPrice\", []];\n            case \"getBalance\":\n                return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n            case \"getTransactionCount\":\n                return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n            case \"getCode\":\n                return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n            case \"getStorageAt\":\n                return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n            case \"sendTransaction\":\n                return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n                }\n                else if (params.blockHash) {\n                    return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n                }\n                return null;\n            case \"getTransaction\":\n                return [\"eth_getTransactionByHash\", [params.transactionHash]];\n            case \"getTransactionReceipt\":\n                return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n            case \"call\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_call\", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];\n            }\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, { from: true })]];\n            }\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [\"eth_getLogs\", [params.filter]];\n            default:\n                break;\n        }\n        return null;\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Legacy networks do not like the type field being passed along (which\n            // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n            if (method === \"call\" || method === \"estimateGas\") {\n                const tx = params.transaction;\n                if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                    // If there are no EIP-1559 properties, it might be non-EIP-a559\n                    if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                        const feeData = yield this.getFeeData();\n                        if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                            // Network doesn't know about EIP-1559 (and hence type)\n                            params = shallowCopy(params);\n                            params.transaction = shallowCopy(tx);\n                            delete params.transaction.type;\n                        }\n                    }\n                }\n            }\n            const args = this.prepareRequest(method, params);\n            if (args == null) {\n                logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n            }\n            try {\n                return yield this.send(args[0], args[1]);\n            }\n            catch (error) {\n                return checkError(method, error, params);\n            }\n        });\n    }\n    _startEvent(event) {\n        if (event.tag === \"pending\") {\n            this._startPending();\n        }\n        super._startEvent(event);\n    }\n    _startPending() {\n        if (this._pendingFilter != null) {\n            return;\n        }\n        const self = this;\n        const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n        pendingFilter.then(function (filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n                    if (self._pendingFilter != pendingFilter) {\n                        return null;\n                    }\n                    let seq = Promise.resolve();\n                    hashes.forEach(function (hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function () {\n                            return self.getTransaction(hash).then(function (tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n                    return seq.then(function () {\n                        return timer(1000);\n                    });\n                }).then(function () {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [filterId]);\n                        return;\n                    }\n                    setTimeout(function () { poll(); }, 0);\n                    return null;\n                }).catch((error) => { });\n            }\n            poll();\n            return filterId;\n        }).catch((error) => { });\n    }\n    _stopEvent(event) {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction, allowExtra) {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) {\n                    allowed[key] = true;\n                }\n            }\n        }\n        checkProperties(transaction, allowed);\n        const result = {};\n        // Some nodes (INFURA ropsten; INFURA mainnet is fine) do not like leading zeros.\n        [\"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            const value = hexValue(transaction[key]);\n            if (key === \"gasLimit\") {\n                key = \"gas\";\n            }\n            result[key] = value;\n        });\n        [\"from\", \"to\", \"data\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            result[key] = hexlify(transaction[key]);\n        });\n        if (transaction.accessList) {\n            result[\"accessList\"] = accessListify(transaction.accessList);\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=json-rpc-provider.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nlet WS = null;\ntry {\n    WS = WebSocket;\n    if (WS == null) {\n        throw new Error(\"inject please\");\n    }\n}\ncatch (error) {\n    const logger = new Logger(version);\n    WS = function () {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    };\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n//# sourceMappingURL=ws.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\nlet NextId = 1;\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\nexport class WebSocketProvider extends JsonRpcProvider {\n    constructor(url, network) {\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n        super(url, network);\n        this._pollingInterval = -1;\n        this._wsReady = false;\n        defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        defineReadOnly(this, \"_requests\", {});\n        defineReadOnly(this, \"_subs\", {});\n        defineReadOnly(this, \"_subIds\", {});\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n        // Stall sending requests until the socket is open...\n        this._websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this._websocket.send(this._requests[id].payload);\n            });\n        };\n        this._websocket.onmessage = (messageEvent) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n                }\n                else {\n                    let error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(error, \"code\", result.error.code || null);\n                        defineReadOnly(error, \"response\", data);\n                    }\n                    else {\n                        error = new Error(\"unknown error\");\n                    }\n                    request.callback(error, undefined);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n                }\n            }\n            else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result);\n                }\n            }\n            else {\n                console.warn(\"this should not happen\");\n            }\n        };\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) {\n            fauxPoll.unref();\n        }\n    }\n    detectNetwork() {\n        return this._detectNetwork;\n    }\n    get pollingInterval() {\n        return 0;\n    }\n    resetEventsBlock(blockNumber) {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n    set pollingInterval(value) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n    poll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return null;\n        });\n    }\n    set polling(value) {\n        if (!value) {\n            return;\n        }\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n    send(method, params) {\n        const rid = NextId++;\n        return new Promise((resolve, reject) => {\n            function callback(error, result) {\n                if (error) {\n                    return reject(error);\n                }\n                return resolve(result);\n            }\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n            this._requests[String(rid)] = { callback, payload };\n            if (this._wsReady) {\n                this._websocket.send(payload);\n            }\n        });\n    }\n    static defaultUrl() {\n        return \"ws:/\\/localhost:8546\";\n    }\n    _subscribe(tag, param, processFunc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let subIdPromise = this._subIds[tag];\n            if (subIdPromise == null) {\n                subIdPromise = Promise.all(param).then((param) => {\n                    return this.send(\"eth_subscribe\", param);\n                });\n                this._subIds[tag] = subIdPromise;\n            }\n            const subId = yield subIdPromise;\n            this._subs[subId] = { tag, processFunc };\n        });\n    }\n    _startEvent(event) {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [\"newHeads\"], (result) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n            case \"pending\":\n                this._subscribe(\"pending\", [\"newPendingTransactions\"], (result) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n            case \"filter\":\n                this._subscribe(event.tag, [\"logs\", this._getFilter(event.filter)], (result) => {\n                    if (result.removed == null) {\n                        result.removed = false;\n                    }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n            case \"tx\": {\n                const emitReceipt = (event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) {\n                            return;\n                        }\n                        this.emit(hash, receipt);\n                    });\n                };\n                // In case it is already mined\n                emitReceipt(event);\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [\"newHeads\"], (result) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n    _stopEvent(event) {\n        let tag = event.tag;\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        }\n        else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n        const subId = this._subIds[tag];\n        if (!subId) {\n            return;\n        }\n        delete this._subIds[tag];\n        subId.then((subId) => {\n            if (!this._subs[subId]) {\n                return;\n            }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [subId]);\n        });\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Wait until we have connected before trying to disconnect\n            if (this._websocket.readyState === WebSocket.CONNECTING) {\n                yield (new Promise((resolve) => {\n                    this._websocket.onopen = function () {\n                        resolve(true);\n                    };\n                    this._websocket.onerror = function () {\n                        resolve(false);\n                    };\n                }));\n            }\n            // Hangup\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n            this._websocket.close(1000);\n        });\n    }\n}\n//# sourceMappingURL=websocket-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    detectNetwork() {\n        const _super = Object.create(null, {\n            detectNetwork: { get: () => super.detectNetwork }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            let network = this.network;\n            if (network == null) {\n                network = yield _super.detectNetwork.call(this);\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // If still not set, set it\n                if (this._network == null) {\n                    // A static network does not support \"any\"\n                    defineReadOnly(this, \"_network\", network);\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return network;\n        });\n    }\n}\nexport class UrlJsonRpcProvider extends StaticJsonRpcProvider {\n    constructor(network, apiKey) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n        // Normalize the Network and API Key\n        network = getStatic(new.target, \"getNetwork\")(network);\n        apiKey = getStatic(new.target, \"getApiKey\")(apiKey);\n        const connection = getStatic(new.target, \"getUrl\")(network, apiKey);\n        super(connection, network);\n        if (typeof (apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        }\n        else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly(this, key, apiKey[key]);\n            });\n        }\n    }\n    _startPending() {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n    isCommunityResource() {\n        return false;\n    }\n    getSigner(address) {\n        return logger.throwError(\"API provider does not support signing\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"getSigner\" });\n    }\n    listAccounts() {\n        return Promise.resolve([]);\n    }\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey) {\n        return apiKey;\n    }\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network, apiKey) {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n//# sourceMappingURL=url-json-rpc-provider.js.map","\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\nexport class AlchemyWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new AlchemyProvider(network, apiKey);\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n            .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        if (apiKey == null) {\n            return defaultApiKey;\n        }\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.alchemyapi.io/v2/\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.alchemyapi.io/v2/\";\n                break;\n            case \"kovan\":\n                host = \"eth-kovan.alchemyapi.io/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arb-rinkeby.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-kovan\":\n                host = \"opt-kovan.g.alchemy.com/v2/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt, url) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=alchemy-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return host;\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            // The Cloudflare provider does not support eth_blockNumber,\n            // so we get the latest block and pull it from that\n            if (method === \"getBlockNumber\") {\n                const block = yield _super.perform.call(this, \"getBlock\", { blockTag: \"latest\" });\n                return block.number;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n}\n//# sourceMappingURL=cloudflare-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction) {\n    const result = {};\n    for (let key in transaction) {\n        if (transaction[key] == null) {\n            continue;\n        }\n        let value = transaction[key];\n        if (key === \"type\" && value === 0) {\n            continue;\n        }\n        // Quantity-types require no leading zero, unless 0\n        if ({ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true }[key]) {\n            value = hexValue(hexlify(value));\n        }\n        else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${set.address}\",storageKeys:[\"${set.storageKeys.join('\",\"')}\"]}`;\n            }).join(\",\") + \"]\";\n        }\n        else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\nfunction getResult(result) {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n    if (result.status != 1 || result.message != \"OK\") {\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n    return result.result;\n}\nfunction getJsonResult(result) {\n    // This response indicates we are being throttled\n    if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n    if (result.error) {\n        // @TODO: not any\n        const error = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) {\n            error.code = result.error.code;\n        }\n        if (result.error.data) {\n            error.data = result.error.data;\n        }\n        throw error;\n    }\n    return result.result;\n}\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag) {\n    if (blockTag === \"pending\") {\n        throw new Error(\"pending not supported\");\n    }\n    if (blockTag === \"latest\") {\n        return blockTag;\n    }\n    return parseInt(blockTag.substring(2), 16);\n}\nconst defaultApiKey = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\nfunction checkError(method, error, transaction) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) {\n                data = \"0x\" + data.replace(/^.*0x/i, \"\");\n            }\n            if (isHexString(data)) {\n                return data;\n            }\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof (error.error.message) === \"string\") {\n            message = error.error.message;\n        }\n        else if (typeof (error.body) === \"string\") {\n            message = error.body;\n        }\n        else if (typeof (error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nexport class EtherscanProvider extends BaseProvider {\n    constructor(network, apiKey) {\n        logger.checkNew(new.target, EtherscanProvider);\n        super(network);\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || defaultApiKey);\n    }\n    getBaseUrl() {\n        switch (this.network ? this.network.name : \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"ropsten\":\n                return \"https:/\\/api-ropsten.etherscan.io\";\n            case \"rinkeby\":\n                return \"https:/\\/api-rinkeby.etherscan.io\";\n            case \"kovan\":\n                return \"https:/\\/api-kovan.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            default:\n        }\n        return logger.throwArgumentError(\"unsupported network\", \"network\", name);\n    }\n    getUrl(module, params) {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${key}=${value}`;\n            }\n            return accum;\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${this.apiKey}` : \"\");\n        return `${this.baseUrl}/api?module=${module}${query}${apiKey}`;\n    }\n    getPostUrl() {\n        return `${this.baseUrl}/api`;\n    }\n    getPostData(module, params) {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n    fetch(module, params, post) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = (post ? this.getPostUrl() : this.getUrl(module, params));\n            const payload = (post ? this.getPostData(module, params) : null);\n            const procFunc = (module === \"proxy\") ? getJsonResult : getResult;\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: url,\n                provider: this\n            });\n            const connection = {\n                url: url,\n                throttleSlotInterval: 1000,\n                throttleCallback: (attempt, url) => {\n                    if (this.isCommunityResource()) {\n                        showThrottleMessage();\n                    }\n                    return Promise.resolve(true);\n                }\n            };\n            let payloadStr = null;\n            if (payload) {\n                connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n                payloadStr = Object.keys(payload).map((key) => {\n                    return `${key}=${payload[key]}`;\n                }).join(\"&\");\n            }\n            const result = yield fetchJson(connection, payloadStr, procFunc || getJsonResult);\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: url,\n                response: deepCopy(result),\n                provider: this\n            });\n            return result;\n        });\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.network;\n        });\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            switch (method) {\n                case \"getBlockNumber\":\n                    return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n                case \"getGasPrice\":\n                    return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n                case \"getBalance\":\n                    // Returns base-10 result\n                    return this.fetch(\"account\", {\n                        action: \"balance\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getTransactionCount\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionCount\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getCode\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getCode\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getStorageAt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getStorageAt\",\n                        address: params.address,\n                        position: params.position,\n                        tag: params.blockTag\n                    });\n                case \"sendTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_sendRawTransaction\",\n                        hex: params.signedTransaction\n                    }, true).catch((error) => {\n                        return checkError(\"sendTransaction\", error, params.signedTransaction);\n                    });\n                case \"getBlock\":\n                    if (params.blockTag) {\n                        return this.fetch(\"proxy\", {\n                            action: \"eth_getBlockByNumber\",\n                            tag: params.blockTag,\n                            boolean: (params.includeTransactions ? \"true\" : \"false\")\n                        });\n                    }\n                    throw new Error(\"getBlock by blockHash not implemented\");\n                case \"getTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionByHash\",\n                        txhash: params.transactionHash\n                    });\n                case \"getTransactionReceipt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionReceipt\",\n                        txhash: params.transactionHash\n                    });\n                case \"call\": {\n                    if (params.blockTag !== \"latest\") {\n                        throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                    }\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_call\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"call\", error, params.transaction);\n                    }\n                }\n                case \"estimateGas\": {\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_estimateGas\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"estimateGas\", error, params.transaction);\n                    }\n                }\n                case \"getLogs\": {\n                    const args = { action: \"getLogs\" };\n                    if (params.filter.fromBlock) {\n                        args.fromBlock = checkLogTag(params.filter.fromBlock);\n                    }\n                    if (params.filter.toBlock) {\n                        args.toBlock = checkLogTag(params.filter.toBlock);\n                    }\n                    if (params.filter.address) {\n                        args.address = params.filter.address;\n                    }\n                    // @TODO: We can handle slightly more complicated logs using the logs API\n                    if (params.filter.topics && params.filter.topics.length > 0) {\n                        if (params.filter.topics.length > 1) {\n                            logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                        }\n                        if (params.filter.topics.length === 1) {\n                            const topic0 = params.filter.topics[0];\n                            if (typeof (topic0) !== \"string\" || topic0.length !== 66) {\n                                logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                            }\n                            args.topic0 = topic0;\n                        }\n                    }\n                    const logs = yield this.fetch(\"logs\", args);\n                    // Cache txHash => blockHash\n                    let blocks = {};\n                    // Add any missing blockHash to the logs\n                    for (let i = 0; i < logs.length; i++) {\n                        const log = logs[i];\n                        if (log.blockHash != null) {\n                            continue;\n                        }\n                        if (blocks[log.blockNumber] == null) {\n                            const block = yield this.getBlock(log.blockNumber);\n                            if (block) {\n                                blocks[log.blockNumber] = block.hash;\n                            }\n                        }\n                        log.blockHash = blocks[log.blockNumber];\n                    }\n                    return logs;\n                }\n                case \"getEtherPrice\":\n                    if (this.network.name !== \"homestead\") {\n                        return 0.0;\n                    }\n                    return parseFloat((yield this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n                default:\n                    break;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    getHistory(addressOrName, startBlock, endBlock) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const params = {\n                action: \"txlist\",\n                address: (yield this.resolveName(addressOrName)),\n                startblock: ((startBlock == null) ? 0 : startBlock),\n                endblock: ((endBlock == null) ? 99999999 : endBlock),\n                sort: \"asc\"\n            };\n            const result = yield this.fetch(\"account\", params);\n            return result.map((tx) => {\n                [\"contractAddress\", \"to\"].forEach(function (key) {\n                    if (tx[key] == \"\") {\n                        delete tx[key];\n                    }\n                });\n                if (tx.creates == null && tx.contractAddress != null) {\n                    tx.creates = tx.contractAddress;\n                }\n                const item = this.formatter.transactionResponse(tx);\n                if (tx.timeStamp) {\n                    item.timestamp = parseInt(tx.timeStamp);\n                }\n                return item;\n            });\n        });\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=etherscan-provider.js.map","\"use strict\";\nexport function shuffled(array) {\n    array = array.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n    return array;\n}\n//# sourceMappingURL=shuffle.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction now() { return (new Date()).getTime(); }\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks) {\n    let result = null;\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n        // Null! We do not know our network; bail.\n        if (network == null) {\n            return null;\n        }\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n            }\n        }\n        else {\n            result = network;\n        }\n    }\n    return result;\n}\nfunction median(values, maxDelta) {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n    return (a + b) / 2;\n}\nfunction serialize(value) {\n    if (value === null) {\n        return \"null\";\n    }\n    else if (typeof (value) === \"number\" || typeof (value) === \"boolean\") {\n        return JSON.stringify(value);\n    }\n    else if (typeof (value) === \"string\") {\n        return value;\n    }\n    else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    }\n    else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    }\n    else if (typeof (value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof (v) === \"function\") {\n                v = \"[function]\";\n            }\n            else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n    throw new Error(\"unknown value type: \" + typeof (value));\n}\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n;\nfunction stall(duration) {\n    let cancel = null;\n    let timer = null;\n    let promise = (new Promise((resolve) => {\n        cancel = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        };\n        timer = setTimeout(cancel, duration);\n    }));\n    const wait = (func) => {\n        promise = promise.then(func);\n        return promise;\n    };\n    function getPromise() {\n        return promise;\n    }\n    return { cancel, getPromise, wait };\n}\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n;\nfunction exposeDebugConfig(config, now) {\n    const result = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) {\n        result.start = config.start;\n    }\n    if (now) {\n        result.duration = (now - config.start);\n    }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        }\n        else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\nfunction normalizedTally(normalize, quorum) {\n    return function (configs) {\n        // Count the votes for each result\n        const tally = {};\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) {\n                tally[value] = { count: 0, result: c.result };\n            }\n            tally[value].count++;\n        });\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n        // No quroum\n        return undefined;\n    };\n}\nfunction getProcessFunc(provider, method, params) {\n    let normalize = serialize;\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) {\n                    return undefined;\n                }\n                blockNumber = Math.ceil(blockNumber);\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) {\n                    blockNumber++;\n                }\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n                return provider._highestBlockNumber;\n            };\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            };\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function (configs) {\n                return median(configs.map((c) => c.result));\n            };\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function (tx) {\n                if (tx == null) {\n                    return null;\n                }\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            };\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            }\n            else {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    return serialize(block);\n                };\n            }\n            break;\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n}\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nfunction waitForSync(config, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const provider = (config.provider);\n        if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n            return provider;\n        }\n        return poll(() => {\n            return new Promise((resolve, reject) => {\n                setTimeout(function () {\n                    // We are synced\n                    if (provider.blockNumber >= blockNumber) {\n                        return resolve(provider);\n                    }\n                    // We're done; just quit\n                    if (config.cancelled) {\n                        return resolve(null);\n                    }\n                    // Try again, next block\n                    return resolve(undefined);\n                }, 0);\n            });\n        }, { oncePoll: provider });\n    });\n}\nfunction getRunner(config, currentBlockNumber, method, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let provider = config.provider;\n        switch (method) {\n            case \"getBlockNumber\":\n            case \"getGasPrice\":\n                return provider[method]();\n            case \"getEtherPrice\":\n                if (provider.getEtherPrice) {\n                    return provider.getEtherPrice();\n                }\n                break;\n            case \"getBalance\":\n            case \"getTransactionCount\":\n            case \"getCode\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.address, params.blockTag || \"latest\");\n            case \"getStorageAt\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n            case \"getBlock\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[(params.includeTransactions ? \"getBlockWithTransactions\" : \"getBlock\")](params.blockTag || params.blockHash);\n            case \"call\":\n            case \"estimateGas\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.transaction);\n            case \"getTransaction\":\n            case \"getTransactionReceipt\":\n                return provider[method](params.transactionHash);\n            case \"getLogs\": {\n                let filter = params.filter;\n                if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getLogs(filter);\n            }\n        }\n        return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n            method: method,\n            params: params\n        });\n    });\n}\nexport class FallbackProvider extends BaseProvider {\n    constructor(providers, quorum) {\n        logger.checkNew(new.target, FallbackProvider);\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n        const providerConfigs = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n            const config = shallowCopy(configOrProvider);\n            if (config.priority == null) {\n                config.priority = 1;\n            }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n            }\n            if (config.weight == null) {\n                config.weight = 1;\n            }\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${index}].weight`, weight);\n            }\n            return Object.freeze(config);\n        });\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n        if (quorum == null) {\n            quorum = total / 2;\n        }\n        else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n        // Are all providers' networks are known\n        let networkOrReady = checkNetworks(providerConfigs.map((c) => (c.provider).network));\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n        this._highestBlockNumber = -1;\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const networks = yield Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n            return checkNetworks(networks);\n        });\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Sending transactions is special; always broadcast it to all backends\n            if (method === \"sendTransaction\") {\n                const results = yield Promise.all(this.providerConfigs.map((c) => {\n                    return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                        return result.hash;\n                    }, (error) => {\n                        return error;\n                    });\n                }));\n                // Any success is good enough (other errors are likely \"already seen\" errors\n                for (let i = 0; i < results.length; i++) {\n                    const result = results[i];\n                    if (typeof (result) === \"string\") {\n                        return result;\n                    }\n                }\n                // They were all an error; pick the first error\n                throw results[0];\n            }\n            // We need to make sure we are in sync with our backends, so we need\n            // to know this before we can make a lot of calls\n            if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n                yield this.getBlockNumber();\n            }\n            const processFunc = getProcessFunc(this, method, params);\n            // Shuffle the providers and then sort them by their priority; we\n            // shallowCopy them since we will store the result in them too\n            const configs = shuffled(this.providerConfigs.map(shallowCopy));\n            configs.sort((a, b) => (a.priority - b.priority));\n            const currentBlockNumber = this._highestBlockNumber;\n            let i = 0;\n            let first = true;\n            while (true) {\n                const t0 = now();\n                // Compute the inflight weight (exclude anything past)\n                let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                    .reduce((accum, c) => (accum + c.weight), 0);\n                // Start running enough to meet quorum\n                while (inflightWeight < this.quorum && i < configs.length) {\n                    const config = configs[i++];\n                    const rid = nextRid++;\n                    config.start = now();\n                    config.staller = stall(config.stallTimeout);\n                    config.staller.wait(() => { config.staller = null; });\n                    config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                        config.done = true;\n                        config.result = result;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    }, (error) => {\n                        config.done = true;\n                        config.error = error;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    });\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, null),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                    inflightWeight += config.weight;\n                }\n                // Wait for anything meaningful to finish or stall out\n                const waiting = [];\n                configs.forEach((c) => {\n                    if (c.done || !c.runner) {\n                        return;\n                    }\n                    waiting.push(c.runner);\n                    if (c.staller) {\n                        waiting.push(c.staller.getPromise());\n                    }\n                });\n                if (waiting.length) {\n                    yield Promise.race(waiting);\n                }\n                // Check the quorum and process the results; the process function\n                // may additionally decide the quorum is not met\n                const results = configs.filter((c) => (c.done && c.error == null));\n                if (results.length >= this.quorum) {\n                    const result = processFunc(results);\n                    if (result !== undefined) {\n                        // Shut down any stallers\n                        configs.forEach(c => {\n                            if (c.staller) {\n                                c.staller.cancel();\n                            }\n                            c.cancelled = true;\n                        });\n                        return result;\n                    }\n                    if (!first) {\n                        yield stall(100).getPromise();\n                    }\n                    first = false;\n                }\n                // No result, check for errors that should be forwarded\n                const errors = configs.reduce((accum, c) => {\n                    if (!c.done || c.error == null) {\n                        return accum;\n                    }\n                    const code = (c.error).code;\n                    if (ForwardErrors.indexOf(code) >= 0) {\n                        if (!accum[code]) {\n                            accum[code] = { error: c.error, weight: 0 };\n                        }\n                        accum[code].weight += c.weight;\n                    }\n                    return accum;\n                }, ({}));\n                Object.keys(errors).forEach((errorCode) => {\n                    const tally = errors[errorCode];\n                    if (tally.weight < this.quorum) {\n                        return;\n                    }\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) {\n                            c.staller.cancel();\n                        }\n                        c.cancelled = true;\n                    });\n                    const e = (tally.error);\n                    const props = {};\n                    ForwardProperties.forEach((name) => {\n                        if (e[name] == null) {\n                            return;\n                        }\n                        props[name] = e[name];\n                    });\n                    logger.throwError(e.reason || e.message, errorCode, props);\n                });\n                // All configs have run to completion; we will never get more data\n                if (configs.filter((c) => !c.done).length === 0) {\n                    break;\n                }\n            }\n            // Shut down any stallers; shouldn't be any\n            configs.forEach(c => {\n                if (c.staller) {\n                    c.staller.cancel();\n                }\n                c.cancelled = true;\n            });\n            return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n                method: method,\n                params: params,\n                //results: configs.map((c) => c.result),\n                //errors: configs.map((c) => c.error),\n                results: configs.map((c) => exposeDebugConfig(c)),\n                provider: this\n            });\n        });\n    }\n}\n//# sourceMappingURL=fallback-provider.js.map","\"use strict\";\nconst IpcProvider = null;\nexport { IpcProvider };\n//# sourceMappingURL=ipc-provider.js.map","\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nconst defaultProjectId = \"84842078b09946638c03157f83405213\";\nexport class InfuraWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        const apiKeyObj = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n        if (apiKey == null) {\n            return apiKeyObj;\n        }\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n        }\n        else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof (apiKey.projectId) === \"string\"), \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof (apiKey.projectSecret) === \"string\"), \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n        }\n        else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"ropsten\":\n                host = \"ropsten.infura.io\";\n                break;\n            case \"rinkeby\":\n                host = \"rinkeby.infura.io\";\n                break;\n            case \"kovan\":\n                host = \"kovan.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-kovan\":\n                host = \"optimism-kovan.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arbitrum-rinkeby.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        const connection = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt, url) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\n//# sourceMappingURL=infura-provider.js.map","import { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// Experimental\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [];\n        }\n        const inflightRequest = { request, resolve: null, reject: null };\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n        this._pendingBatch.push(inflightRequest);\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            error.code = payload.error.code;\n                            error.data = payload.error.data;\n                            inflightRequest.reject(error);\n                        }\n                        else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n            }, 10);\n        }\n        return promise;\n    }\n}\n//# sourceMappingURL=json-rpc-batch-provider.js.map","/* istanbul ignore file */\n\"use strict\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n    static getUrl(network, apiKey) {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n//# sourceMappingURL=nodesmith-provider.js.map","\"use strict\";\nimport { getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// These are load-balancer-based application IDs\nconst defaultApplicationIds = {\n    homestead: \"6004bcd10040261633ade990\",\n    ropsten: \"6004bd4d0040261633ade991\",\n    rinkeby: \"6004bda20040261633ade994\",\n    goerli: \"6004bd860040261633ade992\",\n};\nexport class PocketProvider extends UrlJsonRpcProvider {\n    constructor(network, apiKey) {\n        // We need a bit of creativity in the constructor because\n        // Pocket uses different default API keys based on the network\n        if (apiKey == null) {\n            const n = getStatic(new.target, \"getNetwork\")(network);\n            if (n) {\n                const applicationId = defaultApplicationIds[n.name];\n                if (applicationId) {\n                    apiKey = {\n                        applicationId: applicationId,\n                        loadBalancer: true\n                    };\n                }\n            }\n            // If there was any issue above, we don't know this network\n            if (apiKey == null) {\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n            }\n        }\n        super(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        // Most API Providers allow null to get the default configuration, but\n        // Pocket requires the network to decide the default provider, so we\n        // rely on hijacking the constructor to add a sensible default for us\n        if (apiKey == null) {\n            logger.throwArgumentError(\"PocketProvider.getApiKey does not support null apiKey\", \"apiKey\", apiKey);\n        }\n        const apiKeyObj = {\n            applicationId: null,\n            loadBalancer: false,\n            applicationSecretKey: null\n        };\n        // Parse applicationId and applicationSecretKey\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n        }\n        else if (apiKey.applicationSecretKey != null) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"applicationSecretKey requires an applicationId\", \"applicationId\", apiKey.applicationId);\n            logger.assertArgument((typeof (apiKey.applicationSecretKey) === \"string\"), \"invalid applicationSecretKey\", \"applicationSecretKey\", \"[REDACTED]\");\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else if (apiKey.applicationId) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"apiKey.applicationId must be a string\", \"apiKey.applicationId\", apiKey.applicationId);\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        let url = null;\n        if (apiKey.loadBalancer) {\n            url = `https:/\\/${host}/v1/lb/${apiKey.applicationId}`;\n        }\n        else {\n            url = `https:/\\/${host}/v1/${apiKey.applicationId}`;\n        }\n        const connection = { url };\n        // Initialize empty headers\n        connection.headers = {};\n        // Apply application secret key\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.applicationId === defaultApplicationIds[this.network.name]);\n    }\n}\n//# sourceMappingURL=pocket-provider.js.map","\"use strict\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nlet _nextId = 1;\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n    const fetcher = \"Web3LegacyFetcher\";\n    return function (method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n            sendFunc(request, (error, response) => {\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n                    return reject(error);\n                }\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    error.code = response.error.code;\n                    error.data = response.error.data;\n                    return reject(error);\n                }\n                resolve(response.result);\n            });\n        });\n    };\n}\nfunction buildEip1193Fetcher(provider) {\n    return function (method, params) {\n        if (params == null) {\n            params = [];\n        }\n        const request = { method, params };\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n            return response;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n            throw error;\n        });\n    };\n}\nexport class Web3Provider extends JsonRpcProvider {\n    constructor(provider, network) {\n        logger.checkNew(new.target, Web3Provider);\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n        let path = null;\n        let jsonRpcFetchFunc = null;\n        let subprovider = null;\n        if (typeof (provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n        }\n        else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n            subprovider = provider;\n            if (provider.request) {\n                if (path === \"\") {\n                    path = \"eip-1193:\";\n                }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            }\n            else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            }\n            else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            }\n            else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n            if (!path) {\n                path = \"unknown:\";\n            }\n        }\n        super(path, network);\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n    send(method, params) {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n//# sourceMappingURL=web3-provider.js.map","\"use strict\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { BaseProvider, Resolver } from \"./base-provider\";\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Helper Functions\nfunction getDefaultProvider(network, options) {\n    if (network == null) {\n        network = \"homestead\";\n    }\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof (network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1]) {\n                case \"http\":\n                    return new JsonRpcProvider(network);\n                case \"ws\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n    return n._defaultProvider({\n        FallbackProvider,\n        AlchemyProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n        IpcProvider,\n    }, options);\n}\n////////////////////////\n// Exports\nexport { \n// Abstract Providers (or Abstract-ish)\nProvider, BaseProvider, Resolver, UrlJsonRpcProvider, \n///////////////////////\n// Concrete Providers\nFallbackProvider, AlchemyProvider, AlchemyWebSocketProvider, CloudflareProvider, EtherscanProvider, InfuraProvider, InfuraWebSocketProvider, JsonRpcProvider, JsonRpcBatchProvider, NodesmithProvider, PocketProvider, StaticJsonRpcProvider, Web3Provider, WebSocketProvider, IpcProvider, \n///////////////////////\n// Signer\nJsonRpcSigner, \n///////////////////////\n// Functions\ngetDefaultProvider, getNetwork, isCommunityResource, isCommunityResourcable, showThrottleMessage, \n///////////////////////\n// Objects\nFormatter };\n//# sourceMappingURL=index.js.map","export const version = \"solidity/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case \"address\":\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\" : \"0x00\");\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n    }\n    let match = type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\");\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = BigNumber.from(value).toTwos(size);\n        return zeroPad(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type);\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${type}`, \"value\", value);\n        }\n        if (isArray) {\n            return arrayify((value + Zeros).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${type}`, \"value\", value);\n        }\n        const result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n    return logger.throwArgumentError(\"invalid type\", \"type\", type);\n}\n// @TODO: Array Enum\nexport function pack(types, values) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values);\n    }\n    const tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\nexport function keccak256(types, values) {\n    return hashKeccak256(pack(types, values));\n}\nexport function sha256(types, values) {\n    return hashSha256(pack(types, values));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\nexport function formatBytes32String(text) {\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([bytes, HashZero]).slice(0, 32));\n}\nexport function parseBytes32String(bytes) {\n    const data = arrayify(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n//# sourceMappingURL=bytes32.js.map","export const version = \"ethers/5.5.2\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\nimport * as constants from \"@ethersproject/constants\";\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\nimport * as utils from \"./utils\";\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n////////////////////////\n// Compile-Time Constants\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Exports\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist };\n//# sourceMappingURL=ethers.js.map","\"use strict\";\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\nimport * as ethers from \"./ethers\";\ntry {\n    const anyGlobal = window;\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n}\ncatch (error) { }\nexport { ethers };\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist } from \"./ethers\";\n//# sourceMappingURL=index.js.map","export const version = \"random/5.5.0\";\n//# sourceMappingURL=_version.js.map"],"sourceRoot":""}